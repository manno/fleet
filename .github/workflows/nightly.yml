name: Nightly Images Build

on:
  schedule:
    # doing builds Tue-Sat, so we have changes from Fri
    # available already on Sat
    - cron:  '0 0 * * 2-6'
  workflow_dispatch:

permissions:
  contents: read
  packages: read

env:
  SETUP_GO_VERSION: '^1.18'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      -
        name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}
      -
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Create Nightly Version
        id: nightly
        run:
          version=$(git describe --long --tags --always --match 'v[0-9]\.*')-nightly
          echo ::set-output name=VERSION::${version}
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        env:
          VERSION: ${{ steps.nightly.outputs.VERSION }}
        with:
          distribution: goreleaser
          version: 1.11.5
          args: release --rm-dist --snapshot --skip-publish
      -
        name: Build Helm Chart
        env:
          VERSION: ${{ steps.nightly.outputs.VERSION }}
        run: |
          sed -i \
            -e 's/version:.*/version: '${VERSION}'/' \
            -e 's/appVersion:.*/appVersion: '${VERSION}'/' \
            build/charts/fleet/Chart.yaml

          sed -i \
              -e 's/tag:.*/tag: '${VERSION}'/' \
              build/charts/fleet/values.yaml

          sed -i \
              -e 's/version:.*/version: '${VERSION}'/' \
              -e 's/appVersion:.*/appVersion: '${VERSION}'/' \
              build/charts/fleet-crd/Chart.yaml

          sed -i \
              -e 's/version:.*/version: '${VERSION}'/' \
              -e 's/appVersion:.*/appVersion: '${VERSION}'/' \
              build/charts/fleet-agent/Chart.yaml

          sed -i \
              -e 's/tag: dev/tag: '${VERSION}'/' \
              build/charts/fleet-agent/values.yaml

          helm package -d ./dist/artifacts ./build/charts/fleet
          helm package -d ./dist/artifacts ./build/charts/fleet-crd
          helm package -d ./dist/artifacts ./build/charts/fleet-agent
      -
        name: Upload Charts
        uses: actions/upload-artifact@v3
        with:
          name: helm-charts-${{ steps.nightly.outputs.VERSION }}
          path: |
            ./dist/artifacts/*.tgz
          retention-days: 3
