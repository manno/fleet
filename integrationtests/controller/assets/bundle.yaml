apiVersion: fleet.cattle.io/v1alpha1
kind: Bundle
metadata:
  name: test-name-app
  namespace: fleet-local
spec:
  defaultNamespace: external-secrets
  helm:
    chart: external-secrets
    repo: https://charts.external-secrets.io/
  ignore: {}
  resources:
  - content: |
      apiVersion: v2
      appVersion: v0.9.11
      description: External secret management for Kubernetes
      home: https://github.com/external-secrets/external-secrets
      icon: https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/eso-logo-large.png
      keywords:
      - kubernetes-external-secrets
      - secrets
      kubeVersion: '>= 1.19.0-0'
      maintainers:
      - email: kellinmcavoy@gmail.com
        name: mcavoyk
      name: external-secrets
      type: application
      version: 0.9.11
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/Chart.yaml
  - content: |
      # External Secrets

      <p align="left"><img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/eso-logo-large.png" width="100x" /></p>

      [//]: # (README.md generated by gotmpl. DO NOT EDIT.)

      ![Type: application](https://img.shields.io/badge/Type-application-informational?style=flat-square) ![Version: 0.9.11](https://img.shields.io/badge/Version-0.9.11-informational?style=flat-square)

      External secret management for Kubernetes

      ## TL;DR
      ```bash
      helm repo add external-secrets https://charts.external-secrets.io
      helm install external-secrets external-secrets/external-secrets
      ```

      ## Installing the Chart
      To install the chart with the release name `external-secrets`:
      ```bash
      helm install external-secrets external-secrets/external-secrets
      ```

      ### Custom Resources
      By default, the chart will install external-secrets CRDs, this can be controlled with `installCRDs` value.

      ## Uninstalling the Chart
      To uninstall the `external-secrets` deployment:
      ```bash
      helm uninstall external-secrets
      ```
      The command removes all the Kubernetes components associated with the chart and deletes the release.

      ## Values

      | Key | Type | Default | Description |
      |-----|------|---------|-------------|
      | affinity | object | `{}` |  |
      | certController.affinity | object | `{}` |  |
      | certController.create | bool | `true` | Specifies whether a certificate controller deployment be created. |
      | certController.deploymentAnnotations | object | `{}` | Annotations to add to Deployment |
      | certController.extraArgs | object | `{}` |  |
      | certController.extraEnv | list | `[]` |  |
      | certController.extraVolumeMounts | list | `[]` |  |
      | certController.extraVolumes | list | `[]` |  |
      | certController.fullnameOverride | string | `""` |  |
      | certController.hostNetwork | bool | `false` | Run the certController on the host network |
      | certController.image.pullPolicy | string | `"IfNotPresent"` |  |
      | certController.image.repository | string | `"ghcr.io/external-secrets/external-secrets"` |  |
      | certController.image.tag | string | `""` |  |
      | certController.imagePullSecrets | list | `[]` |  |
      | certController.metrics.listen.port | int | `8080` |  |
      | certController.metrics.service.annotations | object | `{}` | Additional service annotations |
      | certController.metrics.service.enabled | bool | `false` | Enable if you use another monitoring tool than Prometheus to scrape the metrics |
      | certController.metrics.service.port | int | `8080` | Metrics service port to scrape |
      | certController.nameOverride | string | `""` |  |
      | certController.nodeSelector | object | `{}` |  |
      | certController.podAnnotations | object | `{}` | Annotations to add to Pod |
      | certController.podDisruptionBudget | object | `{"enabled":false,"minAvailable":1}` | Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/ |
      | certController.podLabels | object | `{}` |  |
      | certController.podSecurityContext | object | `{}` |  |
      | certController.priorityClassName | string | `""` | Pod priority class name. |
      | certController.rbac.create | bool | `true` | Specifies whether role and rolebinding resources should be created. |
      | certController.readinessProbe.address | string | `""` | Address for readiness probe |
      | certController.readinessProbe.port | int | `8081` | ReadinessProbe port for kubelet |
      | certController.replicaCount | int | `1` |  |
      | certController.requeueInterval | string | `"5m"` |  |
      | certController.resources | object | `{}` |  |
      | certController.revisionHistoryLimit | int | `10` | Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy) |
      | certController.securityContext.allowPrivilegeEscalation | bool | `false` |  |
      | certController.securityContext.capabilities.drop[0] | string | `"ALL"` |  |
      | certController.securityContext.readOnlyRootFilesystem | bool | `true` |  |
      | certController.securityContext.runAsNonRoot | bool | `true` |  |
      | certController.securityContext.runAsUser | int | `1000` |  |
      | certController.securityContext.seccompProfile.type | string | `"RuntimeDefault"` |  |
      | certController.serviceAccount.annotations | object | `{}` | Annotations to add to the service account. |
      | certController.serviceAccount.automount | bool | `true` | Automounts the service account token in all containers of the pod |
      | certController.serviceAccount.create | bool | `true` | Specifies whether a service account should be created. |
      | certController.serviceAccount.extraLabels | object | `{}` | Extra Labels to add to the service account. |
      | certController.serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template. |
      | certController.tolerations | list | `[]` |  |
      | certController.topologySpreadConstraints | list | `[]` |  |
      | commonLabels | object | `{}` | Additional labels added to all helm chart resources. |
      | concurrent | int | `1` | Specifies the number of concurrent ExternalSecret Reconciles external-secret executes at a time. |
      | controllerClass | string | `""` | If set external secrets will filter matching Secret Stores with the appropriate controller values. |
      | crds.annotations | object | `{}` |  |
      | crds.conversion.enabled | bool | `true` |  |
      | crds.createClusterExternalSecret | bool | `true` | If true, create CRDs for Cluster External Secret. |
      | crds.createClusterSecretStore | bool | `true` | If true, create CRDs for Cluster Secret Store. |
      | crds.createPushSecret | bool | `true` | If true, create CRDs for Push Secret. |
      | createOperator | bool | `true` | Specifies whether an external secret operator deployment be created. |
      | deploymentAnnotations | object | `{}` | Annotations to add to Deployment |
      | dnsConfig | object | `{}` | Specifies `dnsOptions` to deployment |
      | extendedMetricLabels | bool | `false` | If true external secrets will use recommended kubernetes annotations as prometheus metric labels. |
      | extraArgs | object | `{}` |  |
      | extraContainers | list | `[]` |  |
      | extraEnv | list | `[]` |  |
      | extraVolumeMounts | list | `[]` |  |
      | extraVolumes | list | `[]` |  |
      | fullnameOverride | string | `""` |  |
      | hostNetwork | bool | `false` | Run the controller on the host network |
      | image.pullPolicy | string | `"IfNotPresent"` |  |
      | image.repository | string | `"ghcr.io/external-secrets/external-secrets"` |  |
      | image.tag | string | `""` | The image tag to use. The default is the chart appVersion. There are different image flavours available, like distroless and ubi. Please see GitHub release notes for image tags for these flavors. By default the distroless image is used. |
      | imagePullSecrets | list | `[]` |  |
      | installCRDs | bool | `true` | If set, install and upgrade CRDs through helm chart. |
      | leaderElect | bool | `false` | If true, external-secrets will perform leader election between instances to ensure no more than one instance of external-secrets operates at a time. |
      | metrics.listen.port | int | `8080` |  |
      | metrics.service.annotations | object | `{}` | Additional service annotations |
      | metrics.service.enabled | bool | `false` | Enable if you use another monitoring tool than Prometheus to scrape the metrics |
      | metrics.service.port | int | `8080` | Metrics service port to scrape |
      | nameOverride | string | `""` |  |
      | nodeSelector | object | `{}` |  |
      | podAnnotations | object | `{}` | Annotations to add to Pod |
      | podDisruptionBudget | object | `{"enabled":false,"minAvailable":1}` | Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/ |
      | podLabels | object | `{}` |  |
      | podSecurityContext | object | `{}` |  |
      | podSpecExtra | object | `{}` | Any extra pod spec on the deployment |
      | priorityClassName | string | `""` | Pod priority class name. |
      | processClusterExternalSecret | bool | `true` | if true, the operator will process cluster external secret. Else, it will ignore them. |
      | processClusterStore | bool | `true` | if true, the operator will process cluster store. Else, it will ignore them. |
      | processPushSecret | bool | `true` | if true, the operator will process push secret. Else, it will ignore them. |
      | rbac.create | bool | `true` | Specifies whether role and rolebinding resources should be created. |
      | rbac.servicebindings.create | bool | `true` | Specifies whether a clusterrole to give servicebindings read access should be created. |
      | replicaCount | int | `1` |  |
      | resources | object | `{}` |  |
      | revisionHistoryLimit | int | `10` | Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy) |
      | scopedNamespace | string | `""` | If set external secrets are only reconciled in the provided namespace |
      | scopedRBAC | bool | `false` | Must be used with scopedNamespace. If true, create scoped RBAC roles under the scoped namespace and implicitly disable cluster stores and cluster external secrets |
      | securityContext.allowPrivilegeEscalation | bool | `false` |  |
      | securityContext.capabilities.drop[0] | string | `"ALL"` |  |
      | securityContext.readOnlyRootFilesystem | bool | `true` |  |
      | securityContext.runAsNonRoot | bool | `true` |  |
      | securityContext.runAsUser | int | `1000` |  |
      | securityContext.seccompProfile.type | string | `"RuntimeDefault"` |  |
      | serviceAccount.annotations | object | `{}` | Annotations to add to the service account. |
      | serviceAccount.automount | bool | `true` | Automounts the service account token in all containers of the pod |
      | serviceAccount.create | bool | `true` | Specifies whether a service account should be created. |
      | serviceAccount.extraLabels | object | `{}` | Extra Labels to add to the service account. |
      | serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template. |
      | serviceMonitor.additionalLabels | object | `{}` | Additional labels |
      | serviceMonitor.enabled | bool | `false` | Specifies whether to create a ServiceMonitor resource for collecting Prometheus metrics |
      | serviceMonitor.honorLabels | bool | `false` | Let prometheus add an exported_ prefix to conflicting labels |
      | serviceMonitor.interval | string | `"30s"` | Interval to scrape metrics |
      | serviceMonitor.metricRelabelings | list | `[]` | Metric relabel configs to apply to samples before ingestion. [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs) |
      | serviceMonitor.namespace | string | `""` | namespace where you want to install ServiceMonitors |
      | serviceMonitor.relabelings | list | `[]` | Relabel configs to apply to samples before ingestion. [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config) |
      | serviceMonitor.scrapeTimeout | string | `"25s"` | Timeout if metrics can't be retrieved in given time interval |
      | tolerations | list | `[]` |  |
      | topologySpreadConstraints | list | `[]` |  |
      | webhook.affinity | object | `{}` |  |
      | webhook.certCheckInterval | string | `"5m"` | Specifices the time to check if the cert is valid |
      | webhook.certDir | string | `"/tmp/certs"` |  |
      | webhook.certManager.addInjectorAnnotations | bool | `true` | Automatically add the cert-manager.io/inject-ca-from annotation to the webhooks and CRDs. As long as you have the cert-manager CA Injector enabled, this will automatically setup your webhook's CA to the one used by cert-manager. See https://cert-manager.io/docs/concepts/ca-injector |
      | webhook.certManager.cert.annotations | object | `{}` | Add extra annotations to the Certificate resource. |
      | webhook.certManager.cert.create | bool | `true` | Create a certificate resource within this chart. See https://cert-manager.io/docs/usage/certificate/ |
      | webhook.certManager.cert.duration | string | `""` | Set the requested duration (i.e. lifetime) of the Certificate. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec |
      | webhook.certManager.cert.issuerRef | object | `{"group":"cert-manager.io","kind":"Issuer","name":"my-issuer"}` | For the Certificate created by this chart, setup the issuer. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.IssuerSpec |
      | webhook.certManager.cert.renewBefore | string | `""` | How long before the currently issued certificate’s expiry cert-manager should renew the certificate. See https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec Note that renewBefore should be greater than .webhook.lookaheadInterval since the webhook will check this far in advance that the certificate is valid. |
      | webhook.certManager.enabled | bool | `false` | Enabling cert-manager support will disable the built in secret and switch to using cert-manager (installed separately) to automatically issue and renew the webhook certificate. This chart does not install cert-manager for you, See https://cert-manager.io/docs/ |
      | webhook.create | bool | `true` | Specifies whether a webhook deployment be created. |
      | webhook.deploymentAnnotations | object | `{}` | Annotations to add to Deployment |
      | webhook.extraArgs | object | `{}` |  |
      | webhook.extraEnv | list | `[]` |  |
      | webhook.extraVolumeMounts | list | `[]` |  |
      | webhook.extraVolumes | list | `[]` |  |
      | webhook.failurePolicy | string | `"Fail"` | Specifies whether validating webhooks should be created with failurePolicy: Fail or Ignore |
      | webhook.fullnameOverride | string | `""` |  |
      | webhook.hostNetwork | bool | `false` | Specifies if webhook pod should use hostNetwork or not. |
      | webhook.image.pullPolicy | string | `"IfNotPresent"` |  |
      | webhook.image.repository | string | `"ghcr.io/external-secrets/external-secrets"` |  |
      | webhook.image.tag | string | `""` | The image tag to use. The default is the chart appVersion. |
      | webhook.imagePullSecrets | list | `[]` |  |
      | webhook.lookaheadInterval | string | `""` | Specifices the lookaheadInterval for certificate validity |
      | webhook.metrics.listen.port | int | `8080` |  |
      | webhook.metrics.service.annotations | object | `{}` | Additional service annotations |
      | webhook.metrics.service.enabled | bool | `false` | Enable if you use another monitoring tool than Prometheus to scrape the metrics |
      | webhook.metrics.service.port | int | `8080` | Metrics service port to scrape |
      | webhook.nameOverride | string | `""` |  |
      | webhook.nodeSelector | object | `{}` |  |
      | webhook.podAnnotations | object | `{}` | Annotations to add to Pod |
      | webhook.podDisruptionBudget | object | `{"enabled":false,"minAvailable":1}` | Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/ |
      | webhook.podLabels | object | `{}` |  |
      | webhook.podSecurityContext | object | `{}` |  |
      | webhook.port | int | `10250` | The port the webhook will listen to |
      | webhook.priorityClassName | string | `""` | Pod priority class name. |
      | webhook.rbac.create | bool | `true` | Specifies whether role and rolebinding resources should be created. |
      | webhook.readinessProbe.address | string | `""` | Address for readiness probe |
      | webhook.readinessProbe.port | int | `8081` | ReadinessProbe port for kubelet |
      | webhook.replicaCount | int | `1` |  |
      | webhook.resources | object | `{}` |  |
      | webhook.revisionHistoryLimit | int | `10` | Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy) |
      | webhook.secretAnnotations | object | `{}` | Annotations to add to Secret |
      | webhook.securityContext.allowPrivilegeEscalation | bool | `false` |  |
      | webhook.securityContext.capabilities.drop[0] | string | `"ALL"` |  |
      | webhook.securityContext.readOnlyRootFilesystem | bool | `true` |  |
      | webhook.securityContext.runAsNonRoot | bool | `true` |  |
      | webhook.securityContext.runAsUser | int | `1000` |  |
      | webhook.securityContext.seccompProfile.type | string | `"RuntimeDefault"` |  |
      | webhook.serviceAccount.annotations | object | `{}` | Annotations to add to the service account. |
      | webhook.serviceAccount.automount | bool | `true` | Automounts the service account token in all containers of the pod |
      | webhook.serviceAccount.create | bool | `true` | Specifies whether a service account should be created. |
      | webhook.serviceAccount.extraLabels | object | `{}` | Extra Labels to add to the service account. |
      | webhook.serviceAccount.name | string | `""` | The name of the service account to use. If not set and create is true, a name is generated using the fullname template. |
      | webhook.tolerations | list | `[]` |  |
      | webhook.topologySpreadConstraints | list | `[]` |  |
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/README.md
  - content: |
      {{- $chartRepo := "https://charts.external-secrets.io" -}}
      {{- $org := "external-secrets" -}}
      # External Secrets

      <p align="left"><img src="https://raw.githubusercontent.com/external-secrets/external-secrets/main/assets/eso-logo-large.png" width="100x" /></p>

      [//]: # (README.md generated by gotmpl. DO NOT EDIT.)

      {{ template "chart.typeBadge" . }}{{ template "chart.versionBadge" . }}

      {{ template "chart.description" . }}

      ## TL;DR
      ```bash
      helm repo add {{ $org }} {{ $chartRepo }}
      helm install external-secrets {{ $org }}/{{ template "chart.name" . }}
      ```

      ## Installing the Chart
      To install the chart with the release name `{{ template "chart.name" . }}`:
      ```bash
      helm install {{ template "chart.name" . }} {{ $org }}/{{ template "chart.name" . }}
      ```

      ### Custom Resources
      By default, the chart will install external-secrets CRDs, this can be controlled with `installCRDs` value.

      ## Uninstalling the Chart
      To uninstall the `{{ template "chart.name" . }}` deployment:
      ```bash
      helm uninstall {{ template "chart.name" . }}
      ```
      The command removes all the Kubernetes components associated with the chart and deletes the release.

      {{ template "chart.valuesSection" . }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/README.md.gotmpl
  - content: |
      image:
        tag: main
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/ci/main-values.yaml
  - content: |+
      external-secrets has been deployed successfully!

      In order to begin using ExternalSecrets, you will need to set up a SecretStore
      or ClusterSecretStore resource (for example, by creating a 'vault' SecretStore).

      More information on the different types of SecretStores and how to configure them
      can be found in our Github: {{ .Chart.Home }}

    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/NOTES.txt
  - content: |+
      {{/*
      Expand the name of the chart.
      */}}
      {{- define "external-secrets.name" -}}
      {{- default .Chart.Name .Values.nameOverride | trunc 63 | trimSuffix "-" }}
      {{- end }}

      {{/*
      Create a default fully qualified app name.
      We truncate at 63 chars because some Kubernetes name fields are limited to this (by the DNS naming spec).
      If release name contains chart name it will be used as a full name.
      */}}
      {{- define "external-secrets.fullname" -}}
      {{- if .Values.fullnameOverride }}
      {{- .Values.fullnameOverride | trunc 63 | trimSuffix "-" }}
      {{- else }}
      {{- $name := default .Chart.Name .Values.nameOverride }}
      {{- if contains $name .Release.Name }}
      {{- .Release.Name | trunc 63 | trimSuffix "-" }}
      {{- else }}
      {{- printf "%s-%s" .Release.Name $name | trunc 63 | trimSuffix "-" }}
      {{- end }}
      {{- end }}
      {{- end }}

      {{/*
      Create chart name and version as used by the chart label.
      */}}
      {{- define "external-secrets.chart" -}}
      {{- printf "%s-%s" .Chart.Name .Chart.Version | replace "+" "_" | trunc 63 | trimSuffix "-" }}
      {{- end }}

      {{/*
      Common labels
      */}}
      {{- define "external-secrets.labels" -}}
      helm.sh/chart: {{ include "external-secrets.chart" . }}
      {{ include "external-secrets.selectorLabels" . }}
      {{- if .Chart.AppVersion }}
      app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
      {{- end }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      {{- with .Values.commonLabels }}
      {{ toYaml . }}
      {{- end }}
      {{- end }}

      {{- define "external-secrets-webhook.labels" -}}
      helm.sh/chart: {{ include "external-secrets.chart" . }}
      {{ include "external-secrets-webhook.selectorLabels" . }}
      {{- if .Chart.AppVersion }}
      app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
      {{- end }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      {{- with .Values.commonLabels }}
      {{ toYaml . }}
      {{- end }}
      {{- end }}

      {{- define "external-secrets-webhook-metrics.labels" -}}
      {{ include "external-secrets-webhook.selectorLabels" . }}
      app.kubernetes.io/metrics: "webhook"
      {{- with .Values.commonLabels }}
      {{ toYaml . }}
      {{- end }}
      {{- end }}

      {{- define "external-secrets-cert-controller.labels" -}}
      helm.sh/chart: {{ include "external-secrets.chart" . }}
      {{ include "external-secrets-cert-controller.selectorLabels" . }}
      {{- if .Chart.AppVersion }}
      app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
      {{- end }}
      app.kubernetes.io/managed-by: {{ .Release.Service }}
      {{- with .Values.commonLabels }}
      {{ toYaml . }}
      {{- end }}
      {{- end }}

      {{- define "external-secrets-cert-controller-metrics.labels" -}}
      {{ include "external-secrets-cert-controller.selectorLabels" . }}
      app.kubernetes.io/metrics: "cert-controller"
      {{- with .Values.commonLabels }}
      {{ toYaml . }}
      {{- end }}
      {{- end }}

      {{/*
      Selector labels
      */}}
      {{- define "external-secrets.selectorLabels" -}}
      app.kubernetes.io/name: {{ include "external-secrets.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
      {{- define "external-secrets-webhook.selectorLabels" -}}
      app.kubernetes.io/name: {{ include "external-secrets.name" . }}-webhook
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
      {{- define "external-secrets-cert-controller.selectorLabels" -}}
      app.kubernetes.io/name: {{ include "external-secrets.name" . }}-cert-controller
      app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
      {{/*
      Create the name of the service account to use
      */}}
      {{- define "external-secrets.serviceAccountName" -}}
      {{- if .Values.serviceAccount.create }}
      {{- default (include "external-secrets.fullname" .) .Values.serviceAccount.name }}
      {{- else }}
      {{- default "default" .Values.serviceAccount.name }}
      {{- end }}
      {{- end }}

      {{/*
      Create the name of the service account to use
      */}}
      {{- define "external-secrets-webhook.serviceAccountName" -}}
      {{- if .Values.webhook.serviceAccount.create }}
      {{- default "external-secrets-webhook" .Values.webhook.serviceAccount.name }}
      {{- else }}
      {{- default "default" .Values.webhook.serviceAccount.name }}
      {{- end }}
      {{- end }}

      {{/*
      Create the name of the service account to use
      */}}
      {{- define "external-secrets-cert-controller.serviceAccountName" -}}
      {{- if .Values.certController.serviceAccount.create }}
      {{- default "external-secrets-cert-controller" .Values.certController.serviceAccount.name }}
      {{- else }}
      {{- default "default" .Values.certController.serviceAccount.name }}
      {{- end }}
      {{- end }}

    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/_helpers.tpl
  - content: |
      {{- if and .Values.certController.create (not .Values.webhook.certManager.enable) }}
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: {{ include "external-secrets.fullname" . }}-cert-controller
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-cert-controller.labels" . | nindent 4 }}
        {{- with .Values.certController.deploymentAnnotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      spec:
        replicas: {{ .Values.certController.replicaCount }}
        revisionHistoryLimit: {{ .Values.certController.revisionHistoryLimit }}
        selector:
          matchLabels:
            {{- include "external-secrets-cert-controller.selectorLabels" . | nindent 6 }}
        template:
          metadata:
            {{- with .Values.certController.podAnnotations }}
            annotations:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            labels:
              {{- include "external-secrets-cert-controller.labels" . | nindent 8 }}
              {{- with .Values.certController.podLabels }}
                {{- toYaml . | nindent 8 }}
              {{- end }}
          spec:
            {{- with .Values.certController.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            serviceAccountName: {{ include "external-secrets-cert-controller.serviceAccountName" . }}
            automountServiceAccountToken: {{ .Values.certController.serviceAccount.automount }}
            {{- with .Values.certController.podSecurityContext }}
            securityContext:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            hostNetwork: {{ .Values.certController.hostNetwork }}
            containers:
              - name: cert-controller
                {{- with .Values.certController.securityContext }}
                securityContext:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                image: "{{ .Values.certController.image.repository }}:{{ .Values.certController.image.tag | default .Chart.AppVersion }}"
                imagePullPolicy: {{ .Values.certController.image.pullPolicy }}
                args:
                - certcontroller
                - --crd-requeue-interval={{ .Values.certController.requeueInterval }}
                - --service-name={{ include "external-secrets.fullname" . }}-webhook
                - --service-namespace={{ .Release.Namespace }}
                - --secret-name={{ include "external-secrets.fullname" . }}-webhook
                - --secret-namespace={{ .Release.Namespace }}
                - --metrics-addr=:{{ .Values.certController.metrics.listen.port }}
                - --healthz-addr={{ .Values.certController.readinessProbe.address }}:{{ .Values.certController.readinessProbe.port }}
                {{ if not .Values.crds.createClusterSecretStore -}}
                - --crd-names=externalsecrets.external-secrets.io
                - --crd-names=secretstores.external-secrets.io
                {{- end -}}
                {{- range $key, $value := .Values.certController.extraArgs }}
                  {{- if $value }}
                - --{{ $key }}={{ $value }}
                  {{- else }}
                - --{{ $key }}
                  {{- end }}
                {{- end }}
                ports:
                  - containerPort: {{ .Values.certController.metrics.listen.port }}
                    protocol: TCP
                    name: metrics
                readinessProbe:
                  httpGet:
                    port: {{ .Values.certController.readinessProbe.port }}
                    path: /readyz
                  initialDelaySeconds: 20
                  periodSeconds: 5
                {{- with .Values.certController.extraEnv }}
                env:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                {{- with .Values.certController.resources }}
                resources:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                {{- if .Values.certController.extraVolumeMounts }}
                volumeMounts:
                {{- toYaml .Values.certController.extraVolumeMounts | nindent 12 }}
                {{- end }}
            {{- if .Values.certController.extraVolumes }}
            volumes:
            {{- toYaml .Values.certController.extraVolumes | nindent 8 }}
            {{- end }}
            {{- with .Values.certController.nodeSelector }}
            nodeSelector:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.certController.affinity }}
            affinity:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.certController.tolerations }}
            tolerations:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.certController.topologySpreadConstraints }}
            topologySpreadConstraints:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- if .Values.certController.priorityClassName }}
            priorityClassName: {{ .Values.certController.priorityClassName }}
            {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/cert-controller-deployment.yaml
  - content: |
      {{- if and .Values.certController.create .Values.certController.podDisruptionBudget.enabled (not .Values.webhook.certManager.enabled) }}
      apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: {{ include "external-secrets.fullname" . }}-cert-controller-pdb
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-cert-controller.labels" . | nindent 4 }}
      spec:
        {{- if .Values.certController.podDisruptionBudget.minAvailable }}
        minAvailable: {{ .Values.certController.podDisruptionBudget.minAvailable }}
        {{- end }}
        {{- if .Values.certController.podDisruptionBudget.maxUnavailable }}
        maxUnavailable: {{ .Values.certController.podDisruptionBudget.maxUnavailable }}
        {{- end }}
        selector:
          matchLabels:
            {{- include "external-secrets-cert-controller.selectorLabels" . | nindent 6 }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/cert-controller-poddisruptionbudget.yaml
  - content: |
      {{- if and .Values.certController.create .Values.certController.rbac.create (not .Values.webhook.certManager.enabled) -}}
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: {{ include "external-secrets.fullname" . }}-cert-controller
        labels:
          {{- include "external-secrets-cert-controller.labels" . | nindent 4 }}
      rules:
        - apiGroups:
          - "apiextensions.k8s.io"
          resources:
          - "customresourcedefinitions"
          verbs:
          - "get"
          - "list"
          - "watch"
          - "update"
          - "patch"
        - apiGroups:
          - "admissionregistration.k8s.io"
          resources:
          - "validatingwebhookconfigurations"
          verbs:
          - "get"
          - "list"
          - "watch"
          - "update"
          - "patch"
        - apiGroups:
          - ""
          resources:
          - "endpoints"
          verbs:
          - "list"
          - "get"
          - "watch"
        - apiGroups:
          - ""
          resources:
          - "events"
          verbs:
          - "create"
          - "patch"
        - apiGroups:
          - ""
          resources:
          - "secrets"
          verbs:
          - "get"
          - "list"
          - "watch"
          - "update"
          - "patch"
        - apiGroups:
          - "coordination.k8s.io"
          resources:
          - "leases"
          verbs:
          - "get"
          - "create"
          - "update"
          - "patch"
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: {{ include "external-secrets.fullname" . }}-cert-controller
        labels:
          {{- include "external-secrets-cert-controller.labels" . | nindent 4 }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: {{ include "external-secrets.fullname" . }}-cert-controller
      subjects:
        - name: {{ include "external-secrets-cert-controller.serviceAccountName" . }}
          namespace: {{ .Release.Namespace | quote }}
          kind: ServiceAccount
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/cert-controller-rbac.yaml
  - content: |
      {{- if and .Values.certController.create .Values.certController.metrics.service.enabled (not .Values.webhook.certManager.enabled) }}
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ include "external-secrets.fullname" . }}-cert-controller-metrics
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
        {{- with .Values.metrics.service.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      spec:
        type: ClusterIP
        ports:
        - port: {{ .Values.certController.metrics.service.port }}
          protocol: TCP
          targetPort: metrics
          name: metrics
        selector:
          {{- include "external-secrets-cert-controller.selectorLabels" . | nindent 4 }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/cert-controller-service.yaml
  - content: |
      {{- if and .Values.certController.create .Values.certController.serviceAccount.create (not .Values.webhook.certManager.enabled) -}}
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: {{ include "external-secrets-cert-controller.serviceAccountName" . }}
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-cert-controller.labels" . | nindent 4 }}
          {{- with .Values.certController.serviceAccount.extraLabels }}
          {{- toYaml . | nindent 4 }}
          {{- end }}
        {{- with .Values.certController.serviceAccount.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/cert-controller-serviceaccount.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: acraccesstokens.generators.external-secrets.io
      spec:
        group: generators.external-secrets.io
        names:
          categories:
            - acraccesstoken
          kind: ACRAccessToken
          listKind: ACRAccessTokenList
          plural: acraccesstokens
          shortNames:
            - acraccesstoken
          singular: acraccesstoken
        scope: Namespaced
        versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: "ACRAccessToken returns a Azure Container Registry token that can be used for pushing/pulling images. Note: by default it will return an ACR Refresh Token with full access (depending on the identity). This can be scoped down to the repository level using .spec.scope. In case scope is defined it will return an ACR Access Token. \n See docs: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md"
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: 'ACRAccessTokenSpec defines how to generate the access token e.g. how to authenticate and which registry to use. see: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#overview'
                    properties:
                      auth:
                        properties:
                          managedIdentity:
                            description: ManagedIdentity uses Azure Managed Identity to authenticate with Azure.
                            properties:
                              identityId:
                                description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                type: string
                            type: object
                          servicePrincipal:
                            description: ServicePrincipal uses Azure Service Principal credentials to authenticate with Azure.
                            properties:
                              secretRef:
                                description: Configuration used to authenticate with Azure using static credentials stored in a Kind=Secret.
                                properties:
                                  clientId:
                                    description: The Azure clientId of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  clientSecret:
                                    description: The Azure ClientSecret of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - secretRef
                            type: object
                          workloadIdentity:
                            description: WorkloadIdentity uses Azure Workload Identity to authenticate with Azure.
                            properties:
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                            type: object
                        type: object
                      environmentType:
                        default: PublicCloud
                        description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                        enum:
                          - PublicCloud
                          - USGovernmentCloud
                          - ChinaCloud
                          - GermanCloud
                        type: string
                      registry:
                        description: the domain name of the ACR registry e.g. foobarexample.azurecr.io
                        type: string
                      scope:
                        description: "Define the scope for the access token, e.g. pull/push access for a repository. if not provided it will return a refresh token that has full scope. Note: you need to pin it down to the repository level, there is no wildcard available. \n examples: repository:my-repository:pull,push repository:my-repository:pull \n see docs for details: https://docs.docker.com/registry/spec/auth/scope/"
                        type: string
                      tenantId:
                        description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                        type: string
                    required:
                      - auth
                      - registry
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/acraccesstoken.yaml
  - content: |
      {{- if and (.Values.installCRDs) (.Values.crds.createClusterExternalSecret) }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: clusterexternalsecrets.external-secrets.io
      spec:
        group: external-secrets.io
        names:
          categories:
            - externalsecrets
          kind: ClusterExternalSecret
          listKind: ClusterExternalSecretList
          plural: clusterexternalsecrets
          shortNames:
            - ces
          singular: clusterexternalsecret
        scope: Cluster
        versions:
          - additionalPrinterColumns:
              - jsonPath: .spec.externalSecretSpec.secretStoreRef.name
                name: Store
                type: string
              - jsonPath: .spec.refreshTime
                name: Refresh Interval
                type: string
              - jsonPath: .status.conditions[?(@.type=="Ready")].status
                name: Ready
                type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: ClusterExternalSecret is the Schema for the clusterexternalsecrets API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ClusterExternalSecretSpec defines the desired state of ClusterExternalSecret.
                    properties:
                      externalSecretMetadata:
                        description: The metadata of the external secrets to be created
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      externalSecretName:
                        description: The name of the external secrets to be created defaults to the name of the ClusterExternalSecret
                        type: string
                      externalSecretSpec:
                        description: The spec for the ExternalSecrets to be created
                        properties:
                          data:
                            description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                            items:
                              description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                              properties:
                                remoteRef:
                                  description: RemoteRef points to the remote secret and defines which secret (version/property/..) to fetch.
                                  properties:
                                    conversionStrategy:
                                      default: Default
                                      description: Used to define a conversion Strategy
                                      enum:
                                        - Default
                                        - Unicode
                                      type: string
                                    decodingStrategy:
                                      default: None
                                      description: Used to define a decoding Strategy
                                      enum:
                                        - Auto
                                        - Base64
                                        - Base64URL
                                        - None
                                      type: string
                                    key:
                                      description: Key is the key used in the Provider, mandatory
                                      type: string
                                    metadataPolicy:
                                      default: None
                                      description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                      enum:
                                        - None
                                        - Fetch
                                      type: string
                                    property:
                                      description: Used to select a specific property of the Provider value (if a map), if supported
                                      type: string
                                    version:
                                      description: Used to select a specific version of the Provider value, if supported
                                      type: string
                                  required:
                                    - key
                                  type: object
                                secretKey:
                                  description: SecretKey defines the key in which the controller stores the value. This is the key in the Kind=Secret
                                  type: string
                                sourceRef:
                                  description: SourceRef allows you to override the source from which the value will pulled from.
                                  maxProperties: 1
                                  properties:
                                    generatorRef:
                                      description: "GeneratorRef points to a generator custom resource. \n Deprecated: The generatorRef is not implemented in .data[]. this will be removed with v1."
                                      properties:
                                        apiVersion:
                                          default: generators.external-secrets.io/v1alpha1
                                          description: Specify the apiVersion of the generator resource
                                          type: string
                                        kind:
                                          description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                          type: string
                                        name:
                                          description: Specify the name of the generator resource
                                          type: string
                                      required:
                                        - kind
                                        - name
                                      type: object
                                    storeRef:
                                      description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                      properties:
                                        kind:
                                          description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                          type: string
                                        name:
                                          description: Name of the SecretStore resource
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  type: object
                              required:
                                - remoteRef
                                - secretKey
                              type: object
                            type: array
                          dataFrom:
                            description: DataFrom is used to fetch all properties from a specific Provider data If multiple entries are specified, the Secret keys are merged in the specified order
                            items:
                              properties:
                                extract:
                                  description: 'Used to extract multiple key/value pairs from one secret Note: Extract does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                                  properties:
                                    conversionStrategy:
                                      default: Default
                                      description: Used to define a conversion Strategy
                                      enum:
                                        - Default
                                        - Unicode
                                      type: string
                                    decodingStrategy:
                                      default: None
                                      description: Used to define a decoding Strategy
                                      enum:
                                        - Auto
                                        - Base64
                                        - Base64URL
                                        - None
                                      type: string
                                    key:
                                      description: Key is the key used in the Provider, mandatory
                                      type: string
                                    metadataPolicy:
                                      default: None
                                      description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                      enum:
                                        - None
                                        - Fetch
                                      type: string
                                    property:
                                      description: Used to select a specific property of the Provider value (if a map), if supported
                                      type: string
                                    version:
                                      description: Used to select a specific version of the Provider value, if supported
                                      type: string
                                  required:
                                    - key
                                  type: object
                                find:
                                  description: 'Used to find secrets based on tags or regular expressions Note: Find does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                                  properties:
                                    conversionStrategy:
                                      default: Default
                                      description: Used to define a conversion Strategy
                                      enum:
                                        - Default
                                        - Unicode
                                      type: string
                                    decodingStrategy:
                                      default: None
                                      description: Used to define a decoding Strategy
                                      enum:
                                        - Auto
                                        - Base64
                                        - Base64URL
                                        - None
                                      type: string
                                    name:
                                      description: Finds secrets based on the name.
                                      properties:
                                        regexp:
                                          description: Finds secrets base
                                          type: string
                                      type: object
                                    path:
                                      description: A root path to start the find operations.
                                      type: string
                                    tags:
                                      additionalProperties:
                                        type: string
                                      description: Find secrets based on tags.
                                      type: object
                                  type: object
                                rewrite:
                                  description: Used to rewrite secret Keys after getting them from the secret Provider Multiple Rewrite operations can be provided. They are applied in a layered order (first to last)
                                  items:
                                    properties:
                                      regexp:
                                        description: Used to rewrite with regular expressions. The resulting key will be the output of a regexp.ReplaceAll operation.
                                        properties:
                                          source:
                                            description: Used to define the regular expression of a re.Compiler.
                                            type: string
                                          target:
                                            description: Used to define the target pattern of a ReplaceAll operation.
                                            type: string
                                        required:
                                          - source
                                          - target
                                        type: object
                                      transform:
                                        description: Used to apply string transformation on the secrets. The resulting key will be the output of the template applied by the operation.
                                        properties:
                                          template:
                                            description: Used to define the template to apply on the secret name. `.value ` will specify the secret name in the template.
                                            type: string
                                        required:
                                          - template
                                        type: object
                                    type: object
                                  type: array
                                sourceRef:
                                  description: SourceRef points to a store or generator which contains secret values ready to use. Use this in combination with Extract or Find pull values out of a specific SecretStore. When sourceRef points to a generator Extract or Find is not supported. The generator returns a static map of values
                                  maxProperties: 1
                                  properties:
                                    generatorRef:
                                      description: GeneratorRef points to a generator custom resource.
                                      properties:
                                        apiVersion:
                                          default: generators.external-secrets.io/v1alpha1
                                          description: Specify the apiVersion of the generator resource
                                          type: string
                                        kind:
                                          description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                          type: string
                                        name:
                                          description: Specify the name of the generator resource
                                          type: string
                                      required:
                                        - kind
                                        - name
                                      type: object
                                    storeRef:
                                      description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                      properties:
                                        kind:
                                          description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                          type: string
                                        name:
                                          description: Name of the SecretStore resource
                                          type: string
                                      required:
                                        - name
                                      type: object
                                  type: object
                              type: object
                            type: array
                          refreshInterval:
                            default: 1h
                            description: RefreshInterval is the amount of time before the values are read again from the SecretStore provider Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to fetch and create it once. Defaults to 1h.
                            type: string
                          secretStoreRef:
                            description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                            properties:
                              kind:
                                description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                type: string
                              name:
                                description: Name of the SecretStore resource
                                type: string
                            required:
                              - name
                            type: object
                          target:
                            default:
                              creationPolicy: Owner
                              deletionPolicy: Retain
                            description: ExternalSecretTarget defines the Kubernetes Secret to be created There can be only one target per ExternalSecret.
                            properties:
                              creationPolicy:
                                default: Owner
                                description: CreationPolicy defines rules on how to create the resulting Secret Defaults to 'Owner'
                                enum:
                                  - Owner
                                  - Orphan
                                  - Merge
                                  - None
                                type: string
                              deletionPolicy:
                                default: Retain
                                description: DeletionPolicy defines rules on how to delete the resulting Secret Defaults to 'Retain'
                                enum:
                                  - Delete
                                  - Merge
                                  - Retain
                                type: string
                              immutable:
                                description: Immutable defines if the final secret will be immutable
                                type: boolean
                              name:
                                description: Name defines the name of the Secret resource to be managed This field is immutable Defaults to the .metadata.name of the ExternalSecret resource
                                type: string
                              template:
                                description: Template defines a blueprint for the created Secret resource.
                                properties:
                                  data:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  engineVersion:
                                    default: v2
                                    description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                                    enum:
                                      - v1
                                      - v2
                                    type: string
                                  mergePolicy:
                                    default: Replace
                                    enum:
                                      - Replace
                                      - Merge
                                    type: string
                                  metadata:
                                    description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        type: object
                                    type: object
                                  templateFrom:
                                    items:
                                      properties:
                                        configMap:
                                          properties:
                                            items:
                                              items:
                                                properties:
                                                  key:
                                                    type: string
                                                  templateAs:
                                                    default: Values
                                                    enum:
                                                      - Values
                                                      - KeysAndValues
                                                    type: string
                                                required:
                                                  - key
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                          required:
                                            - items
                                            - name
                                          type: object
                                        literal:
                                          type: string
                                        secret:
                                          properties:
                                            items:
                                              items:
                                                properties:
                                                  key:
                                                    type: string
                                                  templateAs:
                                                    default: Values
                                                    enum:
                                                      - Values
                                                      - KeysAndValues
                                                    type: string
                                                required:
                                                  - key
                                                type: object
                                              type: array
                                            name:
                                              type: string
                                          required:
                                            - items
                                            - name
                                          type: object
                                        target:
                                          default: Data
                                          enum:
                                            - Data
                                            - Annotations
                                            - Labels
                                          type: string
                                      type: object
                                    type: array
                                  type:
                                    type: string
                                type: object
                            type: object
                        type: object
                      namespaceSelector:
                        description: The labels to select by to find the Namespaces to create the ExternalSecrets in.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        description: Choose namespaces by name. This field is ORed with anything that NamespaceSelector ends up choosing.
                        items:
                          type: string
                        type: array
                      refreshTime:
                        description: The time in which the controller should reconcile its objects and recheck namespaces for labels.
                        type: string
                    required:
                      - externalSecretSpec
                    type: object
                  status:
                    description: ClusterExternalSecretStatus defines the observed state of ClusterExternalSecret.
                    properties:
                      conditions:
                        items:
                          properties:
                            message:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                      externalSecretName:
                        description: ExternalSecretName is the name of the ExternalSecrets created by the ClusterExternalSecret
                        type: string
                      failedNamespaces:
                        description: Failed namespaces are the namespaces that failed to apply an ExternalSecret
                        items:
                          description: ClusterExternalSecretNamespaceFailure represents a failed namespace deployment and it's reason.
                          properties:
                            namespace:
                              description: Namespace is the namespace that failed when trying to apply an ExternalSecret
                              type: string
                            reason:
                              description: Reason is why the ExternalSecret failed to apply to the namespace
                              type: string
                          required:
                            - namespace
                          type: object
                        type: array
                      provisionedNamespaces:
                        description: ProvisionedNamespaces are the namespaces where the ClusterExternalSecret has secrets
                        items:
                          type: string
                        type: array
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/clusterexternalsecret.yaml
  - content: |
      {{- if and (.Values.installCRDs) (.Values.crds.createClusterSecretStore) }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: clustersecretstores.external-secrets.io
      spec:
        group: external-secrets.io
        names:
          categories:
            - externalsecrets
          kind: ClusterSecretStore
          listKind: ClusterSecretStoreList
          plural: clustersecretstores
          shortNames:
            - css
          singular: clustersecretstore
        scope: Cluster
        versions:
          - additionalPrinterColumns:
              - jsonPath: .metadata.creationTimestamp
                name: AGE
                type: date
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
            deprecated: true
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: SecretStoreSpec defines the desired state of SecretStore.
                    properties:
                      controller:
                        description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                        type: string
                      provider:
                        description: Used to configure the provider. Only one provider may be set
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          akeyless:
                            description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                            properties:
                              akeylessGWApiURL:
                                description: Akeyless GW API Url from which the secrets to be fetched from.
                                type: string
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Akeyless.
                                properties:
                                  kubernetesAuth:
                                    description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                                    properties:
                                      accessID:
                                        description: the Akeyless Kubernetes auth-method access-id
                                        type: string
                                      k8sConfName:
                                        description: Kubernetes-auth configuration name in Akeyless-Gateway
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - accessID
                                      - k8sConfName
                                    type: object
                                  secretRef:
                                    description: Reference to a Secret that contains the details to authenticate with Akeyless.
                                    properties:
                                      accessID:
                                        description: The SecretAccessID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessType:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessTypeParam:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              caBundle:
                                description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                            required:
                              - akeylessGWApiURL
                              - authSecretRef
                            type: object
                          alibaba:
                            description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                            properties:
                              auth:
                                description: AlibabaAuth contains a secretRef for credentials.
                                properties:
                                  rrsa:
                                    description: Authenticate against Alibaba using RRSA.
                                    properties:
                                      oidcProviderArn:
                                        type: string
                                      oidcTokenFilePath:
                                        type: string
                                      roleArn:
                                        type: string
                                      sessionName:
                                        type: string
                                    required:
                                      - oidcProviderArn
                                      - oidcTokenFilePath
                                      - roleArn
                                      - sessionName
                                    type: object
                                  secretRef:
                                    description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessKeySecretSecretRef:
                                        description: The AccessKeySecret is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - accessKeyIDSecretRef
                                      - accessKeySecretSecretRef
                                    type: object
                                type: object
                              regionID:
                                description: Alibaba Region to be used for the provider
                                type: string
                            required:
                              - auth
                              - regionID
                            type: object
                          aws:
                            description: AWS configures this store to sync secrets using AWS Secret Manager provider
                            properties:
                              auth:
                                description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                properties:
                                  jwt:
                                    description: Authenticate against AWS using service account tokens.
                                    properties:
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  secretRef:
                                    description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              region:
                                description: AWS Region to be used for the provider
                                type: string
                              role:
                                description: Role is a Role ARN which the SecretManager provider will assume
                                type: string
                              service:
                                description: Service defines which service should be used to fetch the secrets
                                enum:
                                  - SecretsManager
                                  - ParameterStore
                                type: string
                            required:
                              - region
                              - service
                            type: object
                          azurekv:
                            description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                            properties:
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                                properties:
                                  clientId:
                                    description: The Azure clientId of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  clientSecret:
                                    description: The Azure ClientSecret of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              authType:
                                default: ServicePrincipal
                                description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                                enum:
                                  - ServicePrincipal
                                  - ManagedIdentity
                                  - WorkloadIdentity
                                type: string
                              identityId:
                                description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              tenantId:
                                description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                                type: string
                              vaultUrl:
                                description: Vault Url from which the secrets to be fetched from.
                                type: string
                            required:
                              - vaultUrl
                            type: object
                          fake:
                            description: Fake configures a store with static key/value pairs
                            properties:
                              data:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                    valueMap:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    version:
                                      type: string
                                  required:
                                    - key
                                  type: object
                                type: array
                            required:
                              - data
                            type: object
                          gcpsm:
                            description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                            properties:
                              auth:
                                description: Auth defines the information necessary to authenticate against GCP
                                properties:
                                  secretRef:
                                    properties:
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  workloadIdentity:
                                    properties:
                                      clusterLocation:
                                        type: string
                                      clusterName:
                                        type: string
                                      clusterProjectID:
                                        type: string
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - clusterLocation
                                      - clusterName
                                      - serviceAccountRef
                                    type: object
                                type: object
                              projectID:
                                description: ProjectID project where secret is located
                                type: string
                            type: object
                          gitlab:
                            description: GitLab configures this store to sync secrets using GitLab Variables provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a GitLab instance.
                                properties:
                                  SecretRef:
                                    properties:
                                      accessToken:
                                        description: AccessToken is used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - SecretRef
                                type: object
                              projectID:
                                description: ProjectID specifies a project where secrets are located.
                                type: string
                              url:
                                description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                                type: string
                            required:
                              - auth
                            type: object
                          ibm:
                            description: IBM configures this store to sync secrets using IBM Cloud provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                                properties:
                                  secretRef:
                                    properties:
                                      secretApiKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - secretRef
                                type: object
                              serviceUrl:
                                description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                                type: string
                            required:
                              - auth
                            type: object
                          kubernetes:
                            description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  cert:
                                    description: has both clientCert and clientKey as secretKeySelector
                                    properties:
                                      clientCert:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      clientKey:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  serviceAccount:
                                    description: points to a service account that should be used for authentication
                                    properties:
                                      serviceAccount:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  token:
                                    description: use static token to authenticate with
                                    properties:
                                      bearerToken:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              remoteNamespace:
                                default: default
                                description: Remote namespace to fetch the secrets from
                                type: string
                              server:
                                description: configures the Kubernetes server Address.
                                properties:
                                  caBundle:
                                    description: CABundle is a base64-encoded CA certificate
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                                    properties:
                                      key:
                                        description: The key the value inside of the provider type to use, only used with "Secret" type
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  url:
                                    default: kubernetes.default
                                    description: configures the Kubernetes server Address.
                                    type: string
                                type: object
                            required:
                              - auth
                            type: object
                          oracle:
                            description: Oracle configures this store to sync secrets using Oracle Vault provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, instance principal is used. Optionally, the authenticating principal type and/or user data may be supplied for the use of workload identity and user principal.
                                properties:
                                  secretRef:
                                    description: SecretRef to pass through sensitive information.
                                    properties:
                                      fingerprint:
                                        description: Fingerprint is the fingerprint of the API private key.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      privatekey:
                                        description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - fingerprint
                                      - privatekey
                                    type: object
                                  tenancy:
                                    description: Tenancy is the tenancy OCID where user is located.
                                    type: string
                                  user:
                                    description: User is an access OCID specific to the account.
                                    type: string
                                required:
                                  - secretRef
                                  - tenancy
                                  - user
                                type: object
                              compartment:
                                description: Compartment is the vault compartment OCID. Required for PushSecret
                                type: string
                              encryptionKey:
                                description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                                type: string
                              principalType:
                                description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                                enum:
                                  - ""
                                  - UserPrincipal
                                  - InstancePrincipal
                                  - Workload
                                type: string
                              region:
                                description: Region is the region where vault is located.
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              vault:
                                description: Vault is the vault's OCID of the specific vault where secret is located.
                                type: string
                            required:
                              - region
                              - vault
                            type: object
                          vault:
                            description: Vault configures this store to sync secrets using Hashi provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Vault server.
                                properties:
                                  appRole:
                                    description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                    properties:
                                      path:
                                        default: approle
                                        description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                        type: string
                                      roleId:
                                        description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                        type: string
                                      secretRef:
                                        description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                      - roleId
                                      - secretRef
                                    type: object
                                  cert:
                                    description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                    properties:
                                      clientCert:
                                        description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  jwt:
                                    description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                    properties:
                                      kubernetesServiceAccountToken:
                                        description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                        properties:
                                          audiences:
                                            description: Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified.
                                            items:
                                              type: string
                                            type: array
                                          expirationSeconds:
                                            description: Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to 10 minutes.
                                            format: int64
                                            type: integer
                                          serviceAccountRef:
                                            description: Service account field containing the name of a kubernetes ServiceAccount.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - serviceAccountRef
                                        type: object
                                      path:
                                        default: jwt
                                        description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                        type: string
                                      role:
                                        description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                        type: string
                                      secretRef:
                                        description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                    type: object
                                  kubernetes:
                                    description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                    properties:
                                      mountPath:
                                        default: kubernetes
                                        description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                        type: string
                                      role:
                                        description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - mountPath
                                      - role
                                    type: object
                                  ldap:
                                    description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                    properties:
                                      path:
                                        default: ldap
                                        description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                        type: string
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      username:
                                        description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                        type: string
                                    required:
                                      - path
                                      - username
                                    type: object
                                  tokenSecretRef:
                                    description: TokenSecretRef authenticates with Vault by presenting a token.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caBundle:
                                description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Vault server certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              forwardInconsistent:
                                description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                                type: boolean
                              namespace:
                                description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                                type: string
                              path:
                                description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                                type: string
                              readYourWrites:
                                description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                                type: boolean
                              server:
                                description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                                type: string
                              version:
                                default: v2
                                description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                                enum:
                                  - v1
                                  - v2
                                type: string
                            required:
                              - auth
                              - server
                            type: object
                          webhook:
                            description: Webhook configures this store to sync secrets using a generic templated webhook
                            properties:
                              body:
                                description: Body
                                type: string
                              caBundle:
                                description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate webhook server certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              headers:
                                additionalProperties:
                                  type: string
                                description: Headers
                                type: object
                              method:
                                description: Webhook Method
                                type: string
                              result:
                                description: Result formatting
                                properties:
                                  jsonPath:
                                    description: Json path of return value
                                    type: string
                                type: object
                              secrets:
                                description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                                items:
                                  properties:
                                    name:
                                      description: Name of this secret in templates
                                      type: string
                                    secretRef:
                                      description: Secret ref to fill in credentials
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                  required:
                                    - name
                                    - secretRef
                                  type: object
                                type: array
                              timeout:
                                description: Timeout
                                type: string
                              url:
                                description: Webhook url to call
                                type: string
                            required:
                              - result
                              - url
                            type: object
                          yandexlockbox:
                            description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                            properties:
                              apiEndpoint:
                                description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                type: string
                              auth:
                                description: Auth defines the information necessary to authenticate against Yandex Lockbox
                                properties:
                                  authorizedKeySecretRef:
                                    description: The authorized key used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caProvider:
                                description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                properties:
                                  certSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - auth
                            type: object
                        type: object
                      retrySettings:
                        description: Used to configure http retries if failed
                        properties:
                          maxRetries:
                            format: int32
                            type: integer
                          retryInterval:
                            type: string
                        type: object
                    required:
                      - provider
                    type: object
                  status:
                    description: SecretStoreStatus defines the observed state of the SecretStore.
                    properties:
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: false
            subresources:
              status: {}
          - additionalPrinterColumns:
              - jsonPath: .metadata.creationTimestamp
                name: AGE
                type: date
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
              - jsonPath: .status.capabilities
                name: Capabilities
                type: string
              - jsonPath: .status.conditions[?(@.type=="Ready")].status
                name: Ready
                type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: ClusterSecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: SecretStoreSpec defines the desired state of SecretStore.
                    properties:
                      conditions:
                        description: Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
                        items:
                          description: ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in for a ClusterSecretStore instance.
                          properties:
                            namespaceSelector:
                              description: Choose namespace using a labelSelector
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: Choose namespaces by name
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      controller:
                        description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                        type: string
                      provider:
                        description: Used to configure the provider. Only one provider may be set
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          akeyless:
                            description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                            properties:
                              akeylessGWApiURL:
                                description: Akeyless GW API Url from which the secrets to be fetched from.
                                type: string
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Akeyless.
                                properties:
                                  kubernetesAuth:
                                    description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                                    properties:
                                      accessID:
                                        description: the Akeyless Kubernetes auth-method access-id
                                        type: string
                                      k8sConfName:
                                        description: Kubernetes-auth configuration name in Akeyless-Gateway
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - accessID
                                      - k8sConfName
                                    type: object
                                  secretRef:
                                    description: Reference to a Secret that contains the details to authenticate with Akeyless.
                                    properties:
                                      accessID:
                                        description: The SecretAccessID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessType:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessTypeParam:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              caBundle:
                                description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                                properties:
                                  key:
                                    description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                            required:
                              - akeylessGWApiURL
                              - authSecretRef
                            type: object
                          alibaba:
                            description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                            properties:
                              auth:
                                description: AlibabaAuth contains a secretRef for credentials.
                                properties:
                                  rrsa:
                                    description: Authenticate against Alibaba using RRSA.
                                    properties:
                                      oidcProviderArn:
                                        type: string
                                      oidcTokenFilePath:
                                        type: string
                                      roleArn:
                                        type: string
                                      sessionName:
                                        type: string
                                    required:
                                      - oidcProviderArn
                                      - oidcTokenFilePath
                                      - roleArn
                                      - sessionName
                                    type: object
                                  secretRef:
                                    description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessKeySecretSecretRef:
                                        description: The AccessKeySecret is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - accessKeyIDSecretRef
                                      - accessKeySecretSecretRef
                                    type: object
                                type: object
                              regionID:
                                description: Alibaba Region to be used for the provider
                                type: string
                            required:
                              - auth
                              - regionID
                            type: object
                          aws:
                            description: AWS configures this store to sync secrets using AWS Secret Manager provider
                            properties:
                              additionalRoles:
                                description: AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
                                items:
                                  type: string
                                type: array
                              auth:
                                description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                properties:
                                  jwt:
                                    description: Authenticate against AWS using service account tokens.
                                    properties:
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  secretRef:
                                    description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      sessionTokenSecretRef:
                                        description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              externalID:
                                description: AWS External ID set on assumed IAM roles
                                type: string
                              region:
                                description: AWS Region to be used for the provider
                                type: string
                              role:
                                description: Role is a Role ARN which the provider will assume
                                type: string
                              secretsManager:
                                description: SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
                                properties:
                                  forceDeleteWithoutRecovery:
                                    description: 'Specifies whether to delete the secret without any recovery window. You can''t use both this parameter and RecoveryWindowInDays in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery'
                                    type: boolean
                                  recoveryWindowInDays:
                                    description: 'The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can''t use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays'
                                    format: int64
                                    type: integer
                                type: object
                              service:
                                description: Service defines which service should be used to fetch the secrets
                                enum:
                                  - SecretsManager
                                  - ParameterStore
                                type: string
                              sessionTags:
                                description: AWS STS assume role session tags
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                    - key
                                    - value
                                  type: object
                                type: array
                              transitiveTagKeys:
                                description: AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
                                items:
                                  type: string
                                type: array
                            required:
                              - region
                              - service
                            type: object
                          azurekv:
                            description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                            properties:
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                                properties:
                                  clientId:
                                    description: The Azure clientId of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  clientSecret:
                                    description: The Azure ClientSecret of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              authType:
                                default: ServicePrincipal
                                description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                                enum:
                                  - ServicePrincipal
                                  - ManagedIdentity
                                  - WorkloadIdentity
                                type: string
                              environmentType:
                                default: PublicCloud
                                description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                                enum:
                                  - PublicCloud
                                  - USGovernmentCloud
                                  - ChinaCloud
                                  - GermanCloud
                                type: string
                              identityId:
                                description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              tenantId:
                                description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                                type: string
                              vaultUrl:
                                description: Vault Url from which the secrets to be fetched from.
                                type: string
                            required:
                              - vaultUrl
                            type: object
                          conjur:
                            description: Conjur configures this store to sync secrets using conjur provider
                            properties:
                              auth:
                                properties:
                                  apikey:
                                    properties:
                                      account:
                                        type: string
                                      apiKeyRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      userRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - account
                                      - apiKeyRef
                                      - userRef
                                    type: object
                                  jwt:
                                    properties:
                                      account:
                                        type: string
                                      secretRef:
                                        description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Conjur using the JWT authentication method.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional ServiceAccountRef specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      serviceID:
                                        description: The conjur authn jwt webservice id
                                        type: string
                                    required:
                                      - account
                                      - serviceID
                                    type: object
                                type: object
                              caBundle:
                                type: string
                              caProvider:
                                description: Used to provide custom certificate authority (CA) certificates for a secret store. The CAProvider points to a Secret or ConfigMap resource that contains a PEM-encoded certificate.
                                properties:
                                  key:
                                    description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              url:
                                type: string
                            required:
                              - auth
                              - url
                            type: object
                          delinea:
                            description: Delinea DevOps Secrets Vault https://docs.delinea.com/online-help/products/devops-secrets-vault/current
                            properties:
                              clientId:
                                description: ClientID is the non-secret part of the credential.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                              clientSecret:
                                description: ClientSecret is the secret part of the credential.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                              tenant:
                                description: Tenant is the chosen hostname / site name.
                                type: string
                              tld:
                                description: TLD is based on the server location that was chosen during provisioning. If unset, defaults to "com".
                                type: string
                              urlTemplate:
                                description: URLTemplate If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
                                type: string
                            required:
                              - clientId
                              - clientSecret
                              - tenant
                            type: object
                          doppler:
                            description: Doppler configures this store to sync secrets using the Doppler provider
                            properties:
                              auth:
                                description: Auth configures how the Operator authenticates with the Doppler API
                                properties:
                                  secretRef:
                                    properties:
                                      dopplerToken:
                                        description: The DopplerToken is used for authentication. See https://docs.doppler.com/reference/api#authentication for auth token types. The Key attribute defaults to dopplerToken if not specified.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - dopplerToken
                                    type: object
                                required:
                                  - secretRef
                                type: object
                              config:
                                description: Doppler config (required if not using a Service Token)
                                type: string
                              format:
                                description: Format enables the downloading of secrets as a file (string)
                                enum:
                                  - json
                                  - dotnet-json
                                  - env
                                  - yaml
                                  - docker
                                type: string
                              nameTransformer:
                                description: Environment variable compatible name transforms that change secret names to a different format
                                enum:
                                  - upper-camel
                                  - camel
                                  - lower-snake
                                  - tf-var
                                  - dotnet-env
                                  - lower-kebab
                                type: string
                              project:
                                description: Doppler project (required if not using a Service Token)
                                type: string
                            required:
                              - auth
                            type: object
                          fake:
                            description: Fake configures a store with static key/value pairs
                            properties:
                              data:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                    valueMap:
                                      additionalProperties:
                                        type: string
                                      description: 'Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.'
                                      type: object
                                    version:
                                      type: string
                                  required:
                                    - key
                                  type: object
                                type: array
                            required:
                              - data
                            type: object
                          gcpsm:
                            description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                            properties:
                              auth:
                                description: Auth defines the information necessary to authenticate against GCP
                                properties:
                                  secretRef:
                                    properties:
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  workloadIdentity:
                                    properties:
                                      clusterLocation:
                                        type: string
                                      clusterName:
                                        type: string
                                      clusterProjectID:
                                        type: string
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - clusterLocation
                                      - clusterName
                                      - serviceAccountRef
                                    type: object
                                type: object
                              projectID:
                                description: ProjectID project where secret is located
                                type: string
                            type: object
                          gitlab:
                            description: GitLab configures this store to sync secrets using GitLab Variables provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a GitLab instance.
                                properties:
                                  SecretRef:
                                    properties:
                                      accessToken:
                                        description: AccessToken is used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - SecretRef
                                type: object
                              environment:
                                description: Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
                                type: string
                              groupIDs:
                                description: GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
                                items:
                                  type: string
                                type: array
                              inheritFromGroups:
                                description: InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
                                type: boolean
                              projectID:
                                description: ProjectID specifies a project where secrets are located.
                                type: string
                              url:
                                description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                                type: string
                            required:
                              - auth
                            type: object
                          ibm:
                            description: IBM configures this store to sync secrets using IBM Cloud provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  containerAuth:
                                    description: IBM Container-based auth with IAM Trusted Profile.
                                    properties:
                                      iamEndpoint:
                                        type: string
                                      profile:
                                        description: the IBM Trusted Profile
                                        type: string
                                      tokenLocation:
                                        description: Location the token is mounted on the pod
                                        type: string
                                    required:
                                      - profile
                                    type: object
                                  secretRef:
                                    properties:
                                      secretApiKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              serviceUrl:
                                description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                                type: string
                            required:
                              - auth
                            type: object
                          keepersecurity:
                            description: KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
                            properties:
                              authRef:
                                description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                              folderID:
                                type: string
                            required:
                              - authRef
                              - folderID
                            type: object
                          kubernetes:
                            description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  cert:
                                    description: has both clientCert and clientKey as secretKeySelector
                                    properties:
                                      clientCert:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      clientKey:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  serviceAccount:
                                    description: points to a service account that should be used for authentication
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  token:
                                    description: use static token to authenticate with
                                    properties:
                                      bearerToken:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              remoteNamespace:
                                default: default
                                description: Remote namespace to fetch the secrets from
                                type: string
                              server:
                                description: configures the Kubernetes server Address.
                                properties:
                                  caBundle:
                                    description: CABundle is a base64-encoded CA certificate
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                                    properties:
                                      key:
                                        description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  url:
                                    default: kubernetes.default
                                    description: configures the Kubernetes server Address.
                                    type: string
                                type: object
                            required:
                              - auth
                            type: object
                          onepassword:
                            description: OnePassword configures this store to sync secrets using the 1Password Cloud provider
                            properties:
                              auth:
                                description: Auth defines the information necessary to authenticate against OnePassword Connect Server
                                properties:
                                  secretRef:
                                    description: OnePasswordAuthSecretRef holds secret references for 1Password credentials.
                                    properties:
                                      connectTokenSecretRef:
                                        description: The ConnectToken is used for authentication to a 1Password Connect Server.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - connectTokenSecretRef
                                    type: object
                                required:
                                  - secretRef
                                type: object
                              connectHost:
                                description: ConnectHost defines the OnePassword Connect Server to connect to
                                type: string
                              vaults:
                                additionalProperties:
                                  type: integer
                                description: Vaults defines which OnePassword vaults to search in which order
                                type: object
                            required:
                              - auth
                              - connectHost
                              - vaults
                            type: object
                          oracle:
                            description: Oracle configures this store to sync secrets using Oracle Vault provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, use the instance principal, otherwise the user credentials specified in Auth.
                                properties:
                                  secretRef:
                                    description: SecretRef to pass through sensitive information.
                                    properties:
                                      fingerprint:
                                        description: Fingerprint is the fingerprint of the API private key.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      privatekey:
                                        description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - fingerprint
                                      - privatekey
                                    type: object
                                  tenancy:
                                    description: Tenancy is the tenancy OCID where user is located.
                                    type: string
                                  user:
                                    description: User is an access OCID specific to the account.
                                    type: string
                                required:
                                  - secretRef
                                  - tenancy
                                  - user
                                type: object
                              compartment:
                                description: Compartment is the vault compartment OCID. Required for PushSecret
                                type: string
                              encryptionKey:
                                description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                                type: string
                              principalType:
                                description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                                enum:
                                  - ""
                                  - UserPrincipal
                                  - InstancePrincipal
                                  - Workload
                                type: string
                              region:
                                description: Region is the region where vault is located.
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              vault:
                                description: Vault is the vault's OCID of the specific vault where secret is located.
                                type: string
                            required:
                              - region
                              - vault
                            type: object
                          scaleway:
                            description: Scaleway
                            properties:
                              accessKey:
                                description: AccessKey is the non-secret part of the api key.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                              apiUrl:
                                description: APIURL is the url of the api to use. Defaults to https://api.scaleway.com
                                type: string
                              projectId:
                                description: 'ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings'
                                type: string
                              region:
                                description: 'Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone'
                                type: string
                              secretKey:
                                description: SecretKey is the non-secret part of the api key.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                            required:
                              - accessKey
                              - projectId
                              - region
                              - secretKey
                            type: object
                          senhasegura:
                            description: Senhasegura configures this store to sync secrets using senhasegura provider
                            properties:
                              auth:
                                description: Auth defines parameters to authenticate in senhasegura
                                properties:
                                  clientId:
                                    type: string
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                required:
                                  - clientId
                                  - clientSecretSecretRef
                                type: object
                              ignoreSslCertificate:
                                default: false
                                description: IgnoreSslCertificate defines if SSL certificate must be ignored
                                type: boolean
                              module:
                                description: Module defines which senhasegura module should be used to get secrets
                                type: string
                              url:
                                description: URL of senhasegura
                                type: string
                            required:
                              - auth
                              - module
                              - url
                            type: object
                          vault:
                            description: Vault configures this store to sync secrets using Hashi provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Vault server.
                                properties:
                                  appRole:
                                    description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                    properties:
                                      path:
                                        default: approle
                                        description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                        type: string
                                      roleId:
                                        description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                        type: string
                                      roleRef:
                                        description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretRef:
                                        description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                      - secretRef
                                    type: object
                                  cert:
                                    description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                    properties:
                                      clientCert:
                                        description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  iam:
                                    description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                                    properties:
                                      externalID:
                                        description: AWS External ID set on assumed IAM roles
                                        type: string
                                      jwt:
                                        description: Specify a service account with IRSA enabled
                                        properties:
                                          serviceAccountRef:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        type: object
                                      path:
                                        description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                        type: string
                                      region:
                                        description: AWS region
                                        type: string
                                      role:
                                        description: This is the AWS role to be assumed before talking to vault
                                        type: string
                                      secretRef:
                                        description: Specify credentials in a Secret object
                                        properties:
                                          accessKeyIDSecretRef:
                                            description: The AccessKeyID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretAccessKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          sessionTokenSecretRef:
                                            description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      vaultAwsIamServerID:
                                        description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                        type: string
                                      vaultRole:
                                        description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                        type: string
                                    required:
                                      - vaultRole
                                    type: object
                                  jwt:
                                    description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                    properties:
                                      kubernetesServiceAccountToken:
                                        description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                        properties:
                                          audiences:
                                            description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                            items:
                                              type: string
                                            type: array
                                          expirationSeconds:
                                            description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                            format: int64
                                            type: integer
                                          serviceAccountRef:
                                            description: Service account field containing the name of a kubernetes ServiceAccount.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - serviceAccountRef
                                        type: object
                                      path:
                                        default: jwt
                                        description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                        type: string
                                      role:
                                        description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                        type: string
                                      secretRef:
                                        description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                    type: object
                                  kubernetes:
                                    description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                    properties:
                                      mountPath:
                                        default: kubernetes
                                        description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                        type: string
                                      role:
                                        description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - mountPath
                                      - role
                                    type: object
                                  ldap:
                                    description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                    properties:
                                      path:
                                        default: ldap
                                        description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                        type: string
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      username:
                                        description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                        type: string
                                    required:
                                      - path
                                      - username
                                    type: object
                                  tokenSecretRef:
                                    description: TokenSecretRef authenticates with Vault by presenting a token.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  userPass:
                                    description: UserPass authenticates with Vault by passing username/password pair
                                    properties:
                                      path:
                                        default: user
                                        description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                                        type: string
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      username:
                                        description: Username is a user name used to authenticate using the UserPass Vault authentication method
                                        type: string
                                    required:
                                      - path
                                      - username
                                    type: object
                                type: object
                              caBundle:
                                description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Vault server certificate.
                                properties:
                                  key:
                                    description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              forwardInconsistent:
                                description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                                type: boolean
                              namespace:
                                description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                                type: string
                              path:
                                description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                                type: string
                              readYourWrites:
                                description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                                type: boolean
                              server:
                                description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                                type: string
                              version:
                                default: v2
                                description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                                enum:
                                  - v1
                                  - v2
                                type: string
                            required:
                              - auth
                              - server
                            type: object
                          webhook:
                            description: Webhook configures this store to sync secrets using a generic templated webhook
                            properties:
                              body:
                                description: Body
                                type: string
                              caBundle:
                                description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate webhook server certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              headers:
                                additionalProperties:
                                  type: string
                                description: Headers
                                type: object
                              method:
                                description: Webhook Method
                                type: string
                              result:
                                description: Result formatting
                                properties:
                                  jsonPath:
                                    description: Json path of return value
                                    type: string
                                type: object
                              secrets:
                                description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                                items:
                                  properties:
                                    name:
                                      description: Name of this secret in templates
                                      type: string
                                    secretRef:
                                      description: Secret ref to fill in credentials
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                  required:
                                    - name
                                    - secretRef
                                  type: object
                                type: array
                              timeout:
                                description: Timeout
                                type: string
                              url:
                                description: Webhook url to call
                                type: string
                            required:
                              - result
                              - url
                            type: object
                          yandexcertificatemanager:
                            description: YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
                            properties:
                              apiEndpoint:
                                description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                type: string
                              auth:
                                description: Auth defines the information necessary to authenticate against Yandex Certificate Manager
                                properties:
                                  authorizedKeySecretRef:
                                    description: The authorized key used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caProvider:
                                description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                properties:
                                  certSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - auth
                            type: object
                          yandexlockbox:
                            description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                            properties:
                              apiEndpoint:
                                description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                type: string
                              auth:
                                description: Auth defines the information necessary to authenticate against Yandex Lockbox
                                properties:
                                  authorizedKeySecretRef:
                                    description: The authorized key used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caProvider:
                                description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                properties:
                                  certSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - auth
                            type: object
                        type: object
                      refreshInterval:
                        description: Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
                        type: integer
                      retrySettings:
                        description: Used to configure http retries if failed
                        properties:
                          maxRetries:
                            format: int32
                            type: integer
                          retryInterval:
                            type: string
                        type: object
                    required:
                      - provider
                    type: object
                  status:
                    description: SecretStoreStatus defines the observed state of the SecretStore.
                    properties:
                      capabilities:
                        description: SecretStoreCapabilities defines the possible operations a SecretStore can do.
                        type: string
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/clustersecretstore.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: ecrauthorizationtokens.generators.external-secrets.io
      spec:
        group: generators.external-secrets.io
        names:
          categories:
            - ecrauthorizationtoken
          kind: ECRAuthorizationToken
          listKind: ECRAuthorizationTokenList
          plural: ecrauthorizationtokens
          shortNames:
            - ecrauthorizationtoken
          singular: ecrauthorizationtoken
        scope: Namespaced
        versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: ECRAuthorizationTokenSpec uses the GetAuthorizationToken API to retrieve an authorization token. The authorization token is valid for 12 hours. The authorizationToken returned is a base64 encoded string that can be decoded and used in a docker login command to authenticate to a registry. For more information, see Registry authentication (https://docs.aws.amazon.com/AmazonECR/latest/userguide/Registries.html#registry_auth) in the Amazon Elastic Container Registry User Guide.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      auth:
                        description: Auth defines how to authenticate with AWS
                        properties:
                          jwt:
                            description: Authenticate against AWS using service account tokens.
                            properties:
                              serviceAccountRef:
                                description: A reference to a ServiceAccount resource.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                            type: object
                          secretRef:
                            description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                            properties:
                              accessKeyIDSecretRef:
                                description: The AccessKeyID is used for authentication
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                              secretAccessKeySecretRef:
                                description: The SecretAccessKey is used for authentication
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                              sessionTokenSecretRef:
                                description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                            type: object
                        type: object
                      region:
                        description: Region specifies the region to operate in.
                        type: string
                      role:
                        description: You can assume a role before making calls to the desired AWS service.
                        type: string
                    required:
                      - region
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/ecrauthorizationtoken.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: externalsecrets.external-secrets.io
      spec:
        group: external-secrets.io
        names:
          categories:
            - externalsecrets
          kind: ExternalSecret
          listKind: ExternalSecretList
          plural: externalsecrets
          shortNames:
            - es
          singular: externalsecret
        scope: Namespaced
        versions:
          - additionalPrinterColumns:
              - jsonPath: .spec.secretStoreRef.name
                name: Store
                type: string
              - jsonPath: .spec.refreshInterval
                name: Refresh Interval
                type: string
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
            deprecated: true
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: ExternalSecret is the Schema for the external-secrets API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ExternalSecretSpec defines the desired state of ExternalSecret.
                    properties:
                      data:
                        description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                        items:
                          description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                          properties:
                            remoteRef:
                              description: ExternalSecretDataRemoteRef defines Provider data location.
                              properties:
                                conversionStrategy:
                                  default: Default
                                  description: Used to define a conversion Strategy
                                  enum:
                                    - Default
                                    - Unicode
                                  type: string
                                key:
                                  description: Key is the key used in the Provider, mandatory
                                  type: string
                                property:
                                  description: Used to select a specific property of the Provider value (if a map), if supported
                                  type: string
                                version:
                                  description: Used to select a specific version of the Provider value, if supported
                                  type: string
                              required:
                                - key
                              type: object
                            secretKey:
                              type: string
                          required:
                            - remoteRef
                            - secretKey
                          type: object
                        type: array
                      dataFrom:
                        description: DataFrom is used to fetch all properties from a specific Provider data If multiple entries are specified, the Secret keys are merged in the specified order
                        items:
                          description: ExternalSecretDataRemoteRef defines Provider data location.
                          properties:
                            conversionStrategy:
                              default: Default
                              description: Used to define a conversion Strategy
                              enum:
                                - Default
                                - Unicode
                              type: string
                            key:
                              description: Key is the key used in the Provider, mandatory
                              type: string
                            property:
                              description: Used to select a specific property of the Provider value (if a map), if supported
                              type: string
                            version:
                              description: Used to select a specific version of the Provider value, if supported
                              type: string
                          required:
                            - key
                          type: object
                        type: array
                      refreshInterval:
                        default: 1h
                        description: RefreshInterval is the amount of time before the values are read again from the SecretStore provider Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to fetch and create it once. Defaults to 1h.
                        type: string
                      secretStoreRef:
                        description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                        properties:
                          kind:
                            description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                            type: string
                          name:
                            description: Name of the SecretStore resource
                            type: string
                        required:
                          - name
                        type: object
                      target:
                        description: ExternalSecretTarget defines the Kubernetes Secret to be created There can be only one target per ExternalSecret.
                        properties:
                          creationPolicy:
                            default: Owner
                            description: CreationPolicy defines rules on how to create the resulting Secret Defaults to 'Owner'
                            enum:
                              - Owner
                              - Merge
                              - None
                            type: string
                          immutable:
                            description: Immutable defines if the final secret will be immutable
                            type: boolean
                          name:
                            description: Name defines the name of the Secret resource to be managed This field is immutable Defaults to the .metadata.name of the ExternalSecret resource
                            type: string
                          template:
                            description: Template defines a blueprint for the created Secret resource.
                            properties:
                              data:
                                additionalProperties:
                                  type: string
                                type: object
                              engineVersion:
                                default: v1
                                description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                                enum:
                                  - v1
                                  - v2
                                type: string
                              metadata:
                                description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              templateFrom:
                                items:
                                  maxProperties: 1
                                  minProperties: 1
                                  properties:
                                    configMap:
                                      properties:
                                        items:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                            required:
                                              - key
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      required:
                                        - items
                                        - name
                                      type: object
                                    secret:
                                      properties:
                                        items:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                            required:
                                              - key
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      required:
                                        - items
                                        - name
                                      type: object
                                  type: object
                                type: array
                              type:
                                type: string
                            type: object
                        type: object
                    required:
                      - secretStoreRef
                      - target
                    type: object
                  status:
                    properties:
                      binding:
                        description: Binding represents a servicebinding.io Provisioned Service reference to the secret
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                      refreshTime:
                        description: refreshTime is the time and date the external secret was fetched and the target secret updated
                        format: date-time
                        nullable: true
                        type: string
                      syncedResourceVersion:
                        description: SyncedResourceVersion keeps track of the last synced version
                        type: string
                    type: object
                type: object
            served: true
            storage: false
            subresources:
              status: {}
          - additionalPrinterColumns:
              - jsonPath: .spec.secretStoreRef.name
                name: Store
                type: string
              - jsonPath: .spec.refreshInterval
                name: Refresh Interval
                type: string
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
              - jsonPath: .status.conditions[?(@.type=="Ready")].status
                name: Ready
                type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: ExternalSecret is the Schema for the external-secrets API.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: ExternalSecretSpec defines the desired state of ExternalSecret.
                    properties:
                      data:
                        description: Data defines the connection between the Kubernetes Secret keys and the Provider data
                        items:
                          description: ExternalSecretData defines the connection between the Kubernetes Secret key (spec.data.<key>) and the Provider data.
                          properties:
                            remoteRef:
                              description: RemoteRef points to the remote secret and defines which secret (version/property/..) to fetch.
                              properties:
                                conversionStrategy:
                                  default: Default
                                  description: Used to define a conversion Strategy
                                  enum:
                                    - Default
                                    - Unicode
                                  type: string
                                decodingStrategy:
                                  default: None
                                  description: Used to define a decoding Strategy
                                  enum:
                                    - Auto
                                    - Base64
                                    - Base64URL
                                    - None
                                  type: string
                                key:
                                  description: Key is the key used in the Provider, mandatory
                                  type: string
                                metadataPolicy:
                                  default: None
                                  description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                  enum:
                                    - None
                                    - Fetch
                                  type: string
                                property:
                                  description: Used to select a specific property of the Provider value (if a map), if supported
                                  type: string
                                version:
                                  description: Used to select a specific version of the Provider value, if supported
                                  type: string
                              required:
                                - key
                              type: object
                            secretKey:
                              description: SecretKey defines the key in which the controller stores the value. This is the key in the Kind=Secret
                              type: string
                            sourceRef:
                              description: SourceRef allows you to override the source from which the value will pulled from.
                              maxProperties: 1
                              properties:
                                generatorRef:
                                  description: "GeneratorRef points to a generator custom resource. \n Deprecated: The generatorRef is not implemented in .data[]. this will be removed with v1."
                                  properties:
                                    apiVersion:
                                      default: generators.external-secrets.io/v1alpha1
                                      description: Specify the apiVersion of the generator resource
                                      type: string
                                    kind:
                                      description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                      type: string
                                    name:
                                      description: Specify the name of the generator resource
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                storeRef:
                                  description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                  properties:
                                    kind:
                                      description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                      type: string
                                    name:
                                      description: Name of the SecretStore resource
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                          required:
                            - remoteRef
                            - secretKey
                          type: object
                        type: array
                      dataFrom:
                        description: DataFrom is used to fetch all properties from a specific Provider data If multiple entries are specified, the Secret keys are merged in the specified order
                        items:
                          properties:
                            extract:
                              description: 'Used to extract multiple key/value pairs from one secret Note: Extract does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                              properties:
                                conversionStrategy:
                                  default: Default
                                  description: Used to define a conversion Strategy
                                  enum:
                                    - Default
                                    - Unicode
                                  type: string
                                decodingStrategy:
                                  default: None
                                  description: Used to define a decoding Strategy
                                  enum:
                                    - Auto
                                    - Base64
                                    - Base64URL
                                    - None
                                  type: string
                                key:
                                  description: Key is the key used in the Provider, mandatory
                                  type: string
                                metadataPolicy:
                                  default: None
                                  description: Policy for fetching tags/labels from provider secrets, possible options are Fetch, None. Defaults to None
                                  enum:
                                    - None
                                    - Fetch
                                  type: string
                                property:
                                  description: Used to select a specific property of the Provider value (if a map), if supported
                                  type: string
                                version:
                                  description: Used to select a specific version of the Provider value, if supported
                                  type: string
                              required:
                                - key
                              type: object
                            find:
                              description: 'Used to find secrets based on tags or regular expressions Note: Find does not support sourceRef.Generator or sourceRef.GeneratorRef.'
                              properties:
                                conversionStrategy:
                                  default: Default
                                  description: Used to define a conversion Strategy
                                  enum:
                                    - Default
                                    - Unicode
                                  type: string
                                decodingStrategy:
                                  default: None
                                  description: Used to define a decoding Strategy
                                  enum:
                                    - Auto
                                    - Base64
                                    - Base64URL
                                    - None
                                  type: string
                                name:
                                  description: Finds secrets based on the name.
                                  properties:
                                    regexp:
                                      description: Finds secrets base
                                      type: string
                                  type: object
                                path:
                                  description: A root path to start the find operations.
                                  type: string
                                tags:
                                  additionalProperties:
                                    type: string
                                  description: Find secrets based on tags.
                                  type: object
                              type: object
                            rewrite:
                              description: Used to rewrite secret Keys after getting them from the secret Provider Multiple Rewrite operations can be provided. They are applied in a layered order (first to last)
                              items:
                                properties:
                                  regexp:
                                    description: Used to rewrite with regular expressions. The resulting key will be the output of a regexp.ReplaceAll operation.
                                    properties:
                                      source:
                                        description: Used to define the regular expression of a re.Compiler.
                                        type: string
                                      target:
                                        description: Used to define the target pattern of a ReplaceAll operation.
                                        type: string
                                    required:
                                      - source
                                      - target
                                    type: object
                                  transform:
                                    description: Used to apply string transformation on the secrets. The resulting key will be the output of the template applied by the operation.
                                    properties:
                                      template:
                                        description: Used to define the template to apply on the secret name. `.value ` will specify the secret name in the template.
                                        type: string
                                    required:
                                      - template
                                    type: object
                                type: object
                              type: array
                            sourceRef:
                              description: SourceRef points to a store or generator which contains secret values ready to use. Use this in combination with Extract or Find pull values out of a specific SecretStore. When sourceRef points to a generator Extract or Find is not supported. The generator returns a static map of values
                              maxProperties: 1
                              properties:
                                generatorRef:
                                  description: GeneratorRef points to a generator custom resource.
                                  properties:
                                    apiVersion:
                                      default: generators.external-secrets.io/v1alpha1
                                      description: Specify the apiVersion of the generator resource
                                      type: string
                                    kind:
                                      description: Specify the Kind of the resource, e.g. Password, ACRAccessToken etc.
                                      type: string
                                    name:
                                      description: Specify the name of the generator resource
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                storeRef:
                                  description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                                  properties:
                                    kind:
                                      description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                                      type: string
                                    name:
                                      description: Name of the SecretStore resource
                                      type: string
                                  required:
                                    - name
                                  type: object
                              type: object
                          type: object
                        type: array
                      refreshInterval:
                        default: 1h
                        description: RefreshInterval is the amount of time before the values are read again from the SecretStore provider Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h" May be set to zero to fetch and create it once. Defaults to 1h.
                        type: string
                      secretStoreRef:
                        description: SecretStoreRef defines which SecretStore to fetch the ExternalSecret data.
                        properties:
                          kind:
                            description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                            type: string
                          name:
                            description: Name of the SecretStore resource
                            type: string
                        required:
                          - name
                        type: object
                      target:
                        default:
                          creationPolicy: Owner
                          deletionPolicy: Retain
                        description: ExternalSecretTarget defines the Kubernetes Secret to be created There can be only one target per ExternalSecret.
                        properties:
                          creationPolicy:
                            default: Owner
                            description: CreationPolicy defines rules on how to create the resulting Secret Defaults to 'Owner'
                            enum:
                              - Owner
                              - Orphan
                              - Merge
                              - None
                            type: string
                          deletionPolicy:
                            default: Retain
                            description: DeletionPolicy defines rules on how to delete the resulting Secret Defaults to 'Retain'
                            enum:
                              - Delete
                              - Merge
                              - Retain
                            type: string
                          immutable:
                            description: Immutable defines if the final secret will be immutable
                            type: boolean
                          name:
                            description: Name defines the name of the Secret resource to be managed This field is immutable Defaults to the .metadata.name of the ExternalSecret resource
                            type: string
                          template:
                            description: Template defines a blueprint for the created Secret resource.
                            properties:
                              data:
                                additionalProperties:
                                  type: string
                                type: object
                              engineVersion:
                                default: v2
                                description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                                enum:
                                  - v1
                                  - v2
                                type: string
                              mergePolicy:
                                default: Replace
                                enum:
                                  - Replace
                                  - Merge
                                type: string
                              metadata:
                                description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    type: object
                                  labels:
                                    additionalProperties:
                                      type: string
                                    type: object
                                type: object
                              templateFrom:
                                items:
                                  properties:
                                    configMap:
                                      properties:
                                        items:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              templateAs:
                                                default: Values
                                                enum:
                                                  - Values
                                                  - KeysAndValues
                                                type: string
                                            required:
                                              - key
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      required:
                                        - items
                                        - name
                                      type: object
                                    literal:
                                      type: string
                                    secret:
                                      properties:
                                        items:
                                          items:
                                            properties:
                                              key:
                                                type: string
                                              templateAs:
                                                default: Values
                                                enum:
                                                  - Values
                                                  - KeysAndValues
                                                type: string
                                            required:
                                              - key
                                            type: object
                                          type: array
                                        name:
                                          type: string
                                      required:
                                        - items
                                        - name
                                      type: object
                                    target:
                                      default: Data
                                      enum:
                                        - Data
                                        - Annotations
                                        - Labels
                                      type: string
                                  type: object
                                type: array
                              type:
                                type: string
                            type: object
                        type: object
                    type: object
                  status:
                    properties:
                      binding:
                        description: Binding represents a servicebinding.io Provisioned Service reference to the secret
                        properties:
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                      refreshTime:
                        description: refreshTime is the time and date the external secret was fetched and the target secret updated
                        format: date-time
                        nullable: true
                        type: string
                      syncedResourceVersion:
                        description: SyncedResourceVersion keeps track of the last synced version
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/externalsecret.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: fakes.generators.external-secrets.io
      spec:
        group: generators.external-secrets.io
        names:
          categories:
            - fake
          kind: Fake
          listKind: FakeList
          plural: fakes
          shortNames:
            - fake
          singular: fake
        scope: Namespaced
        versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Fake generator is used for testing. It lets you define a static set of credentials that is always returned.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: FakeSpec contains the static data.
                    properties:
                      controller:
                        description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters VDS based on this property'
                        type: string
                      data:
                        additionalProperties:
                          type: string
                        description: Data defines the static data returned by this generator.
                        type: object
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/fake.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: gcraccesstokens.generators.external-secrets.io
      spec:
        group: generators.external-secrets.io
        names:
          categories:
            - gcraccesstoken
          kind: GCRAccessToken
          listKind: GCRAccessTokenList
          plural: gcraccesstokens
          shortNames:
            - gcraccesstoken
          singular: gcraccesstoken
        scope: Namespaced
        versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: GCRAccessToken generates an GCP access token that can be used to authenticate with GCR.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      auth:
                        description: Auth defines the means for authenticating with GCP
                        properties:
                          secretRef:
                            properties:
                              secretAccessKeySecretRef:
                                description: The SecretAccessKey is used for authentication
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                            type: object
                          workloadIdentity:
                            properties:
                              clusterLocation:
                                type: string
                              clusterName:
                                type: string
                              clusterProjectID:
                                type: string
                              serviceAccountRef:
                                description: A reference to a ServiceAccount resource.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                            required:
                              - clusterLocation
                              - clusterName
                              - serviceAccountRef
                            type: object
                        type: object
                      projectID:
                        description: ProjectID defines which project to use to authenticate with
                        type: string
                    required:
                      - auth
                      - projectID
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/gcraccesstoken.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: passwords.generators.external-secrets.io
      spec:
        group: generators.external-secrets.io
        names:
          categories:
            - password
          kind: Password
          listKind: PasswordList
          plural: passwords
          shortNames:
            - password
          singular: password
        scope: Namespaced
        versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                description: Password generates a random password based on the configuration parameters in spec. You can specify the length, characterset and other attributes.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: PasswordSpec controls the behavior of the password generator.
                    properties:
                      allowRepeat:
                        default: false
                        description: set AllowRepeat to true to allow repeating characters.
                        type: boolean
                      digits:
                        description: Digits specifies the number of digits in the generated password. If omitted it defaults to 25% of the length of the password
                        type: integer
                      length:
                        default: 24
                        description: Length of the password to be generated. Defaults to 24
                        type: integer
                      noUpper:
                        default: false
                        description: Set NoUpper to disable uppercase characters
                        type: boolean
                      symbolCharacters:
                        description: SymbolCharacters specifies the special characters that should be used in the generated password.
                        type: string
                      symbols:
                        description: Symbols specifies the number of symbol characters in the generated password. If omitted it defaults to 25% of the length of the password
                        type: integer
                    required:
                      - allowRepeat
                      - length
                      - noUpper
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/password.yaml
  - content: |
      {{- if and (.Values.installCRDs) (.Values.crds.createPushSecret) }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: pushsecrets.external-secrets.io
      spec:
        group: external-secrets.io
        names:
          categories:
            - pushsecrets
          kind: PushSecret
          listKind: PushSecretList
          plural: pushsecrets
          singular: pushsecret
        scope: Namespaced
        versions:
          - additionalPrinterColumns:
              - jsonPath: .metadata.creationTimestamp
                name: AGE
                type: date
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
            name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: PushSecretSpec configures the behavior of the PushSecret.
                    properties:
                      data:
                        description: Secret Data that should be pushed to providers
                        items:
                          properties:
                            match:
                              description: Match a given Secret Key to be pushed to the provider.
                              properties:
                                remoteRef:
                                  description: Remote Refs to push to providers.
                                  properties:
                                    property:
                                      description: Name of the property in the resulting secret
                                      type: string
                                    remoteKey:
                                      description: Name of the resulting provider secret.
                                      type: string
                                  required:
                                    - remoteKey
                                  type: object
                                secretKey:
                                  description: Secret Key to be pushed
                                  type: string
                              required:
                                - remoteRef
                              type: object
                            metadata:
                              description: Metadata is metadata attached to the secret. The structure of metadata is provider specific, please look it up in the provider documentation.
                              x-kubernetes-preserve-unknown-fields: true
                          required:
                            - match
                          type: object
                        type: array
                      deletionPolicy:
                        default: None
                        description: 'Deletion Policy to handle Secrets in the provider. Possible Values: "Delete/None". Defaults to "None".'
                        enum:
                          - Delete
                          - None
                        type: string
                      refreshInterval:
                        description: The Interval to which External Secrets will try to push a secret definition
                        type: string
                      secretStoreRefs:
                        items:
                          properties:
                            kind:
                              default: SecretStore
                              description: Kind of the SecretStore resource (SecretStore or ClusterSecretStore) Defaults to `SecretStore`
                              type: string
                            labelSelector:
                              description: Optionally, sync to secret stores with label selector
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            name:
                              description: Optionally, sync to the SecretStore of the given name
                              type: string
                          type: object
                        type: array
                      selector:
                        description: The Secret Selector (k8s source) for the Push Secret
                        properties:
                          secret:
                            description: Select a Secret to Push.
                            properties:
                              name:
                                description: Name of the Secret. The Secret must exist in the same namespace as the PushSecret manifest.
                                type: string
                            required:
                              - name
                            type: object
                        required:
                          - secret
                        type: object
                      template:
                        description: Template defines a blueprint for the created Secret resource.
                        properties:
                          data:
                            additionalProperties:
                              type: string
                            type: object
                          engineVersion:
                            default: v2
                            description: EngineVersion specifies the template engine version that should be used to compile/execute the template specified in .data and .templateFrom[].
                            enum:
                              - v1
                              - v2
                            type: string
                          mergePolicy:
                            default: Replace
                            enum:
                              - Replace
                              - Merge
                            type: string
                          metadata:
                            description: ExternalSecretTemplateMetadata defines metadata fields for the Secret blueprint.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                type: object
                            type: object
                          templateFrom:
                            items:
                              properties:
                                configMap:
                                  properties:
                                    items:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          templateAs:
                                            default: Values
                                            enum:
                                              - Values
                                              - KeysAndValues
                                            type: string
                                        required:
                                          - key
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                  required:
                                    - items
                                    - name
                                  type: object
                                literal:
                                  type: string
                                secret:
                                  properties:
                                    items:
                                      items:
                                        properties:
                                          key:
                                            type: string
                                          templateAs:
                                            default: Values
                                            enum:
                                              - Values
                                              - KeysAndValues
                                            type: string
                                        required:
                                          - key
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                  required:
                                    - items
                                    - name
                                  type: object
                                target:
                                  default: Data
                                  enum:
                                    - Data
                                    - Annotations
                                    - Labels
                                  type: string
                              type: object
                            type: array
                          type:
                            type: string
                        type: object
                    required:
                      - secretStoreRefs
                      - selector
                    type: object
                  status:
                    description: PushSecretStatus indicates the history of the status of PushSecret.
                    properties:
                      conditions:
                        items:
                          description: PushSecretStatusCondition indicates the status of the PushSecret.
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              description: PushSecretConditionType indicates the condition of the PushSecret.
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                      refreshTime:
                        description: refreshTime is the time and date the external secret was fetched and the target secret updated
                        format: date-time
                        nullable: true
                        type: string
                      syncedPushSecrets:
                        additionalProperties:
                          additionalProperties:
                            properties:
                              match:
                                description: Match a given Secret Key to be pushed to the provider.
                                properties:
                                  remoteRef:
                                    description: Remote Refs to push to providers.
                                    properties:
                                      property:
                                        description: Name of the property in the resulting secret
                                        type: string
                                      remoteKey:
                                        description: Name of the resulting provider secret.
                                        type: string
                                    required:
                                      - remoteKey
                                    type: object
                                  secretKey:
                                    description: Secret Key to be pushed
                                    type: string
                                required:
                                  - remoteRef
                                type: object
                              metadata:
                                description: Metadata is metadata attached to the secret. The structure of metadata is provider specific, please look it up in the provider documentation.
                                x-kubernetes-preserve-unknown-fields: true
                            required:
                              - match
                            type: object
                          type: object
                        description: Synced Push Secrets for later deletion. Matches Secret Stores to PushSecretData that was stored to that secretStore.
                        type: object
                      syncedResourceVersion:
                        description: SyncedResourceVersion keeps track of the last synced version.
                        type: string
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/pushsecret.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: secretstores.external-secrets.io
      spec:
        group: external-secrets.io
        names:
          categories:
            - externalsecrets
          kind: SecretStore
          listKind: SecretStoreList
          plural: secretstores
          shortNames:
            - ss
          singular: secretstore
        scope: Namespaced
        versions:
          - additionalPrinterColumns:
              - jsonPath: .metadata.creationTimestamp
                name: AGE
                type: date
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
            deprecated: true
            name: v1alpha1
            schema:
              openAPIV3Schema:
                description: SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: SecretStoreSpec defines the desired state of SecretStore.
                    properties:
                      controller:
                        description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                        type: string
                      provider:
                        description: Used to configure the provider. Only one provider may be set
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          akeyless:
                            description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                            properties:
                              akeylessGWApiURL:
                                description: Akeyless GW API Url from which the secrets to be fetched from.
                                type: string
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Akeyless.
                                properties:
                                  kubernetesAuth:
                                    description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                                    properties:
                                      accessID:
                                        description: the Akeyless Kubernetes auth-method access-id
                                        type: string
                                      k8sConfName:
                                        description: Kubernetes-auth configuration name in Akeyless-Gateway
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - accessID
                                      - k8sConfName
                                    type: object
                                  secretRef:
                                    description: Reference to a Secret that contains the details to authenticate with Akeyless.
                                    properties:
                                      accessID:
                                        description: The SecretAccessID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessType:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessTypeParam:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              caBundle:
                                description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                            required:
                              - akeylessGWApiURL
                              - authSecretRef
                            type: object
                          alibaba:
                            description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                            properties:
                              auth:
                                description: AlibabaAuth contains a secretRef for credentials.
                                properties:
                                  rrsa:
                                    description: Authenticate against Alibaba using RRSA.
                                    properties:
                                      oidcProviderArn:
                                        type: string
                                      oidcTokenFilePath:
                                        type: string
                                      roleArn:
                                        type: string
                                      sessionName:
                                        type: string
                                    required:
                                      - oidcProviderArn
                                      - oidcTokenFilePath
                                      - roleArn
                                      - sessionName
                                    type: object
                                  secretRef:
                                    description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessKeySecretSecretRef:
                                        description: The AccessKeySecret is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - accessKeyIDSecretRef
                                      - accessKeySecretSecretRef
                                    type: object
                                type: object
                              regionID:
                                description: Alibaba Region to be used for the provider
                                type: string
                            required:
                              - auth
                              - regionID
                            type: object
                          aws:
                            description: AWS configures this store to sync secrets using AWS Secret Manager provider
                            properties:
                              auth:
                                description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                properties:
                                  jwt:
                                    description: Authenticate against AWS using service account tokens.
                                    properties:
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  secretRef:
                                    description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              region:
                                description: AWS Region to be used for the provider
                                type: string
                              role:
                                description: Role is a Role ARN which the SecretManager provider will assume
                                type: string
                              service:
                                description: Service defines which service should be used to fetch the secrets
                                enum:
                                  - SecretsManager
                                  - ParameterStore
                                type: string
                            required:
                              - region
                              - service
                            type: object
                          azurekv:
                            description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                            properties:
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                                properties:
                                  clientId:
                                    description: The Azure clientId of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  clientSecret:
                                    description: The Azure ClientSecret of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              authType:
                                default: ServicePrincipal
                                description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                                enum:
                                  - ServicePrincipal
                                  - ManagedIdentity
                                  - WorkloadIdentity
                                type: string
                              identityId:
                                description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              tenantId:
                                description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                                type: string
                              vaultUrl:
                                description: Vault Url from which the secrets to be fetched from.
                                type: string
                            required:
                              - vaultUrl
                            type: object
                          fake:
                            description: Fake configures a store with static key/value pairs
                            properties:
                              data:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                    valueMap:
                                      additionalProperties:
                                        type: string
                                      type: object
                                    version:
                                      type: string
                                  required:
                                    - key
                                  type: object
                                type: array
                            required:
                              - data
                            type: object
                          gcpsm:
                            description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                            properties:
                              auth:
                                description: Auth defines the information necessary to authenticate against GCP
                                properties:
                                  secretRef:
                                    properties:
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  workloadIdentity:
                                    properties:
                                      clusterLocation:
                                        type: string
                                      clusterName:
                                        type: string
                                      clusterProjectID:
                                        type: string
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - clusterLocation
                                      - clusterName
                                      - serviceAccountRef
                                    type: object
                                type: object
                              projectID:
                                description: ProjectID project where secret is located
                                type: string
                            type: object
                          gitlab:
                            description: GitLab configures this store to sync secrets using GitLab Variables provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a GitLab instance.
                                properties:
                                  SecretRef:
                                    properties:
                                      accessToken:
                                        description: AccessToken is used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - SecretRef
                                type: object
                              projectID:
                                description: ProjectID specifies a project where secrets are located.
                                type: string
                              url:
                                description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                                type: string
                            required:
                              - auth
                            type: object
                          ibm:
                            description: IBM configures this store to sync secrets using IBM Cloud provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                                properties:
                                  secretRef:
                                    properties:
                                      secretApiKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - secretRef
                                type: object
                              serviceUrl:
                                description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                                type: string
                            required:
                              - auth
                            type: object
                          kubernetes:
                            description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  cert:
                                    description: has both clientCert and clientKey as secretKeySelector
                                    properties:
                                      clientCert:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      clientKey:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  serviceAccount:
                                    description: points to a service account that should be used for authentication
                                    properties:
                                      serviceAccount:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  token:
                                    description: use static token to authenticate with
                                    properties:
                                      bearerToken:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              remoteNamespace:
                                default: default
                                description: Remote namespace to fetch the secrets from
                                type: string
                              server:
                                description: configures the Kubernetes server Address.
                                properties:
                                  caBundle:
                                    description: CABundle is a base64-encoded CA certificate
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                                    properties:
                                      key:
                                        description: The key the value inside of the provider type to use, only used with "Secret" type
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  url:
                                    default: kubernetes.default
                                    description: configures the Kubernetes server Address.
                                    type: string
                                type: object
                            required:
                              - auth
                            type: object
                          oracle:
                            description: Oracle configures this store to sync secrets using Oracle Vault provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, instance principal is used. Optionally, the authenticating principal type and/or user data may be supplied for the use of workload identity and user principal.
                                properties:
                                  secretRef:
                                    description: SecretRef to pass through sensitive information.
                                    properties:
                                      fingerprint:
                                        description: Fingerprint is the fingerprint of the API private key.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      privatekey:
                                        description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - fingerprint
                                      - privatekey
                                    type: object
                                  tenancy:
                                    description: Tenancy is the tenancy OCID where user is located.
                                    type: string
                                  user:
                                    description: User is an access OCID specific to the account.
                                    type: string
                                required:
                                  - secretRef
                                  - tenancy
                                  - user
                                type: object
                              compartment:
                                description: Compartment is the vault compartment OCID. Required for PushSecret
                                type: string
                              encryptionKey:
                                description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                                type: string
                              principalType:
                                description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                                enum:
                                  - ""
                                  - UserPrincipal
                                  - InstancePrincipal
                                  - Workload
                                type: string
                              region:
                                description: Region is the region where vault is located.
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              vault:
                                description: Vault is the vault's OCID of the specific vault where secret is located.
                                type: string
                            required:
                              - region
                              - vault
                            type: object
                          vault:
                            description: Vault configures this store to sync secrets using Hashi provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Vault server.
                                properties:
                                  appRole:
                                    description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                    properties:
                                      path:
                                        default: approle
                                        description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                        type: string
                                      roleId:
                                        description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                        type: string
                                      secretRef:
                                        description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                      - roleId
                                      - secretRef
                                    type: object
                                  cert:
                                    description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                    properties:
                                      clientCert:
                                        description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  jwt:
                                    description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                    properties:
                                      kubernetesServiceAccountToken:
                                        description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                        properties:
                                          audiences:
                                            description: Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified.
                                            items:
                                              type: string
                                            type: array
                                          expirationSeconds:
                                            description: Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to 10 minutes.
                                            format: int64
                                            type: integer
                                          serviceAccountRef:
                                            description: Service account field containing the name of a kubernetes ServiceAccount.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - serviceAccountRef
                                        type: object
                                      path:
                                        default: jwt
                                        description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                        type: string
                                      role:
                                        description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                        type: string
                                      secretRef:
                                        description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                    type: object
                                  kubernetes:
                                    description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                    properties:
                                      mountPath:
                                        default: kubernetes
                                        description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                        type: string
                                      role:
                                        description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - mountPath
                                      - role
                                    type: object
                                  ldap:
                                    description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                    properties:
                                      path:
                                        default: ldap
                                        description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                        type: string
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      username:
                                        description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                        type: string
                                    required:
                                      - path
                                      - username
                                    type: object
                                  tokenSecretRef:
                                    description: TokenSecretRef authenticates with Vault by presenting a token.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caBundle:
                                description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Vault server certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              forwardInconsistent:
                                description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                                type: boolean
                              namespace:
                                description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                                type: string
                              path:
                                description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                                type: string
                              readYourWrites:
                                description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                                type: boolean
                              server:
                                description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                                type: string
                              version:
                                default: v2
                                description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                                enum:
                                  - v1
                                  - v2
                                type: string
                            required:
                              - auth
                              - server
                            type: object
                          webhook:
                            description: Webhook configures this store to sync secrets using a generic templated webhook
                            properties:
                              body:
                                description: Body
                                type: string
                              caBundle:
                                description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate webhook server certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              headers:
                                additionalProperties:
                                  type: string
                                description: Headers
                                type: object
                              method:
                                description: Webhook Method
                                type: string
                              result:
                                description: Result formatting
                                properties:
                                  jsonPath:
                                    description: Json path of return value
                                    type: string
                                type: object
                              secrets:
                                description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                                items:
                                  properties:
                                    name:
                                      description: Name of this secret in templates
                                      type: string
                                    secretRef:
                                      description: Secret ref to fill in credentials
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                  required:
                                    - name
                                    - secretRef
                                  type: object
                                type: array
                              timeout:
                                description: Timeout
                                type: string
                              url:
                                description: Webhook url to call
                                type: string
                            required:
                              - result
                              - url
                            type: object
                          yandexlockbox:
                            description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                            properties:
                              apiEndpoint:
                                description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                type: string
                              auth:
                                description: Auth defines the information necessary to authenticate against Yandex Lockbox
                                properties:
                                  authorizedKeySecretRef:
                                    description: The authorized key used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caProvider:
                                description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                properties:
                                  certSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - auth
                            type: object
                        type: object
                      retrySettings:
                        description: Used to configure http retries if failed
                        properties:
                          maxRetries:
                            format: int32
                            type: integer
                          retryInterval:
                            type: string
                        type: object
                    required:
                      - provider
                    type: object
                  status:
                    description: SecretStoreStatus defines the observed state of the SecretStore.
                    properties:
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: false
            subresources:
              status: {}
          - additionalPrinterColumns:
              - jsonPath: .metadata.creationTimestamp
                name: AGE
                type: date
              - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                name: Status
                type: string
              - jsonPath: .status.capabilities
                name: Capabilities
                type: string
              - jsonPath: .status.conditions[?(@.type=="Ready")].status
                name: Ready
                type: string
            name: v1beta1
            schema:
              openAPIV3Schema:
                description: SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    description: SecretStoreSpec defines the desired state of SecretStore.
                    properties:
                      conditions:
                        description: Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
                        items:
                          description: ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in for a ClusterSecretStore instance.
                          properties:
                            namespaceSelector:
                              description: Choose namespace using a labelSelector
                              properties:
                                matchExpressions:
                                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                  items:
                                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                matchLabels:
                                  additionalProperties:
                                    type: string
                                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                  type: object
                              type: object
                              x-kubernetes-map-type: atomic
                            namespaces:
                              description: Choose namespaces by name
                              items:
                                type: string
                              type: array
                          type: object
                        type: array
                      controller:
                        description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                        type: string
                      provider:
                        description: Used to configure the provider. Only one provider may be set
                        maxProperties: 1
                        minProperties: 1
                        properties:
                          akeyless:
                            description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                            properties:
                              akeylessGWApiURL:
                                description: Akeyless GW API Url from which the secrets to be fetched from.
                                type: string
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Akeyless.
                                properties:
                                  kubernetesAuth:
                                    description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                                    properties:
                                      accessID:
                                        description: the Akeyless Kubernetes auth-method access-id
                                        type: string
                                      k8sConfName:
                                        description: Kubernetes-auth configuration name in Akeyless-Gateway
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - accessID
                                      - k8sConfName
                                    type: object
                                  secretRef:
                                    description: Reference to a Secret that contains the details to authenticate with Akeyless.
                                    properties:
                                      accessID:
                                        description: The SecretAccessID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessType:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessTypeParam:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              caBundle:
                                description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                                properties:
                                  key:
                                    description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                            required:
                              - akeylessGWApiURL
                              - authSecretRef
                            type: object
                          alibaba:
                            description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                            properties:
                              auth:
                                description: AlibabaAuth contains a secretRef for credentials.
                                properties:
                                  rrsa:
                                    description: Authenticate against Alibaba using RRSA.
                                    properties:
                                      oidcProviderArn:
                                        type: string
                                      oidcTokenFilePath:
                                        type: string
                                      roleArn:
                                        type: string
                                      sessionName:
                                        type: string
                                    required:
                                      - oidcProviderArn
                                      - oidcTokenFilePath
                                      - roleArn
                                      - sessionName
                                    type: object
                                  secretRef:
                                    description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      accessKeySecretSecretRef:
                                        description: The AccessKeySecret is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - accessKeyIDSecretRef
                                      - accessKeySecretSecretRef
                                    type: object
                                type: object
                              regionID:
                                description: Alibaba Region to be used for the provider
                                type: string
                            required:
                              - auth
                              - regionID
                            type: object
                          aws:
                            description: AWS configures this store to sync secrets using AWS Secret Manager provider
                            properties:
                              additionalRoles:
                                description: AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
                                items:
                                  type: string
                                type: array
                              auth:
                                description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                properties:
                                  jwt:
                                    description: Authenticate against AWS using service account tokens.
                                    properties:
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  secretRef:
                                    description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      sessionTokenSecretRef:
                                        description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              externalID:
                                description: AWS External ID set on assumed IAM roles
                                type: string
                              region:
                                description: AWS Region to be used for the provider
                                type: string
                              role:
                                description: Role is a Role ARN which the provider will assume
                                type: string
                              secretsManager:
                                description: SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
                                properties:
                                  forceDeleteWithoutRecovery:
                                    description: 'Specifies whether to delete the secret without any recovery window. You can''t use both this parameter and RecoveryWindowInDays in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery'
                                    type: boolean
                                  recoveryWindowInDays:
                                    description: 'The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can''t use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays'
                                    format: int64
                                    type: integer
                                type: object
                              service:
                                description: Service defines which service should be used to fetch the secrets
                                enum:
                                  - SecretsManager
                                  - ParameterStore
                                type: string
                              sessionTags:
                                description: AWS STS assume role session tags
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                    - key
                                    - value
                                  type: object
                                type: array
                              transitiveTagKeys:
                                description: AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
                                items:
                                  type: string
                                type: array
                            required:
                              - region
                              - service
                            type: object
                          azurekv:
                            description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                            properties:
                              authSecretRef:
                                description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                                properties:
                                  clientId:
                                    description: The Azure clientId of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  clientSecret:
                                    description: The Azure ClientSecret of the service principle used for authentication.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              authType:
                                default: ServicePrincipal
                                description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                                enum:
                                  - ServicePrincipal
                                  - ManagedIdentity
                                  - WorkloadIdentity
                                type: string
                              environmentType:
                                default: PublicCloud
                                description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                                enum:
                                  - PublicCloud
                                  - USGovernmentCloud
                                  - ChinaCloud
                                  - GermanCloud
                                type: string
                              identityId:
                                description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              tenantId:
                                description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                                type: string
                              vaultUrl:
                                description: Vault Url from which the secrets to be fetched from.
                                type: string
                            required:
                              - vaultUrl
                            type: object
                          conjur:
                            description: Conjur configures this store to sync secrets using conjur provider
                            properties:
                              auth:
                                properties:
                                  apikey:
                                    properties:
                                      account:
                                        type: string
                                      apiKeyRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      userRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - account
                                      - apiKeyRef
                                      - userRef
                                    type: object
                                  jwt:
                                    properties:
                                      account:
                                        type: string
                                      secretRef:
                                        description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Conjur using the JWT authentication method.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional ServiceAccountRef specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      serviceID:
                                        description: The conjur authn jwt webservice id
                                        type: string
                                    required:
                                      - account
                                      - serviceID
                                    type: object
                                type: object
                              caBundle:
                                type: string
                              caProvider:
                                description: Used to provide custom certificate authority (CA) certificates for a secret store. The CAProvider points to a Secret or ConfigMap resource that contains a PEM-encoded certificate.
                                properties:
                                  key:
                                    description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              url:
                                type: string
                            required:
                              - auth
                              - url
                            type: object
                          delinea:
                            description: Delinea DevOps Secrets Vault https://docs.delinea.com/online-help/products/devops-secrets-vault/current
                            properties:
                              clientId:
                                description: ClientID is the non-secret part of the credential.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                              clientSecret:
                                description: ClientSecret is the secret part of the credential.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                              tenant:
                                description: Tenant is the chosen hostname / site name.
                                type: string
                              tld:
                                description: TLD is based on the server location that was chosen during provisioning. If unset, defaults to "com".
                                type: string
                              urlTemplate:
                                description: URLTemplate If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
                                type: string
                            required:
                              - clientId
                              - clientSecret
                              - tenant
                            type: object
                          doppler:
                            description: Doppler configures this store to sync secrets using the Doppler provider
                            properties:
                              auth:
                                description: Auth configures how the Operator authenticates with the Doppler API
                                properties:
                                  secretRef:
                                    properties:
                                      dopplerToken:
                                        description: The DopplerToken is used for authentication. See https://docs.doppler.com/reference/api#authentication for auth token types. The Key attribute defaults to dopplerToken if not specified.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - dopplerToken
                                    type: object
                                required:
                                  - secretRef
                                type: object
                              config:
                                description: Doppler config (required if not using a Service Token)
                                type: string
                              format:
                                description: Format enables the downloading of secrets as a file (string)
                                enum:
                                  - json
                                  - dotnet-json
                                  - env
                                  - yaml
                                  - docker
                                type: string
                              nameTransformer:
                                description: Environment variable compatible name transforms that change secret names to a different format
                                enum:
                                  - upper-camel
                                  - camel
                                  - lower-snake
                                  - tf-var
                                  - dotnet-env
                                  - lower-kebab
                                type: string
                              project:
                                description: Doppler project (required if not using a Service Token)
                                type: string
                            required:
                              - auth
                            type: object
                          fake:
                            description: Fake configures a store with static key/value pairs
                            properties:
                              data:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                    valueMap:
                                      additionalProperties:
                                        type: string
                                      description: 'Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.'
                                      type: object
                                    version:
                                      type: string
                                  required:
                                    - key
                                  type: object
                                type: array
                            required:
                              - data
                            type: object
                          gcpsm:
                            description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                            properties:
                              auth:
                                description: Auth defines the information necessary to authenticate against GCP
                                properties:
                                  secretRef:
                                    properties:
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  workloadIdentity:
                                    properties:
                                      clusterLocation:
                                        type: string
                                      clusterName:
                                        type: string
                                      clusterProjectID:
                                        type: string
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - clusterLocation
                                      - clusterName
                                      - serviceAccountRef
                                    type: object
                                type: object
                              projectID:
                                description: ProjectID project where secret is located
                                type: string
                            type: object
                          gitlab:
                            description: GitLab configures this store to sync secrets using GitLab Variables provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a GitLab instance.
                                properties:
                                  SecretRef:
                                    properties:
                                      accessToken:
                                        description: AccessToken is used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - SecretRef
                                type: object
                              environment:
                                description: Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
                                type: string
                              groupIDs:
                                description: GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
                                items:
                                  type: string
                                type: array
                              inheritFromGroups:
                                description: InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
                                type: boolean
                              projectID:
                                description: ProjectID specifies a project where secrets are located.
                                type: string
                              url:
                                description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                                type: string
                            required:
                              - auth
                            type: object
                          ibm:
                            description: IBM configures this store to sync secrets using IBM Cloud provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  containerAuth:
                                    description: IBM Container-based auth with IAM Trusted Profile.
                                    properties:
                                      iamEndpoint:
                                        type: string
                                      profile:
                                        description: the IBM Trusted Profile
                                        type: string
                                      tokenLocation:
                                        description: Location the token is mounted on the pod
                                        type: string
                                    required:
                                      - profile
                                    type: object
                                  secretRef:
                                    properties:
                                      secretApiKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              serviceUrl:
                                description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                                type: string
                            required:
                              - auth
                            type: object
                          keepersecurity:
                            description: KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
                            properties:
                              authRef:
                                description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                              folderID:
                                type: string
                            required:
                              - authRef
                              - folderID
                            type: object
                          kubernetes:
                            description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                                maxProperties: 1
                                minProperties: 1
                                properties:
                                  cert:
                                    description: has both clientCert and clientKey as secretKeySelector
                                    properties:
                                      clientCert:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      clientKey:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  serviceAccount:
                                    description: points to a service account that should be used for authentication
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  token:
                                    description: use static token to authenticate with
                                    properties:
                                      bearerToken:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                type: object
                              remoteNamespace:
                                default: default
                                description: Remote namespace to fetch the secrets from
                                type: string
                              server:
                                description: configures the Kubernetes server Address.
                                properties:
                                  caBundle:
                                    description: CABundle is a base64-encoded CA certificate
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                                    properties:
                                      key:
                                        description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  url:
                                    default: kubernetes.default
                                    description: configures the Kubernetes server Address.
                                    type: string
                                type: object
                            required:
                              - auth
                            type: object
                          onepassword:
                            description: OnePassword configures this store to sync secrets using the 1Password Cloud provider
                            properties:
                              auth:
                                description: Auth defines the information necessary to authenticate against OnePassword Connect Server
                                properties:
                                  secretRef:
                                    description: OnePasswordAuthSecretRef holds secret references for 1Password credentials.
                                    properties:
                                      connectTokenSecretRef:
                                        description: The ConnectToken is used for authentication to a 1Password Connect Server.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - connectTokenSecretRef
                                    type: object
                                required:
                                  - secretRef
                                type: object
                              connectHost:
                                description: ConnectHost defines the OnePassword Connect Server to connect to
                                type: string
                              vaults:
                                additionalProperties:
                                  type: integer
                                description: Vaults defines which OnePassword vaults to search in which order
                                type: object
                            required:
                              - auth
                              - connectHost
                              - vaults
                            type: object
                          oracle:
                            description: Oracle configures this store to sync secrets using Oracle Vault provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, use the instance principal, otherwise the user credentials specified in Auth.
                                properties:
                                  secretRef:
                                    description: SecretRef to pass through sensitive information.
                                    properties:
                                      fingerprint:
                                        description: Fingerprint is the fingerprint of the API private key.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      privatekey:
                                        description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - fingerprint
                                      - privatekey
                                    type: object
                                  tenancy:
                                    description: Tenancy is the tenancy OCID where user is located.
                                    type: string
                                  user:
                                    description: User is an access OCID specific to the account.
                                    type: string
                                required:
                                  - secretRef
                                  - tenancy
                                  - user
                                type: object
                              compartment:
                                description: Compartment is the vault compartment OCID. Required for PushSecret
                                type: string
                              encryptionKey:
                                description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                                type: string
                              principalType:
                                description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                                enum:
                                  - ""
                                  - UserPrincipal
                                  - InstancePrincipal
                                  - Workload
                                type: string
                              region:
                                description: Region is the region where vault is located.
                                type: string
                              serviceAccountRef:
                                description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                properties:
                                  audiences:
                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: The name of the ServiceAccount resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                required:
                                  - name
                                type: object
                              vault:
                                description: Vault is the vault's OCID of the specific vault where secret is located.
                                type: string
                            required:
                              - region
                              - vault
                            type: object
                          scaleway:
                            description: Scaleway
                            properties:
                              accessKey:
                                description: AccessKey is the non-secret part of the api key.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                              apiUrl:
                                description: APIURL is the url of the api to use. Defaults to https://api.scaleway.com
                                type: string
                              projectId:
                                description: 'ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings'
                                type: string
                              region:
                                description: 'Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone'
                                type: string
                              secretKey:
                                description: SecretKey is the non-secret part of the api key.
                                properties:
                                  secretRef:
                                    description: SecretRef references a key in a secret that will be used as value.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  value:
                                    description: Value can be specified directly to set a value without using a secret.
                                    type: string
                                type: object
                            required:
                              - accessKey
                              - projectId
                              - region
                              - secretKey
                            type: object
                          senhasegura:
                            description: Senhasegura configures this store to sync secrets using senhasegura provider
                            properties:
                              auth:
                                description: Auth defines parameters to authenticate in senhasegura
                                properties:
                                  clientId:
                                    type: string
                                  clientSecretSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                required:
                                  - clientId
                                  - clientSecretSecretRef
                                type: object
                              ignoreSslCertificate:
                                default: false
                                description: IgnoreSslCertificate defines if SSL certificate must be ignored
                                type: boolean
                              module:
                                description: Module defines which senhasegura module should be used to get secrets
                                type: string
                              url:
                                description: URL of senhasegura
                                type: string
                            required:
                              - auth
                              - module
                              - url
                            type: object
                          vault:
                            description: Vault configures this store to sync secrets using Hashi provider
                            properties:
                              auth:
                                description: Auth configures how secret-manager authenticates with the Vault server.
                                properties:
                                  appRole:
                                    description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                    properties:
                                      path:
                                        default: approle
                                        description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                        type: string
                                      roleId:
                                        description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                        type: string
                                      roleRef:
                                        description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretRef:
                                        description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                      - secretRef
                                    type: object
                                  cert:
                                    description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                    properties:
                                      clientCert:
                                        description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  iam:
                                    description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                                    properties:
                                      externalID:
                                        description: AWS External ID set on assumed IAM roles
                                        type: string
                                      jwt:
                                        description: Specify a service account with IRSA enabled
                                        properties:
                                          serviceAccountRef:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        type: object
                                      path:
                                        description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                        type: string
                                      region:
                                        description: AWS region
                                        type: string
                                      role:
                                        description: This is the AWS role to be assumed before talking to vault
                                        type: string
                                      secretRef:
                                        description: Specify credentials in a Secret object
                                        properties:
                                          accessKeyIDSecretRef:
                                            description: The AccessKeyID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretAccessKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          sessionTokenSecretRef:
                                            description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      vaultAwsIamServerID:
                                        description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                        type: string
                                      vaultRole:
                                        description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                        type: string
                                    required:
                                      - vaultRole
                                    type: object
                                  jwt:
                                    description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                    properties:
                                      kubernetesServiceAccountToken:
                                        description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                        properties:
                                          audiences:
                                            description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                            items:
                                              type: string
                                            type: array
                                          expirationSeconds:
                                            description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                            format: int64
                                            type: integer
                                          serviceAccountRef:
                                            description: Service account field containing the name of a kubernetes ServiceAccount.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - serviceAccountRef
                                        type: object
                                      path:
                                        default: jwt
                                        description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                        type: string
                                      role:
                                        description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                        type: string
                                      secretRef:
                                        description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - path
                                    type: object
                                  kubernetes:
                                    description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                    properties:
                                      mountPath:
                                        default: kubernetes
                                        description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                        type: string
                                      role:
                                        description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                        type: string
                                      secretRef:
                                        description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      serviceAccountRef:
                                        description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - mountPath
                                      - role
                                    type: object
                                  ldap:
                                    description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                    properties:
                                      path:
                                        default: ldap
                                        description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                        type: string
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      username:
                                        description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                        type: string
                                    required:
                                      - path
                                      - username
                                    type: object
                                  tokenSecretRef:
                                    description: TokenSecretRef authenticates with Vault by presenting a token.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  userPass:
                                    description: UserPass authenticates with Vault by passing username/password pair
                                    properties:
                                      path:
                                        default: user
                                        description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                                        type: string
                                      secretRef:
                                        description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      username:
                                        description: Username is a user name used to authenticate using the UserPass Vault authentication method
                                        type: string
                                    required:
                                      - path
                                      - username
                                    type: object
                                type: object
                              caBundle:
                                description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate Vault server certificate.
                                properties:
                                  key:
                                    description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              forwardInconsistent:
                                description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                                type: boolean
                              namespace:
                                description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                                type: string
                              path:
                                description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                                type: string
                              readYourWrites:
                                description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                                type: boolean
                              server:
                                description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                                type: string
                              version:
                                default: v2
                                description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                                enum:
                                  - v1
                                  - v2
                                type: string
                            required:
                              - auth
                              - server
                            type: object
                          webhook:
                            description: Webhook configures this store to sync secrets using a generic templated webhook
                            properties:
                              body:
                                description: Body
                                type: string
                              caBundle:
                                description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                format: byte
                                type: string
                              caProvider:
                                description: The provider for the CA bundle to use to validate webhook server certificate.
                                properties:
                                  key:
                                    description: The key the value inside of the provider type to use, only used with "Secret" type
                                    type: string
                                  name:
                                    description: The name of the object located at the provider type.
                                    type: string
                                  namespace:
                                    description: The namespace the Provider type is in.
                                    type: string
                                  type:
                                    description: The type of provider to use such as "Secret", or "ConfigMap".
                                    enum:
                                      - Secret
                                      - ConfigMap
                                    type: string
                                required:
                                  - name
                                  - type
                                type: object
                              headers:
                                additionalProperties:
                                  type: string
                                description: Headers
                                type: object
                              method:
                                description: Webhook Method
                                type: string
                              result:
                                description: Result formatting
                                properties:
                                  jsonPath:
                                    description: Json path of return value
                                    type: string
                                type: object
                              secrets:
                                description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                                items:
                                  properties:
                                    name:
                                      description: Name of this secret in templates
                                      type: string
                                    secretRef:
                                      description: Secret ref to fill in credentials
                                      properties:
                                        key:
                                          description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                          type: string
                                        name:
                                          description: The name of the Secret resource being referred to.
                                          type: string
                                        namespace:
                                          description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                          type: string
                                      type: object
                                  required:
                                    - name
                                    - secretRef
                                  type: object
                                type: array
                              timeout:
                                description: Timeout
                                type: string
                              url:
                                description: Webhook url to call
                                type: string
                            required:
                              - result
                              - url
                            type: object
                          yandexcertificatemanager:
                            description: YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
                            properties:
                              apiEndpoint:
                                description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                type: string
                              auth:
                                description: Auth defines the information necessary to authenticate against Yandex Certificate Manager
                                properties:
                                  authorizedKeySecretRef:
                                    description: The authorized key used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caProvider:
                                description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                properties:
                                  certSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - auth
                            type: object
                          yandexlockbox:
                            description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                            properties:
                              apiEndpoint:
                                description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                type: string
                              auth:
                                description: Auth defines the information necessary to authenticate against Yandex Lockbox
                                properties:
                                  authorizedKeySecretRef:
                                    description: The authorized key used for authentication
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              caProvider:
                                description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                properties:
                                  certSecretRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                            required:
                              - auth
                            type: object
                        type: object
                      refreshInterval:
                        description: Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
                        type: integer
                      retrySettings:
                        description: Used to configure http retries if failed
                        properties:
                          maxRetries:
                            format: int32
                            type: integer
                          retryInterval:
                            type: string
                        type: object
                    required:
                      - provider
                    type: object
                  status:
                    description: SecretStoreStatus defines the observed state of the SecretStore.
                    properties:
                      capabilities:
                        description: SecretStoreCapabilities defines the possible operations a SecretStore can do.
                        type: string
                      conditions:
                        items:
                          properties:
                            lastTransitionTime:
                              format: date-time
                              type: string
                            message:
                              type: string
                            reason:
                              type: string
                            status:
                              type: string
                            type:
                              type: string
                          required:
                            - status
                            - type
                          type: object
                        type: array
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/secretstore.yaml
  - content: |
      {{- if .Values.installCRDs }}
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      metadata:
        annotations:
          {{- with .Values.crds.annotations }}
          {{- toYaml . | nindent 4}}
          {{- end }}
          {{- if and .Values.crds.conversion.enabled .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
          {{- end }}
          controller-gen.kubebuilder.io/version: v0.13.0
        name: vaultdynamicsecrets.generators.external-secrets.io
      spec:
        group: generators.external-secrets.io
        names:
          categories:
            - vaultdynamicsecret
          kind: VaultDynamicSecret
          listKind: VaultDynamicSecretList
          plural: vaultdynamicsecrets
          shortNames:
            - vaultdynamicsecret
          singular: vaultdynamicsecret
        scope: Namespaced
        versions:
          - name: v1alpha1
            schema:
              openAPIV3Schema:
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    type: object
                  spec:
                    properties:
                      controller:
                        description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters VDS based on this property'
                        type: string
                      method:
                        description: Vault API method to use (GET/POST/other)
                        type: string
                      parameters:
                        description: Parameters to pass to Vault write (for non-GET methods)
                        x-kubernetes-preserve-unknown-fields: true
                      path:
                        description: Vault path to obtain the dynamic secret from
                        type: string
                      provider:
                        description: Vault provider common spec
                        properties:
                          auth:
                            description: Auth configures how secret-manager authenticates with the Vault server.
                            properties:
                              appRole:
                                description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                properties:
                                  path:
                                    default: approle
                                    description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                    type: string
                                  roleId:
                                    description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                    type: string
                                  roleRef:
                                    description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  secretRef:
                                    description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                required:
                                  - path
                                  - secretRef
                                type: object
                              cert:
                                description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                properties:
                                  clientCert:
                                    description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  secretRef:
                                    description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                type: object
                              iam:
                                description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                                properties:
                                  externalID:
                                    description: AWS External ID set on assumed IAM roles
                                    type: string
                                  jwt:
                                    description: Specify a service account with IRSA enabled
                                    properties:
                                      serviceAccountRef:
                                        description: A reference to a ServiceAccount resource.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    type: object
                                  path:
                                    description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                    type: string
                                  region:
                                    description: AWS region
                                    type: string
                                  role:
                                    description: This is the AWS role to be assumed before talking to vault
                                    type: string
                                  secretRef:
                                    description: Specify credentials in a Secret object
                                    properties:
                                      accessKeyIDSecretRef:
                                        description: The AccessKeyID is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      secretAccessKeySecretRef:
                                        description: The SecretAccessKey is used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      sessionTokenSecretRef:
                                        description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  vaultAwsIamServerID:
                                    description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                    type: string
                                  vaultRole:
                                    description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                    type: string
                                required:
                                  - vaultRole
                                type: object
                              jwt:
                                description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                properties:
                                  kubernetesServiceAccountToken:
                                    description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                    properties:
                                      audiences:
                                        description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                        items:
                                          type: string
                                        type: array
                                      expirationSeconds:
                                        description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                        format: int64
                                        type: integer
                                      serviceAccountRef:
                                        description: Service account field containing the name of a kubernetes ServiceAccount.
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                    required:
                                      - serviceAccountRef
                                    type: object
                                  path:
                                    default: jwt
                                    description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                    type: string
                                  role:
                                    description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                    type: string
                                  secretRef:
                                    description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                required:
                                  - path
                                type: object
                              kubernetes:
                                description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                properties:
                                  mountPath:
                                    default: kubernetes
                                    description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                    type: string
                                  role:
                                    description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                    type: string
                                  secretRef:
                                    description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  serviceAccountRef:
                                    description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                required:
                                  - mountPath
                                  - role
                                type: object
                              ldap:
                                description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                properties:
                                  path:
                                    default: ldap
                                    description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                    type: string
                                  secretRef:
                                    description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  username:
                                    description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                    type: string
                                required:
                                  - path
                                  - username
                                type: object
                              tokenSecretRef:
                                description: TokenSecretRef authenticates with Vault by presenting a token.
                                properties:
                                  key:
                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                    type: string
                                  name:
                                    description: The name of the Secret resource being referred to.
                                    type: string
                                  namespace:
                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                    type: string
                                type: object
                              userPass:
                                description: UserPass authenticates with Vault by passing username/password pair
                                properties:
                                  path:
                                    default: user
                                    description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                                    type: string
                                  secretRef:
                                    description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  username:
                                    description: Username is a user name used to authenticate using the UserPass Vault authentication method
                                    type: string
                                required:
                                  - path
                                  - username
                                type: object
                            type: object
                          caBundle:
                            description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                            format: byte
                            type: string
                          caProvider:
                            description: The provider for the CA bundle to use to validate Vault server certificate.
                            properties:
                              key:
                                description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                type: string
                              name:
                                description: The name of the object located at the provider type.
                                type: string
                              namespace:
                                description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                type: string
                              type:
                                description: The type of provider to use such as "Secret", or "ConfigMap".
                                enum:
                                  - Secret
                                  - ConfigMap
                                type: string
                            required:
                              - name
                              - type
                            type: object
                          forwardInconsistent:
                            description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                            type: boolean
                          namespace:
                            description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                            type: string
                          path:
                            description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                            type: string
                          readYourWrites:
                            description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                            type: boolean
                          server:
                            description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                            type: string
                          version:
                            default: v2
                            description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                            enum:
                              - v1
                              - v2
                            type: string
                        required:
                          - auth
                          - server
                        type: object
                      resultType:
                        default: Data
                        description: Result type defines which data is returned from the generator. By default it is the "data" section of the Vault API response. When using e.g. /auth/token/create the "data" section is empty but the "auth" section contains the generated token. Please refer to the vault docs regarding the result data structure.
                        enum:
                          - Data
                          - Auth
                        type: string
                    required:
                      - path
                      - provider
                    type: object
                type: object
            served: true
            storage: true
            subresources:
              status: {}
      {{- if .Values.crds.conversion.enabled }}
        conversion:
          strategy: Webhook
          webhook:
            conversionReviewVersions:
              - v1
            clientConfig:
              service:
                name: {{ include "external-secrets.fullname" . }}-webhook
                namespace: {{ .Release.Namespace | quote }}
                path: /convert
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/crds/vaultdynamicsecret.yaml
  - content: |
      {{- if .Values.createOperator }}
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: {{ include "external-secrets.fullname" . }}
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
        {{- with .Values.deploymentAnnotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      spec:
        replicas: {{ .Values.replicaCount }}
        revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
        selector:
          matchLabels:
            {{- include "external-secrets.selectorLabels" . | nindent 6 }}
        template:
          metadata:
            {{- with .Values.podAnnotations }}
            annotations:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            labels:
              {{- include "external-secrets.labels" . | nindent 8 }}
              {{- with .Values.podLabels }}
                {{- toYaml . | nindent 8 }}
              {{- end }}
          spec:
            {{- with .Values.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            serviceAccountName: {{ include "external-secrets.serviceAccountName" . }}
            automountServiceAccountToken: {{ .Values.serviceAccount.automount }}
            {{- with .Values.podSecurityContext }}
            securityContext:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            hostNetwork: {{ .Values.hostNetwork }}
            containers:
              - name: {{ .Chart.Name }}
                {{- with .Values.securityContext }}
                securityContext:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
                imagePullPolicy: {{ .Values.image.pullPolicy }}
                {{- if or (.Values.leaderElect) (.Values.scopedNamespace) (.Values.processClusterStore) (.Values.processClusterExternalSecret) (.Values.concurrent) (.Values.extraArgs) }}
                args:
                {{- if .Values.leaderElect }}
                - --enable-leader-election=true
                {{- end }}
                {{- if .Values.scopedNamespace }}
                - --namespace={{ .Values.scopedNamespace }}
                {{- end }}
                {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
                - --enable-cluster-store-reconciler=false
                - --enable-cluster-external-secret-reconciler=false
                {{- else }}
                  {{- if not .Values.processClusterStore }}
                - --enable-cluster-store-reconciler=false
                  {{- end }}
                  {{- if not .Values.processClusterExternalSecret }}
                - --enable-cluster-external-secret-reconciler=false
                  {{- end }}
                {{- end }}
                {{- if not .Values.processPushSecret }}
                - --enable-push-secret-reconciler=false
                {{- end }}
                {{- if .Values.controllerClass }}
                - --controller-class={{ .Values.controllerClass }}
                {{- end }}
                {{- if .Values.extendedMetricLabels }}
                - --enable-extended-metric-labels={{ .Values.extendedMetricLabels }}
                {{- end }}
                {{- if .Values.concurrent }}
                - --concurrent={{ .Values.concurrent }}
                {{- end }}
                {{- range $key, $value := .Values.extraArgs }}
                  {{- if $value }}
                - --{{ $key }}={{ $value }}
                  {{- else }}
                - --{{ $key }}
                  {{- end }}
                {{- end }}
                {{- end }}
                - --metrics-addr=:{{ .Values.metrics.listen.port }}
                ports:
                  - containerPort: {{ .Values.metrics.listen.port }}
                    protocol: TCP
                    name: metrics
                {{- with .Values.extraEnv }}
                env:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                {{- with .Values.resources }}
                resources:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                {{- if .Values.extraVolumeMounts }}
                volumeMounts:
                {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
                {{- end }}
              {{- if .Values.extraContainers }}
                {{ toYaml .Values.extraContainers | nindent 8}}
              {{- end }}
            {{- if .Values.dnsConfig }}
            dnsConfig:
                {{- toYaml .Values.dnsConfig | nindent 8 }}
            {{- end }}
            {{- if .Values.extraVolumes }}
            volumes:
            {{- toYaml .Values.extraVolumes | nindent 8 }}
            {{- end }}
            {{- with .Values.nodeSelector }}
            nodeSelector:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.affinity }}
            affinity:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.tolerations }}
            tolerations:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.topologySpreadConstraints }}
            topologySpreadConstraints:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- if .Values.priorityClassName }}
            priorityClassName: {{ .Values.priorityClassName }}
            {{- end }}
            {{- if .Values.podSpecExtra }}
            {{- toYaml .Values.podSpecExtra | nindent 6 }}
            {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/deployment.yaml
  - content: |-
      {{- if .Values.podDisruptionBudget.enabled }}
      apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: {{ include "external-secrets.fullname" . }}-pdb
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      spec:
        {{- if .Values.podDisruptionBudget.minAvailable }}
        minAvailable: {{ .Values.podDisruptionBudget.minAvailable }}
        {{- end }}
        {{- if .Values.podDisruptionBudget.maxUnavailable }}
        maxUnavailable: {{ .Values.podDisruptionBudget.maxUnavailable }}
        {{- end }}
        selector:
          matchLabels:
            {{- include "external-secrets.selectorLabels" . | nindent 6 }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/poddisruptionbudget.yaml
  - content: |
      {{- if .Values.rbac.create -}}
      apiVersion: rbac.authorization.k8s.io/v1
      {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
      kind: Role
      {{- else }}
      kind: ClusterRole
      {{- end }}
      metadata:
        name: {{ include "external-secrets.fullname" . }}-controller
        {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
        namespace: {{ .Values.scopedNamespace | quote }}
        {{- end }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      rules:
        - apiGroups:
          - "external-secrets.io"
          resources:
          - "secretstores"
          - "clustersecretstores"
          - "externalsecrets"
          - "clusterexternalsecrets"
          - "pushsecrets"
          verbs:
          - "get"
          - "list"
          - "watch"
        - apiGroups:
          - "external-secrets.io"
          resources:
          - "externalsecrets"
          - "externalsecrets/status"
          - "externalsecrets/finalizers"
          - "secretstores"
          - "secretstores/status"
          - "secretstores/finalizers"
          - "clustersecretstores"
          - "clustersecretstores/status"
          - "clustersecretstores/finalizers"
          - "clusterexternalsecrets"
          - "clusterexternalsecrets/status"
          - "clusterexternalsecrets/finalizers"
          - "pushsecrets"
          - "pushsecrets/status"
          - "pushsecrets/finalizers"
          verbs:
          - "update"
          - "patch"
        - apiGroups:
          - "generators.external-secrets.io"
          resources:
          - "acraccesstokens"
          - "ecrauthorizationtokens"
          - "fakes"
          - "gcraccesstokens"
          - "passwords"
          - "vaultdynamicsecrets"
          verbs:
          - "get"
          - "list"
          - "watch"
        - apiGroups:
          - ""
          resources:
          - "serviceaccounts"
          - "namespaces"
          verbs:
          - "get"
          - "list"
          - "watch"
        - apiGroups:
          - ""
          resources:
          - "configmaps"
          verbs:
          - "get"
          - "list"
          - "watch"
        - apiGroups:
          - ""
          resources:
          - "secrets"
          verbs:
          - "get"
          - "list"
          - "watch"
          - "create"
          - "update"
          - "delete"
          - "patch"
        - apiGroups:
          - ""
          resources:
          - "serviceaccounts/token"
          verbs:
          - "create"
        - apiGroups:
          - ""
          resources:
          - "events"
          verbs:
          - "create"
          - "patch"
        - apiGroups:
          - "external-secrets.io"
          resources:
          - "externalsecrets"
          verbs:
          - "create"
          - "update"
          - "delete"
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
      kind: Role
      {{- else }}
      kind: ClusterRole
      {{- end }}
      metadata:
        name: {{ include "external-secrets.fullname" . }}-view
        {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
        namespace: {{ .Values.scopedNamespace | quote }}
        {{- end }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
          rbac.authorization.k8s.io/aggregate-to-view: "true"
          rbac.authorization.k8s.io/aggregate-to-edit: "true"
          rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rules:
        - apiGroups:
            - "external-secrets.io"
          resources:
            - "externalsecrets"
            - "secretstores"
            - "clustersecretstores"
            - "pushsecrets"
          verbs:
            - "get"
            - "watch"
            - "list"
        - apiGroups:
          - "generators.external-secrets.io"
          resources:
          - "acraccesstokens"
          - "ecrauthorizationtokens"
          - "fakes"
          - "gcraccesstokens"
          - "passwords"
          - "vaultdynamicsecrets"
          verbs:
            - "get"
            - "watch"
            - "list"
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
      kind: Role
      {{- else }}
      kind: ClusterRole
      {{- end }}
      metadata:
        name: {{ include "external-secrets.fullname" . }}-edit
        {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
        namespace: {{ .Values.scopedNamespace | quote }}
        {{- end }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
          rbac.authorization.k8s.io/aggregate-to-edit: "true"
          rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rules:
        - apiGroups:
            - "external-secrets.io"
          resources:
            - "externalsecrets"
            - "secretstores"
            - "clustersecretstores"
            - "pushsecrets"
          verbs:
            - "create"
            - "delete"
            - "deletecollection"
            - "patch"
            - "update"
        - apiGroups:
          - "generators.external-secrets.io"
          resources:
          - "acraccesstokens"
          - "ecrauthorizationtokens"
          - "fakes"
          - "gcraccesstokens"
          - "passwords"
          - "vaultdynamicsecrets"
          verbs:
            - "create"
            - "delete"
            - "deletecollection"
            - "patch"
            - "update"
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
      kind: RoleBinding
      {{- else }}
      kind: ClusterRoleBinding
      {{- end }}
      metadata:
        name: {{ include "external-secrets.fullname" . }}-controller
        {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
        namespace: {{ .Values.scopedNamespace | quote }}
        {{- end }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        {{- if and .Values.scopedNamespace .Values.scopedRBAC }}
        kind: Role
        {{- else }}
        kind: ClusterRole
        {{- end }}
        name: {{ include "external-secrets.fullname" . }}-controller
      subjects:
        - name: {{ include "external-secrets.serviceAccountName" . }}
          namespace: {{ .Release.Namespace | quote }}
          kind: ServiceAccount
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: {{ include "external-secrets.fullname" . }}-leaderelection
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      rules:
        - apiGroups:
          - ""
          resources:
          - "configmaps"
          resourceNames:
          - "external-secrets-controller"
          verbs:
          - "get"
          - "update"
          - "patch"
        - apiGroups:
          - ""
          resources:
          - "configmaps"
          verbs:
          - "create"
        - apiGroups:
          - "coordination.k8s.io"
          resources:
          - "leases"
          verbs:
          - "get"
          - "create"
          - "update"
          - "patch"
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: {{ include "external-secrets.fullname" . }}-leaderelection
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: {{ include "external-secrets.fullname" . }}-leaderelection
      subjects:
        - kind: ServiceAccount
          name: {{ include "external-secrets.serviceAccountName" . }}
          namespace: {{ .Release.Namespace | quote }}
      {{- if .Values.rbac.servicebindings.create }}
      ---
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      metadata:
        name: {{ include "external-secrets.fullname" . }}-servicebindings
        labels:
          servicebinding.io/controller: "true"
          {{- include "external-secrets.labels" . | nindent 4 }}
      rules:
        - apiGroups:
          - "external-secrets.io"
          resources:
          - "externalsecrets"
          verbs:
          - "get"
          - "list"
          - "watch"
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/rbac.yaml
  - content: |
      {{- if .Values.metrics.service.enabled }}
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ include "external-secrets.fullname" . }}-metrics
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
        {{- with .Values.metrics.service.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      spec:
        type: ClusterIP
        ports:
          - port: {{ .Values.metrics.service.port }}
            protocol: TCP
            targetPort: metrics
            name: metrics
        selector:
          {{- include "external-secrets.selectorLabels" . | nindent 4 }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/service.yaml
  - content: |
      {{- if .Values.serviceAccount.create -}}
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: {{ include "external-secrets.serviceAccountName" . }}
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
          {{- with .Values.serviceAccount.extraLabels }}
          {{- toYaml . | nindent 4 }}
          {{- end }}
        {{- with .Values.serviceAccount.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/serviceaccount.yaml
  - content: |
      {{- if and ( .Capabilities.APIVersions.Has "monitoring.coreos.com/v1" ) .Values.serviceMonitor.enabled -}}
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ include "external-secrets.fullname" . }}-metrics
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      spec:
        type: ClusterIP
        ports:
          - port: {{ .Values.metrics.service.port }}
            protocol: TCP
            name: metrics
        selector:
          {{- include "external-secrets.selectorLabels" . | nindent 4 }}
      ---
      apiVersion: "monitoring.coreos.com/v1"
      kind: ServiceMonitor
      metadata:
        labels:
          {{- include "external-secrets.labels" . | nindent 4 }}
      {{- if .Values.serviceMonitor.additionalLabels }}
      {{ toYaml .Values.serviceMonitor.additionalLabels | indent 4 }}
      {{- end }}
        name: {{ include "external-secrets.fullname" . }}-metrics
        namespace: {{ .Values.serviceMonitor.namespace | default .Release.Namespace | quote }}
      spec:
        selector:
          matchLabels:
            {{- include "external-secrets.selectorLabels" . | nindent 6 }}
        namespaceSelector:
          matchNames:
          - {{ .Release.Namespace | quote }}
        endpoints:
        - port: metrics
          interval: {{ .Values.serviceMonitor.interval }}
          scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
          honorLabels: {{ .Values.serviceMonitor.honorLabels }}
          {{- with .Values.serviceMonitor.metricRelabelings }}
          metricRelabelings:
            {{- toYaml . | nindent 6 }}
          {{- end }}
          {{- with .Values.serviceMonitor.relabelings }}
          relabelings:
            {{- toYaml . | nindent 6 }}
          {{- end }}
      ---
      {{- if .Values.webhook.create }}
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ include "external-secrets.fullname" . }}-webhook-metrics
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook-metrics.labels" . | nindent 4 }}
      spec:
        type: ClusterIP
        ports:
          - port: {{ .Values.webhook.metrics.service.port }}
            protocol: TCP
            name: metrics
        selector:
          {{- include "external-secrets-webhook.selectorLabels" . | nindent 4 }}
      ---
      apiVersion: "monitoring.coreos.com/v1"
      kind: ServiceMonitor
      metadata:
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
      {{- if .Values.serviceMonitor.additionalLabels }}
      {{ toYaml .Values.serviceMonitor.additionalLabels | indent 4 }}
      {{- end }}
        name: {{ include "external-secrets.fullname" . }}-webhook-metrics
        namespace: {{ .Values.serviceMonitor.namespace | default .Release.Namespace | quote }}
      spec:
        selector:
          matchLabels:
            {{- include "external-secrets-webhook-metrics.labels" . | nindent 6 }}
        namespaceSelector:
          matchNames:
          - {{ .Release.Namespace | quote }}
        endpoints:
        - port: metrics
          interval: {{ .Values.serviceMonitor.interval }}
          scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
          honorLabels: {{ .Values.serviceMonitor.honorLabels }}
          {{- with .Values.serviceMonitor.metricRelabelings }}
          metricRelabelings:
            {{- toYaml . | nindent 6 }}
          {{- end }}
          {{- with .Values.serviceMonitor.relabelings }}
          relabelings:
            {{- toYaml . | nindent 6 }}
          {{- end }}
      {{- end }}
      ---
      {{- if .Values.certController.create }}
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ include "external-secrets.fullname" . }}-cert-controller-metrics
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-cert-controller-metrics.labels" . | nindent 4 }}
      spec:
        type: ClusterIP
        ports:
          - port: {{ .Values.certController.metrics.listen.port }}
            protocol: TCP
            name: metrics
        selector:
          {{- include "external-secrets-cert-controller.selectorLabels" . | nindent 4 }}
      ---
      apiVersion: "monitoring.coreos.com/v1"
      kind: ServiceMonitor
      metadata:
        labels:
          {{- include "external-secrets-cert-controller.labels" . | nindent 4 }}
      {{- if .Values.serviceMonitor.additionalLabels }}
      {{ toYaml .Values.serviceMonitor.additionalLabels | indent 4 }}
      {{- end }}
        name: {{ include "external-secrets.fullname" . }}-cert-controller-metrics
        namespace: {{ .Values.serviceMonitor.namespace | default .Release.Namespace | quote }}
      spec:
        selector:
          matchLabels:
            {{- include "external-secrets-cert-controller-metrics.labels" . | nindent 6 }}
        namespaceSelector:
          matchNames:
          - {{ .Release.Namespace | quote }}
        endpoints:
        - port: metrics
          interval: {{ .Values.serviceMonitor.interval }}
          scrapeTimeout: {{ .Values.serviceMonitor.scrapeTimeout }}
          honorLabels: {{ .Values.serviceMonitor.honorLabels }}
          {{- with .Values.serviceMonitor.metricRelabelings }}
          metricRelabelings:
            {{- toYaml . | nindent 6 }}
          {{- end }}
          {{- with .Values.serviceMonitor.relabelings }}
          relabelings:
            {{- toYaml . | nindent 6 }}
          {{- end }}
      {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/servicemonitor.yaml
  - content: |
      {{- if .Values.webhook.create }}
      apiVersion: admissionregistration.k8s.io/v1
      kind: ValidatingWebhookConfiguration
      metadata:
        name: secretstore-validate
        labels:
          external-secrets.io/component: webhook
          {{- with .Values.commonLabels }}
          {{ toYaml . | nindent 4 }}
          {{- end }}
        {{- if and .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
        annotations:
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
        {{- end }}
      webhooks:
      - name: "validate.secretstore.external-secrets.io"
        rules:
        - apiGroups:   ["external-secrets.io"]
          apiVersions: ["v1beta1"]
          operations:  ["CREATE", "UPDATE", "DELETE"]
          resources:   ["secretstores"]
          scope:       "Namespaced"
        clientConfig:
          service:
            namespace: {{ .Release.Namespace | quote }}
            name: {{ include "external-secrets.fullname" . }}-webhook
            path: /validate-external-secrets-io-v1beta1-secretstore
        admissionReviewVersions: ["v1", "v1beta1"]
        sideEffects: None
        timeoutSeconds: 5

      - name: "validate.clustersecretstore.external-secrets.io"
        rules:
        - apiGroups:   ["external-secrets.io"]
          apiVersions: ["v1beta1"]
          operations:  ["CREATE", "UPDATE", "DELETE"]
          resources:   ["clustersecretstores"]
          scope:       "Cluster"
        clientConfig:
          service:
            namespace: {{ .Release.Namespace | quote }}
            name: {{ include "external-secrets.fullname" . }}-webhook
            path: /validate-external-secrets-io-v1beta1-clustersecretstore
        admissionReviewVersions: ["v1", "v1beta1"]
        sideEffects: None
        timeoutSeconds: 5
      ---
      apiVersion: admissionregistration.k8s.io/v1
      kind: ValidatingWebhookConfiguration
      metadata:
        name: externalsecret-validate
        labels:
          external-secrets.io/component: webhook
          {{- with .Values.commonLabels }}
          {{ toYaml . | nindent 4 }}
          {{- end }}
        {{- if and .Values.webhook.certManager.enabled .Values.webhook.certManager.addInjectorAnnotations }}
        annotations:
          cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/{{ include "external-secrets.fullname" . }}-webhook
        {{- end }}
      webhooks:
      - name: "validate.externalsecret.external-secrets.io"
        rules:
        - apiGroups:   ["external-secrets.io"]
          apiVersions: ["v1beta1"]
          operations:  ["CREATE", "UPDATE", "DELETE"]
          resources:   ["externalsecrets"]
          scope:       "Namespaced"
        clientConfig:
          service:
            namespace: {{ .Release.Namespace | quote }}
            name: {{ include "external-secrets.fullname" . }}-webhook
            path: /validate-external-secrets-io-v1beta1-externalsecret
        admissionReviewVersions: ["v1", "v1beta1"]
        sideEffects: None
        timeoutSeconds: 5
        failurePolicy: {{ .Values.webhook.failurePolicy}}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/validatingwebhook.yaml
  - content: |
      {{- if and .Values.webhook.create .Values.webhook.certManager.enabled .Values.webhook.certManager.cert.create }}
      ---
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: {{ include "external-secrets.fullname" . }}-webhook
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
          external-secrets.io/component: webhook
        {{- with .Values.webhook.certManager.cert.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      spec:
        commonName: {{ include "external-secrets.fullname" . }}-webhook
        dnsNames:
          - {{ include "external-secrets.fullname" . }}-webhook
          - {{ include "external-secrets.fullname" . }}-webhook.{{ .Release.Namespace }}
          - {{ include "external-secrets.fullname" . }}-webhook.{{ .Release.Namespace }}.svc
        issuerRef:
          {{- toYaml .Values.webhook.certManager.cert.issuerRef | nindent 4 }}
        {{- with .Values.webhook.certManager.cert.duration }}
        duration: {{ . | quote }}
        {{- end }}
        {{- with .Values.webhook.certManager.cert.renewBefore }}
        renewBefore: {{ . | quote }}
        {{- end }}
        secretName: {{ include "external-secrets.fullname" . }}-webhook
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/webhook-certificate.yaml
  - content: |
      {{- if .Values.webhook.create }}
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: {{ include "external-secrets.fullname" . }}-webhook
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
        {{- with .Values.webhook.deploymentAnnotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      spec:
        replicas: {{ .Values.webhook.replicaCount }}
        revisionHistoryLimit: {{ .Values.webhook.revisionHistoryLimit }}
        selector:
          matchLabels:
            {{- include "external-secrets-webhook.selectorLabels" . | nindent 6 }}
        template:
          metadata:
            {{- with .Values.webhook.podAnnotations }}
            annotations:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            labels:
              {{- include "external-secrets-webhook.labels" . | nindent 8 }}
              {{- with .Values.webhook.podLabels }}
                {{- toYaml . | nindent 8 }}
              {{- end }}
          spec:
            {{- with .Values.webhook.imagePullSecrets }}
            imagePullSecrets:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            hostNetwork: {{ .Values.webhook.hostNetwork}}
            serviceAccountName: {{ include "external-secrets-webhook.serviceAccountName" . }}
            automountServiceAccountToken: {{ .Values.webhook.serviceAccount.automount }}
            {{- with .Values.webhook.podSecurityContext }}
            securityContext:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            containers:
              - name: webhook
                {{- with .Values.webhook.securityContext }}
                securityContext:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                image: "{{ .Values.webhook.image.repository }}:{{ .Values.webhook.image.tag | default .Chart.AppVersion }}"
                imagePullPolicy: {{ .Values.webhook.image.pullPolicy }}
                args:
                - webhook
                - --port={{ .Values.webhook.port }}
                - --dns-name={{ include "external-secrets.fullname" . }}-webhook.{{ .Release.Namespace }}.svc
                - --cert-dir={{ .Values.webhook.certDir }}
                - --check-interval={{ .Values.webhook.certCheckInterval }}
                - --metrics-addr=:{{ .Values.webhook.metrics.listen.port }}
                - --healthz-addr={{ .Values.webhook.readinessProbe.address }}:{{ .Values.webhook.readinessProbe.port }}
                {{- if .Values.webhook.lookaheadInterval }}
                - --lookahead-interval={{ .Values.webhook.lookaheadInterval }}
                {{- end }}
                {{- range $key, $value := .Values.webhook.extraArgs }}
                  {{- if $value }}
                - --{{ $key }}={{ $value }}
                  {{- else }}
                - --{{ $key }}
                  {{- end }}
                {{- end }}
                ports:
                  - containerPort: {{ .Values.webhook.metrics.listen.port }}
                    protocol: TCP
                    name: metrics
                  - containerPort: {{ .Values.webhook.port }}
                    protocol: TCP
                    name: webhook
                readinessProbe:
                  httpGet:
                    port: {{ .Values.webhook.readinessProbe.port }}
                    path: /readyz
                  initialDelaySeconds: 20
                  periodSeconds: 5
                {{- with .Values.webhook.extraEnv }}
                env:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                {{- with .Values.webhook.resources }}
                resources:
                  {{- toYaml . | nindent 12 }}
                {{- end }}
                volumeMounts:
                  - name: certs
                    mountPath: {{ .Values.webhook.certDir }}
                    readOnly: true
                {{- if .Values.webhook.extraVolumeMounts }}
                {{- toYaml .Values.webhook.extraVolumeMounts | nindent 12 }}
                {{- end }}
            volumes:
              - name: certs
                secret:
                  secretName: {{ include "external-secrets.fullname" . }}-webhook
            {{- if .Values.webhook.extraVolumes }}
            {{- toYaml .Values.webhook.extraVolumes | nindent 8 }}
            {{- end }}
            {{- with .Values.webhook.nodeSelector }}
            nodeSelector:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.webhook.affinity }}
            affinity:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.webhook.tolerations }}
            tolerations:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- with .Values.webhook.topologySpreadConstraints }}
            topologySpreadConstraints:
              {{- toYaml . | nindent 8 }}
            {{- end }}
            {{- if .Values.webhook.priorityClassName }}
            priorityClassName: {{ .Values.webhook.priorityClassName }}
            {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/webhook-deployment.yaml
  - content: |-
      {{- if and .Values.webhook.create .Values.webhook.podDisruptionBudget.enabled }}
      apiVersion: policy/v1
      kind: PodDisruptionBudget
      metadata:
        name: {{ include "external-secrets.fullname" . }}-webhook-pdb
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
          external-secrets.io/component: webhook
      spec:
        {{- if .Values.webhook.podDisruptionBudget.minAvailable }}
        minAvailable: {{ .Values.webhook.podDisruptionBudget.minAvailable }}
        {{- end }}
        {{- if .Values.webhook.podDisruptionBudget.maxUnavailable }}
        maxUnavailable: {{ .Values.webhook.podDisruptionBudget.maxUnavailable }}
        {{- end }}
        selector:
          matchLabels:
            {{- include "external-secrets-webhook.selectorLabels" . | nindent 6 }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/webhook-poddisruptionbudget.yaml
  - content: |
      {{- if and .Values.webhook.create (not .Values.webhook.certManager.enabled) }}
      apiVersion: v1
      kind: Secret
      metadata:
        name: {{ include "external-secrets.fullname" . }}-webhook
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
          external-secrets.io/component: webhook
        {{- with .Values.webhook.secretAnnotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/webhook-secret.yaml
  - content: |
      {{- if .Values.webhook.create }}
      apiVersion: v1
      kind: Service
      metadata:
        name: {{ include "external-secrets.fullname" . }}-webhook
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
          external-secrets.io/component: webhook
        {{- if .Values.webhook.metrics.service.enabled }}
        {{- with .Values.webhook.metrics.service.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
        {{- end }}
      spec:
        type: ClusterIP
        ports:
        - port: 443
          targetPort: {{ .Values.webhook.port }}
          protocol: TCP
          name: webhook
        {{- if .Values.webhook.metrics.service.enabled }}
        - port: {{ .Values.webhook.metrics.service.port }}
          protocol: TCP
          targetPort: metrics
          name: metrics
        {{- end }}
        selector:
          {{- include "external-secrets-webhook.selectorLabels" . | nindent 4 }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/webhook-service.yaml
  - content: |
      {{- if and .Values.webhook.create .Values.webhook.serviceAccount.create -}}
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: {{ include "external-secrets-webhook.serviceAccountName" . }}
        namespace: {{ .Release.Namespace | quote }}
        labels:
          {{- include "external-secrets-webhook.labels" . | nindent 4 }}
          {{- with .Values.webhook.serviceAccount.extraLabels }}
          {{- toYaml . | nindent 4 }}
          {{- end }}
        {{- with .Values.webhook.serviceAccount.annotations }}
        annotations:
          {{- toYaml . | nindent 4 }}
        {{- end }}
      {{- end }}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/templates/webhook-serviceaccount.yaml
  - content: |
      should match snapshot of default values:
        1: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app.kubernetes.io/instance: RELEASE-NAME
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/name: external-secrets-cert-controller
              app.kubernetes.io/version: v0.9.11
              helm.sh/chart: external-secrets-0.9.11
            name: RELEASE-NAME-external-secrets-cert-controller
            namespace: NAMESPACE
          spec:
            replicas: 1
            revisionHistoryLimit: 10
            selector:
              matchLabels:
                app.kubernetes.io/instance: RELEASE-NAME
                app.kubernetes.io/name: external-secrets-cert-controller
            template:
              metadata:
                labels:
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/managed-by: Helm
                  app.kubernetes.io/name: external-secrets-cert-controller
                  app.kubernetes.io/version: v0.9.11
                  helm.sh/chart: external-secrets-0.9.11
              spec:
                automountServiceAccountToken: true
                containers:
                  - args:
                      - certcontroller
                      - --crd-requeue-interval=5m
                      - --service-name=RELEASE-NAME-external-secrets-webhook
                      - --service-namespace=NAMESPACE
                      - --secret-name=RELEASE-NAME-external-secrets-webhook
                      - --secret-namespace=NAMESPACE
                      - --metrics-addr=:8080
                      - --healthz-addr=:8081
                    image: ghcr.io/external-secrets/external-secrets:v0.9.11
                    imagePullPolicy: IfNotPresent
                    name: cert-controller
                    ports:
                      - containerPort: 8080
                        name: metrics
                        protocol: TCP
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 20
                      periodSeconds: 5
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      runAsUser: 1000
                      seccompProfile:
                        type: RuntimeDefault
                hostNetwork: false
                serviceAccountName: external-secrets-cert-controller
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/__snapshot__/cert_controller_test.yaml.snap
  - content: |
      should match snapshot of default values:
        1: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app.kubernetes.io/instance: RELEASE-NAME
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/name: external-secrets
              app.kubernetes.io/version: v0.9.11
              helm.sh/chart: external-secrets-0.9.11
            name: RELEASE-NAME-external-secrets
            namespace: NAMESPACE
          spec:
            replicas: 1
            revisionHistoryLimit: 10
            selector:
              matchLabels:
                app.kubernetes.io/instance: RELEASE-NAME
                app.kubernetes.io/name: external-secrets
            template:
              metadata:
                labels:
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/managed-by: Helm
                  app.kubernetes.io/name: external-secrets
                  app.kubernetes.io/version: v0.9.11
                  helm.sh/chart: external-secrets-0.9.11
              spec:
                automountServiceAccountToken: true
                containers:
                  - args:
                      - --concurrent=1
                      - --metrics-addr=:8080
                    image: ghcr.io/external-secrets/external-secrets:v0.9.11
                    imagePullPolicy: IfNotPresent
                    name: external-secrets
                    ports:
                      - containerPort: 8080
                        name: metrics
                        protocol: TCP
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      runAsUser: 1000
                      seccompProfile:
                        type: RuntimeDefault
                hostNetwork: false
                serviceAccountName: RELEASE-NAME-external-secrets
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/__snapshot__/controller_test.yaml.snap
  - content: |
      should match snapshot of default values:
        1: |
          apiVersion: apiextensions.k8s.io/v1
          kind: CustomResourceDefinition
          metadata:
            annotations:
              controller-gen.kubebuilder.io/version: v0.13.0
            name: secretstores.external-secrets.io
          spec:
            conversion:
              strategy: Webhook
              webhook:
                clientConfig:
                  service:
                    name: RELEASE-NAME-external-secrets-webhook
                    namespace: NAMESPACE
                    path: /convert
                conversionReviewVersions:
                  - v1
            group: external-secrets.io
            names:
              categories:
                - externalsecrets
              kind: SecretStore
              listKind: SecretStoreList
              plural: secretstores
              shortNames:
                - ss
              singular: secretstore
            scope: Namespaced
            versions:
              - additionalPrinterColumns:
                  - jsonPath: .metadata.creationTimestamp
                    name: AGE
                    type: date
                  - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                    name: Status
                    type: string
                deprecated: true
                name: v1alpha1
                schema:
                  openAPIV3Schema:
                    description: SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        type: object
                      spec:
                        description: SecretStoreSpec defines the desired state of SecretStore.
                        properties:
                          controller:
                            description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                            type: string
                          provider:
                            description: Used to configure the provider. Only one provider may be set
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              akeyless:
                                description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                                properties:
                                  akeylessGWApiURL:
                                    description: Akeyless GW API Url from which the secrets to be fetched from.
                                    type: string
                                  authSecretRef:
                                    description: Auth configures how the operator authenticates with Akeyless.
                                    properties:
                                      kubernetesAuth:
                                        description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                                        properties:
                                          accessID:
                                            description: the Akeyless Kubernetes auth-method access-id
                                            type: string
                                          k8sConfName:
                                            description: Kubernetes-auth configuration name in Akeyless-Gateway
                                            type: string
                                          secretRef:
                                            description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          serviceAccountRef:
                                            description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - accessID
                                          - k8sConfName
                                        type: object
                                      secretRef:
                                        description: Reference to a Secret that contains the details to authenticate with Akeyless.
                                        properties:
                                          accessID:
                                            description: The SecretAccessID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          accessType:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          accessTypeParam:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  caBundle:
                                    description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                                    properties:
                                      key:
                                        description: The key the value inside of the provider type to use, only used with "Secret" type
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                required:
                                  - akeylessGWApiURL
                                  - authSecretRef
                                type: object
                              alibaba:
                                description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                                properties:
                                  auth:
                                    description: AlibabaAuth contains a secretRef for credentials.
                                    properties:
                                      rrsa:
                                        description: Authenticate against Alibaba using RRSA.
                                        properties:
                                          oidcProviderArn:
                                            type: string
                                          oidcTokenFilePath:
                                            type: string
                                          roleArn:
                                            type: string
                                          sessionName:
                                            type: string
                                        required:
                                          - oidcProviderArn
                                          - oidcTokenFilePath
                                          - roleArn
                                          - sessionName
                                        type: object
                                      secretRef:
                                        description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                                        properties:
                                          accessKeyIDSecretRef:
                                            description: The AccessKeyID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          accessKeySecretSecretRef:
                                            description: The AccessKeySecret is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - accessKeyIDSecretRef
                                          - accessKeySecretSecretRef
                                        type: object
                                    type: object
                                  regionID:
                                    description: Alibaba Region to be used for the provider
                                    type: string
                                required:
                                  - auth
                                  - regionID
                                type: object
                              aws:
                                description: AWS configures this store to sync secrets using AWS Secret Manager provider
                                properties:
                                  auth:
                                    description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    properties:
                                      jwt:
                                        description: Authenticate against AWS using service account tokens.
                                        properties:
                                          serviceAccountRef:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        type: object
                                      secretRef:
                                        description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                                        properties:
                                          accessKeyIDSecretRef:
                                            description: The AccessKeyID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretAccessKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  region:
                                    description: AWS Region to be used for the provider
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the SecretManager provider will assume
                                    type: string
                                  service:
                                    description: Service defines which service should be used to fetch the secrets
                                    enum:
                                      - SecretsManager
                                      - ParameterStore
                                    type: string
                                required:
                                  - region
                                  - service
                                type: object
                              azurekv:
                                description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                                properties:
                                  authSecretRef:
                                    description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                                    properties:
                                      clientId:
                                        description: The Azure clientId of the service principle used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      clientSecret:
                                        description: The Azure ClientSecret of the service principle used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  authType:
                                    default: ServicePrincipal
                                    description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                                    enum:
                                      - ServicePrincipal
                                      - ManagedIdentity
                                      - WorkloadIdentity
                                    type: string
                                  identityId:
                                    description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                    type: string
                                  serviceAccountRef:
                                    description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tenantId:
                                    description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                                    type: string
                                  vaultUrl:
                                    description: Vault Url from which the secrets to be fetched from.
                                    type: string
                                required:
                                  - vaultUrl
                                type: object
                              fake:
                                description: Fake configures a store with static key/value pairs
                                properties:
                                  data:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                        valueMap:
                                          additionalProperties:
                                            type: string
                                          type: object
                                        version:
                                          type: string
                                      required:
                                        - key
                                      type: object
                                    type: array
                                required:
                                  - data
                                type: object
                              gcpsm:
                                description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                                properties:
                                  auth:
                                    description: Auth defines the information necessary to authenticate against GCP
                                    properties:
                                      secretRef:
                                        properties:
                                          secretAccessKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      workloadIdentity:
                                        properties:
                                          clusterLocation:
                                            type: string
                                          clusterName:
                                            type: string
                                          clusterProjectID:
                                            type: string
                                          serviceAccountRef:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - clusterLocation
                                          - clusterName
                                          - serviceAccountRef
                                        type: object
                                    type: object
                                  projectID:
                                    description: ProjectID project where secret is located
                                    type: string
                                type: object
                              gitlab:
                                description: GitLab configures this store to sync secrets using GitLab Variables provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with a GitLab instance.
                                    properties:
                                      SecretRef:
                                        properties:
                                          accessToken:
                                            description: AccessToken is used for authentication.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    required:
                                      - SecretRef
                                    type: object
                                  projectID:
                                    description: ProjectID specifies a project where secrets are located.
                                    type: string
                                  url:
                                    description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                                    type: string
                                required:
                                  - auth
                                type: object
                              ibm:
                                description: IBM configures this store to sync secrets using IBM Cloud provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                                    properties:
                                      secretRef:
                                        properties:
                                          secretApiKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    required:
                                      - secretRef
                                    type: object
                                  serviceUrl:
                                    description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                                    type: string
                                required:
                                  - auth
                                type: object
                              kubernetes:
                                description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                                    maxProperties: 1
                                    minProperties: 1
                                    properties:
                                      cert:
                                        description: has both clientCert and clientKey as secretKeySelector
                                        properties:
                                          clientCert:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          clientKey:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      serviceAccount:
                                        description: points to a service account that should be used for authentication
                                        properties:
                                          serviceAccount:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        type: object
                                      token:
                                        description: use static token to authenticate with
                                        properties:
                                          bearerToken:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  remoteNamespace:
                                    default: default
                                    description: Remote namespace to fetch the secrets from
                                    type: string
                                  server:
                                    description: configures the Kubernetes server Address.
                                    properties:
                                      caBundle:
                                        description: CABundle is a base64-encoded CA certificate
                                        format: byte
                                        type: string
                                      caProvider:
                                        description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                                        properties:
                                          key:
                                            description: The key the value inside of the provider type to use, only used with "Secret" type
                                            type: string
                                          name:
                                            description: The name of the object located at the provider type.
                                            type: string
                                          namespace:
                                            description: The namespace the Provider type is in.
                                            type: string
                                          type:
                                            description: The type of provider to use such as "Secret", or "ConfigMap".
                                            enum:
                                              - Secret
                                              - ConfigMap
                                            type: string
                                        required:
                                          - name
                                          - type
                                        type: object
                                      url:
                                        default: kubernetes.default
                                        description: configures the Kubernetes server Address.
                                        type: string
                                    type: object
                                required:
                                  - auth
                                type: object
                              oracle:
                                description: Oracle configures this store to sync secrets using Oracle Vault provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, instance principal is used. Optionally, the authenticating principal type and/or user data may be supplied for the use of workload identity and user principal.
                                    properties:
                                      secretRef:
                                        description: SecretRef to pass through sensitive information.
                                        properties:
                                          fingerprint:
                                            description: Fingerprint is the fingerprint of the API private key.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          privatekey:
                                            description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - fingerprint
                                          - privatekey
                                        type: object
                                      tenancy:
                                        description: Tenancy is the tenancy OCID where user is located.
                                        type: string
                                      user:
                                        description: User is an access OCID specific to the account.
                                        type: string
                                    required:
                                      - secretRef
                                      - tenancy
                                      - user
                                    type: object
                                  compartment:
                                    description: Compartment is the vault compartment OCID. Required for PushSecret
                                    type: string
                                  encryptionKey:
                                    description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                                    type: string
                                  principalType:
                                    description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                                    enum:
                                      - ""
                                      - UserPrincipal
                                      - InstancePrincipal
                                      - Workload
                                    type: string
                                  region:
                                    description: Region is the region where vault is located.
                                    type: string
                                  serviceAccountRef:
                                    description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  vault:
                                    description: Vault is the vault's OCID of the specific vault where secret is located.
                                    type: string
                                required:
                                  - region
                                  - vault
                                type: object
                              vault:
                                description: Vault configures this store to sync secrets using Hashi provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with the Vault server.
                                    properties:
                                      appRole:
                                        description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                        properties:
                                          path:
                                            default: approle
                                            description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                            type: string
                                          roleId:
                                            description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                            type: string
                                          secretRef:
                                            description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - path
                                          - roleId
                                          - secretRef
                                        type: object
                                      cert:
                                        description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                        properties:
                                          clientCert:
                                            description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretRef:
                                            description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      jwt:
                                        description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                        properties:
                                          kubernetesServiceAccountToken:
                                            description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                            properties:
                                              audiences:
                                                description: Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified.
                                                items:
                                                  type: string
                                                type: array
                                              expirationSeconds:
                                                description: Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to 10 minutes.
                                                format: int64
                                                type: integer
                                              serviceAccountRef:
                                                description: Service account field containing the name of a kubernetes ServiceAccount.
                                                properties:
                                                  audiences:
                                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    description: The name of the ServiceAccount resource being referred to.
                                                    type: string
                                                  namespace:
                                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                    type: string
                                                required:
                                                  - name
                                                type: object
                                            required:
                                              - serviceAccountRef
                                            type: object
                                          path:
                                            default: jwt
                                            description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                            type: string
                                          role:
                                            description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                            type: string
                                          secretRef:
                                            description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - path
                                        type: object
                                      kubernetes:
                                        description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                        properties:
                                          mountPath:
                                            default: kubernetes
                                            description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                            type: string
                                          role:
                                            description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                            type: string
                                          secretRef:
                                            description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          serviceAccountRef:
                                            description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - mountPath
                                          - role
                                        type: object
                                      ldap:
                                        description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                        properties:
                                          path:
                                            default: ldap
                                            description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                            type: string
                                          secretRef:
                                            description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          username:
                                            description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                            type: string
                                        required:
                                          - path
                                          - username
                                        type: object
                                      tokenSecretRef:
                                        description: TokenSecretRef authenticates with Vault by presenting a token.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  caBundle:
                                    description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Vault server certificate.
                                    properties:
                                      key:
                                        description: The key the value inside of the provider type to use, only used with "Secret" type
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  forwardInconsistent:
                                    description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                                    type: boolean
                                  namespace:
                                    description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                                    type: string
                                  path:
                                    description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                                    type: string
                                  readYourWrites:
                                    description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                                    type: boolean
                                  server:
                                    description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                                    type: string
                                  version:
                                    default: v2
                                    description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                                    enum:
                                      - v1
                                      - v2
                                    type: string
                                required:
                                  - auth
                                  - server
                                type: object
                              webhook:
                                description: Webhook configures this store to sync secrets using a generic templated webhook
                                properties:
                                  body:
                                    description: Body
                                    type: string
                                  caBundle:
                                    description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate webhook server certificate.
                                    properties:
                                      key:
                                        description: The key the value inside of the provider type to use, only used with "Secret" type
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  headers:
                                    additionalProperties:
                                      type: string
                                    description: Headers
                                    type: object
                                  method:
                                    description: Webhook Method
                                    type: string
                                  result:
                                    description: Result formatting
                                    properties:
                                      jsonPath:
                                        description: Json path of return value
                                        type: string
                                    type: object
                                  secrets:
                                    description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                                    items:
                                      properties:
                                        name:
                                          description: Name of this secret in templates
                                          type: string
                                        secretRef:
                                          description: Secret ref to fill in credentials
                                          properties:
                                            key:
                                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                              type: string
                                            name:
                                              description: The name of the Secret resource being referred to.
                                              type: string
                                            namespace:
                                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                              type: string
                                          type: object
                                      required:
                                        - name
                                        - secretRef
                                      type: object
                                    type: array
                                  timeout:
                                    description: Timeout
                                    type: string
                                  url:
                                    description: Webhook url to call
                                    type: string
                                required:
                                  - result
                                  - url
                                type: object
                              yandexlockbox:
                                description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                                properties:
                                  apiEndpoint:
                                    description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                    type: string
                                  auth:
                                    description: Auth defines the information necessary to authenticate against Yandex Lockbox
                                    properties:
                                      authorizedKeySecretRef:
                                        description: The authorized key used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                    properties:
                                      certSecretRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - auth
                                type: object
                            type: object
                          retrySettings:
                            description: Used to configure http retries if failed
                            properties:
                              maxRetries:
                                format: int32
                                type: integer
                              retryInterval:
                                type: string
                            type: object
                        required:
                          - provider
                        type: object
                      status:
                        description: SecretStoreStatus defines the observed state of the SecretStore.
                        properties:
                          conditions:
                            items:
                              properties:
                                lastTransitionTime:
                                  format: date-time
                                  type: string
                                message:
                                  type: string
                                reason:
                                  type: string
                                status:
                                  type: string
                                type:
                                  type: string
                              required:
                                - status
                                - type
                              type: object
                            type: array
                        type: object
                    type: object
                served: true
                storage: false
                subresources:
                  status: {}
              - additionalPrinterColumns:
                  - jsonPath: .metadata.creationTimestamp
                    name: AGE
                    type: date
                  - jsonPath: .status.conditions[?(@.type=="Ready")].reason
                    name: Status
                    type: string
                  - jsonPath: .status.capabilities
                    name: Capabilities
                    type: string
                  - jsonPath: .status.conditions[?(@.type=="Ready")].status
                    name: Ready
                    type: string
                name: v1beta1
                schema:
                  openAPIV3Schema:
                    description: SecretStore represents a secure external location for storing secrets, which can be referenced as part of `storeRef` fields.
                    properties:
                      apiVersion:
                        description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                        type: string
                      kind:
                        description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      metadata:
                        type: object
                      spec:
                        description: SecretStoreSpec defines the desired state of SecretStore.
                        properties:
                          conditions:
                            description: Used to constraint a ClusterSecretStore to specific namespaces. Relevant only to ClusterSecretStore
                            items:
                              description: ClusterSecretStoreCondition describes a condition by which to choose namespaces to process ExternalSecrets in for a ClusterSecretStore instance.
                              properties:
                                namespaceSelector:
                                  description: Choose namespace using a labelSelector
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                          - key
                                          - operator
                                        type: object
                                      type: array
                                    matchLabels:
                                      additionalProperties:
                                        type: string
                                      description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      type: object
                                  type: object
                                  x-kubernetes-map-type: atomic
                                namespaces:
                                  description: Choose namespaces by name
                                  items:
                                    type: string
                                  type: array
                              type: object
                            type: array
                          controller:
                            description: 'Used to select the correct ESO controller (think: ingress.ingressClassName) The ESO controller is instantiated with a specific controller name and filters ES based on this property'
                            type: string
                          provider:
                            description: Used to configure the provider. Only one provider may be set
                            maxProperties: 1
                            minProperties: 1
                            properties:
                              akeyless:
                                description: Akeyless configures this store to sync secrets using Akeyless Vault provider
                                properties:
                                  akeylessGWApiURL:
                                    description: Akeyless GW API Url from which the secrets to be fetched from.
                                    type: string
                                  authSecretRef:
                                    description: Auth configures how the operator authenticates with Akeyless.
                                    properties:
                                      kubernetesAuth:
                                        description: Kubernetes authenticates with Akeyless by passing the ServiceAccount token stored in the named Secret resource.
                                        properties:
                                          accessID:
                                            description: the Akeyless Kubernetes auth-method access-id
                                            type: string
                                          k8sConfName:
                                            description: Kubernetes-auth configuration name in Akeyless-Gateway
                                            type: string
                                          secretRef:
                                            description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Akeyless. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          serviceAccountRef:
                                            description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Akeyless. If the service account selector is not supplied, the secretRef will be used instead.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - accessID
                                          - k8sConfName
                                        type: object
                                      secretRef:
                                        description: Reference to a Secret that contains the details to authenticate with Akeyless.
                                        properties:
                                          accessID:
                                            description: The SecretAccessID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          accessType:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          accessTypeParam:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  caBundle:
                                    description: PEM/base64 encoded CA bundle used to validate Akeyless Gateway certificate. Only used if the AkeylessGWApiURL URL is using HTTPS protocol. If not set the system root certificates are used to validate the TLS connection.
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Akeyless Gateway certificate.
                                    properties:
                                      key:
                                        description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                required:
                                  - akeylessGWApiURL
                                  - authSecretRef
                                type: object
                              alibaba:
                                description: Alibaba configures this store to sync secrets using Alibaba Cloud provider
                                properties:
                                  auth:
                                    description: AlibabaAuth contains a secretRef for credentials.
                                    properties:
                                      rrsa:
                                        description: Authenticate against Alibaba using RRSA.
                                        properties:
                                          oidcProviderArn:
                                            type: string
                                          oidcTokenFilePath:
                                            type: string
                                          roleArn:
                                            type: string
                                          sessionName:
                                            type: string
                                        required:
                                          - oidcProviderArn
                                          - oidcTokenFilePath
                                          - roleArn
                                          - sessionName
                                        type: object
                                      secretRef:
                                        description: AlibabaAuthSecretRef holds secret references for Alibaba credentials.
                                        properties:
                                          accessKeyIDSecretRef:
                                            description: The AccessKeyID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          accessKeySecretSecretRef:
                                            description: The AccessKeySecret is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - accessKeyIDSecretRef
                                          - accessKeySecretSecretRef
                                        type: object
                                    type: object
                                  regionID:
                                    description: Alibaba Region to be used for the provider
                                    type: string
                                required:
                                  - auth
                                  - regionID
                                type: object
                              aws:
                                description: AWS configures this store to sync secrets using AWS Secret Manager provider
                                properties:
                                  additionalRoles:
                                    description: AdditionalRoles is a chained list of Role ARNs which the provider will sequentially assume before assuming the Role
                                    items:
                                      type: string
                                    type: array
                                  auth:
                                    description: 'Auth defines the information necessary to authenticate against AWS if not set aws sdk will infer credentials from your environment see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                                    properties:
                                      jwt:
                                        description: Authenticate against AWS using service account tokens.
                                        properties:
                                          serviceAccountRef:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        type: object
                                      secretRef:
                                        description: AWSAuthSecretRef holds secret references for AWS credentials both AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.
                                        properties:
                                          accessKeyIDSecretRef:
                                            description: The AccessKeyID is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretAccessKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          sessionTokenSecretRef:
                                            description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  externalID:
                                    description: AWS External ID set on assumed IAM roles
                                    type: string
                                  region:
                                    description: AWS Region to be used for the provider
                                    type: string
                                  role:
                                    description: Role is a Role ARN which the provider will assume
                                    type: string
                                  secretsManager:
                                    description: SecretsManager defines how the provider behaves when interacting with AWS SecretsManager
                                    properties:
                                      forceDeleteWithoutRecovery:
                                        description: 'Specifies whether to delete the secret without any recovery window. You can''t use both this parameter and RecoveryWindowInDays in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-ForceDeleteWithoutRecovery'
                                        type: boolean
                                      recoveryWindowInDays:
                                        description: 'The number of days from 7 to 30 that Secrets Manager waits before permanently deleting the secret. You can''t use both this parameter and ForceDeleteWithoutRecovery in the same call. If you don''t use either, then by default Secrets Manager uses a 30 day recovery window. see: https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_DeleteSecret.html#SecretsManager-DeleteSecret-request-RecoveryWindowInDays'
                                        format: int64
                                        type: integer
                                    type: object
                                  service:
                                    description: Service defines which service should be used to fetch the secrets
                                    enum:
                                      - SecretsManager
                                      - ParameterStore
                                    type: string
                                  sessionTags:
                                    description: AWS STS assume role session tags
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - key
                                        - value
                                      type: object
                                    type: array
                                  transitiveTagKeys:
                                    description: AWS STS assume role transitive session tags. Required when multiple rules are used with the provider
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - region
                                  - service
                                type: object
                              azurekv:
                                description: AzureKV configures this store to sync secrets using Azure Key Vault provider
                                properties:
                                  authSecretRef:
                                    description: Auth configures how the operator authenticates with Azure. Required for ServicePrincipal auth type.
                                    properties:
                                      clientId:
                                        description: The Azure clientId of the service principle used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      clientSecret:
                                        description: The Azure ClientSecret of the service principle used for authentication.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  authType:
                                    default: ServicePrincipal
                                    description: 'Auth type defines how to authenticate to the keyvault service. Valid values are: - "ServicePrincipal" (default): Using a service principal (tenantId, clientId, clientSecret) - "ManagedIdentity": Using Managed Identity assigned to the pod (see aad-pod-identity)'
                                    enum:
                                      - ServicePrincipal
                                      - ManagedIdentity
                                      - WorkloadIdentity
                                    type: string
                                  environmentType:
                                    default: PublicCloud
                                    description: 'EnvironmentType specifies the Azure cloud environment endpoints to use for connecting and authenticating with Azure. By default it points to the public cloud AAD endpoint. The following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152 PublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud'
                                    enum:
                                      - PublicCloud
                                      - USGovernmentCloud
                                      - ChinaCloud
                                      - GermanCloud
                                    type: string
                                  identityId:
                                    description: If multiple Managed Identity is assigned to the pod, you can select the one to be used
                                    type: string
                                  serviceAccountRef:
                                    description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  tenantId:
                                    description: TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.
                                    type: string
                                  vaultUrl:
                                    description: Vault Url from which the secrets to be fetched from.
                                    type: string
                                required:
                                  - vaultUrl
                                type: object
                              conjur:
                                description: Conjur configures this store to sync secrets using conjur provider
                                properties:
                                  auth:
                                    properties:
                                      apikey:
                                        properties:
                                          account:
                                            type: string
                                          apiKeyRef:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          userRef:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - account
                                          - apiKeyRef
                                          - userRef
                                        type: object
                                      jwt:
                                        properties:
                                          account:
                                            type: string
                                          secretRef:
                                            description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Conjur using the JWT authentication method.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          serviceAccountRef:
                                            description: Optional ServiceAccountRef specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          serviceID:
                                            description: The conjur authn jwt webservice id
                                            type: string
                                        required:
                                          - account
                                          - serviceID
                                        type: object
                                    type: object
                                  caBundle:
                                    type: string
                                  caProvider:
                                    description: Used to provide custom certificate authority (CA) certificates for a secret store. The CAProvider points to a Secret or ConfigMap resource that contains a PEM-encoded certificate.
                                    properties:
                                      key:
                                        description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  url:
                                    type: string
                                required:
                                  - auth
                                  - url
                                type: object
                              delinea:
                                description: Delinea DevOps Secrets Vault https://docs.delinea.com/online-help/products/devops-secrets-vault/current
                                properties:
                                  clientId:
                                    description: ClientID is the non-secret part of the credential.
                                    properties:
                                      secretRef:
                                        description: SecretRef references a key in a secret that will be used as value.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      value:
                                        description: Value can be specified directly to set a value without using a secret.
                                        type: string
                                    type: object
                                  clientSecret:
                                    description: ClientSecret is the secret part of the credential.
                                    properties:
                                      secretRef:
                                        description: SecretRef references a key in a secret that will be used as value.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      value:
                                        description: Value can be specified directly to set a value without using a secret.
                                        type: string
                                    type: object
                                  tenant:
                                    description: Tenant is the chosen hostname / site name.
                                    type: string
                                  tld:
                                    description: TLD is based on the server location that was chosen during provisioning. If unset, defaults to "com".
                                    type: string
                                  urlTemplate:
                                    description: URLTemplate If unset, defaults to "https://%s.secretsvaultcloud.%s/v1/%s%s".
                                    type: string
                                required:
                                  - clientId
                                  - clientSecret
                                  - tenant
                                type: object
                              doppler:
                                description: Doppler configures this store to sync secrets using the Doppler provider
                                properties:
                                  auth:
                                    description: Auth configures how the Operator authenticates with the Doppler API
                                    properties:
                                      secretRef:
                                        properties:
                                          dopplerToken:
                                            description: The DopplerToken is used for authentication. See https://docs.doppler.com/reference/api#authentication for auth token types. The Key attribute defaults to dopplerToken if not specified.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - dopplerToken
                                        type: object
                                    required:
                                      - secretRef
                                    type: object
                                  config:
                                    description: Doppler config (required if not using a Service Token)
                                    type: string
                                  format:
                                    description: Format enables the downloading of secrets as a file (string)
                                    enum:
                                      - json
                                      - dotnet-json
                                      - env
                                      - yaml
                                      - docker
                                    type: string
                                  nameTransformer:
                                    description: Environment variable compatible name transforms that change secret names to a different format
                                    enum:
                                      - upper-camel
                                      - camel
                                      - lower-snake
                                      - tf-var
                                      - dotnet-env
                                      - lower-kebab
                                    type: string
                                  project:
                                    description: Doppler project (required if not using a Service Token)
                                    type: string
                                required:
                                  - auth
                                type: object
                              fake:
                                description: Fake configures a store with static key/value pairs
                                properties:
                                  data:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        value:
                                          type: string
                                        valueMap:
                                          additionalProperties:
                                            type: string
                                          description: 'Deprecated: ValueMap is deprecated and is intended to be removed in the future, use the `value` field instead.'
                                          type: object
                                        version:
                                          type: string
                                      required:
                                        - key
                                      type: object
                                    type: array
                                required:
                                  - data
                                type: object
                              gcpsm:
                                description: GCPSM configures this store to sync secrets using Google Cloud Platform Secret Manager provider
                                properties:
                                  auth:
                                    description: Auth defines the information necessary to authenticate against GCP
                                    properties:
                                      secretRef:
                                        properties:
                                          secretAccessKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      workloadIdentity:
                                        properties:
                                          clusterLocation:
                                            type: string
                                          clusterName:
                                            type: string
                                          clusterProjectID:
                                            type: string
                                          serviceAccountRef:
                                            description: A reference to a ServiceAccount resource.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - clusterLocation
                                          - clusterName
                                          - serviceAccountRef
                                        type: object
                                    type: object
                                  projectID:
                                    description: ProjectID project where secret is located
                                    type: string
                                type: object
                              gitlab:
                                description: GitLab configures this store to sync secrets using GitLab Variables provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with a GitLab instance.
                                    properties:
                                      SecretRef:
                                        properties:
                                          accessToken:
                                            description: AccessToken is used for authentication.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    required:
                                      - SecretRef
                                    type: object
                                  environment:
                                    description: Environment environment_scope of gitlab CI/CD variables (Please see https://docs.gitlab.com/ee/ci/environments/#create-a-static-environment on how to create environments)
                                    type: string
                                  groupIDs:
                                    description: GroupIDs specify, which gitlab groups to pull secrets from. Group secrets are read from left to right followed by the project variables.
                                    items:
                                      type: string
                                    type: array
                                  inheritFromGroups:
                                    description: InheritFromGroups specifies whether parent groups should be discovered and checked for secrets.
                                    type: boolean
                                  projectID:
                                    description: ProjectID specifies a project where secrets are located.
                                    type: string
                                  url:
                                    description: URL configures the GitLab instance URL. Defaults to https://gitlab.com/.
                                    type: string
                                required:
                                  - auth
                                type: object
                              ibm:
                                description: IBM configures this store to sync secrets using IBM Cloud provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with the IBM secrets manager.
                                    maxProperties: 1
                                    minProperties: 1
                                    properties:
                                      containerAuth:
                                        description: IBM Container-based auth with IAM Trusted Profile.
                                        properties:
                                          iamEndpoint:
                                            type: string
                                          profile:
                                            description: the IBM Trusted Profile
                                            type: string
                                          tokenLocation:
                                            description: Location the token is mounted on the pod
                                            type: string
                                        required:
                                          - profile
                                        type: object
                                      secretRef:
                                        properties:
                                          secretApiKeySecretRef:
                                            description: The SecretAccessKey is used for authentication
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  serviceUrl:
                                    description: ServiceURL is the Endpoint URL that is specific to the Secrets Manager service instance
                                    type: string
                                required:
                                  - auth
                                type: object
                              keepersecurity:
                                description: KeeperSecurity configures this store to sync secrets using the KeeperSecurity provider
                                properties:
                                  authRef:
                                    description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                    properties:
                                      key:
                                        description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                        type: string
                                      name:
                                        description: The name of the Secret resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    type: object
                                  folderID:
                                    type: string
                                required:
                                  - authRef
                                  - folderID
                                type: object
                              kubernetes:
                                description: Kubernetes configures this store to sync secrets using a Kubernetes cluster provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with a Kubernetes instance.
                                    maxProperties: 1
                                    minProperties: 1
                                    properties:
                                      cert:
                                        description: has both clientCert and clientKey as secretKeySelector
                                        properties:
                                          clientCert:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          clientKey:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      serviceAccount:
                                        description: points to a service account that should be used for authentication
                                        properties:
                                          audiences:
                                            description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                            items:
                                              type: string
                                            type: array
                                          name:
                                            description: The name of the ServiceAccount resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      token:
                                        description: use static token to authenticate with
                                        properties:
                                          bearerToken:
                                            description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                    type: object
                                  remoteNamespace:
                                    default: default
                                    description: Remote namespace to fetch the secrets from
                                    type: string
                                  server:
                                    description: configures the Kubernetes server Address.
                                    properties:
                                      caBundle:
                                        description: CABundle is a base64-encoded CA certificate
                                        format: byte
                                        type: string
                                      caProvider:
                                        description: 'see: https://external-secrets.io/v0.4.1/spec/#external-secrets.io/v1alpha1.CAProvider'
                                        properties:
                                          key:
                                            description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                            type: string
                                          name:
                                            description: The name of the object located at the provider type.
                                            type: string
                                          namespace:
                                            description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                            type: string
                                          type:
                                            description: The type of provider to use such as "Secret", or "ConfigMap".
                                            enum:
                                              - Secret
                                              - ConfigMap
                                            type: string
                                        required:
                                          - name
                                          - type
                                        type: object
                                      url:
                                        default: kubernetes.default
                                        description: configures the Kubernetes server Address.
                                        type: string
                                    type: object
                                required:
                                  - auth
                                type: object
                              onepassword:
                                description: OnePassword configures this store to sync secrets using the 1Password Cloud provider
                                properties:
                                  auth:
                                    description: Auth defines the information necessary to authenticate against OnePassword Connect Server
                                    properties:
                                      secretRef:
                                        description: OnePasswordAuthSecretRef holds secret references for 1Password credentials.
                                        properties:
                                          connectTokenSecretRef:
                                            description: The ConnectToken is used for authentication to a 1Password Connect Server.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - connectTokenSecretRef
                                        type: object
                                    required:
                                      - secretRef
                                    type: object
                                  connectHost:
                                    description: ConnectHost defines the OnePassword Connect Server to connect to
                                    type: string
                                  vaults:
                                    additionalProperties:
                                      type: integer
                                    description: Vaults defines which OnePassword vaults to search in which order
                                    type: object
                                required:
                                  - auth
                                  - connectHost
                                  - vaults
                                type: object
                              oracle:
                                description: Oracle configures this store to sync secrets using Oracle Vault provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with the Oracle Vault. If empty, use the instance principal, otherwise the user credentials specified in Auth.
                                    properties:
                                      secretRef:
                                        description: SecretRef to pass through sensitive information.
                                        properties:
                                          fingerprint:
                                            description: Fingerprint is the fingerprint of the API private key.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          privatekey:
                                            description: PrivateKey is the user's API Signing Key in PEM format, used for authentication.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - fingerprint
                                          - privatekey
                                        type: object
                                      tenancy:
                                        description: Tenancy is the tenancy OCID where user is located.
                                        type: string
                                      user:
                                        description: User is an access OCID specific to the account.
                                        type: string
                                    required:
                                      - secretRef
                                      - tenancy
                                      - user
                                    type: object
                                  compartment:
                                    description: Compartment is the vault compartment OCID. Required for PushSecret
                                    type: string
                                  encryptionKey:
                                    description: EncryptionKey is the OCID of the encryption key within the vault. Required for PushSecret
                                    type: string
                                  principalType:
                                    description: The type of principal to use for authentication. If left blank, the Auth struct will determine the principal type. This optional field must be specified if using workload identity.
                                    enum:
                                      - ""
                                      - UserPrincipal
                                      - InstancePrincipal
                                      - Workload
                                    type: string
                                  region:
                                    description: Region is the region where vault is located.
                                    type: string
                                  serviceAccountRef:
                                    description: ServiceAccountRef specified the service account that should be used when authenticating with WorkloadIdentity.
                                    properties:
                                      audiences:
                                        description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                        items:
                                          type: string
                                        type: array
                                      name:
                                        description: The name of the ServiceAccount resource being referred to.
                                        type: string
                                      namespace:
                                        description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                        type: string
                                    required:
                                      - name
                                    type: object
                                  vault:
                                    description: Vault is the vault's OCID of the specific vault where secret is located.
                                    type: string
                                required:
                                  - region
                                  - vault
                                type: object
                              scaleway:
                                description: Scaleway
                                properties:
                                  accessKey:
                                    description: AccessKey is the non-secret part of the api key.
                                    properties:
                                      secretRef:
                                        description: SecretRef references a key in a secret that will be used as value.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      value:
                                        description: Value can be specified directly to set a value without using a secret.
                                        type: string
                                    type: object
                                  apiUrl:
                                    description: APIURL is the url of the api to use. Defaults to https://api.scaleway.com
                                    type: string
                                  projectId:
                                    description: 'ProjectID is the id of your project, which you can find in the console: https://console.scaleway.com/project/settings'
                                    type: string
                                  region:
                                    description: 'Region where your secrets are located: https://developers.scaleway.com/en/quickstart/#region-and-zone'
                                    type: string
                                  secretKey:
                                    description: SecretKey is the non-secret part of the api key.
                                    properties:
                                      secretRef:
                                        description: SecretRef references a key in a secret that will be used as value.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      value:
                                        description: Value can be specified directly to set a value without using a secret.
                                        type: string
                                    type: object
                                required:
                                  - accessKey
                                  - projectId
                                  - region
                                  - secretKey
                                type: object
                              senhasegura:
                                description: Senhasegura configures this store to sync secrets using senhasegura provider
                                properties:
                                  auth:
                                    description: Auth defines parameters to authenticate in senhasegura
                                    properties:
                                      clientId:
                                        type: string
                                      clientSecretSecretRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    required:
                                      - clientId
                                      - clientSecretSecretRef
                                    type: object
                                  ignoreSslCertificate:
                                    default: false
                                    description: IgnoreSslCertificate defines if SSL certificate must be ignored
                                    type: boolean
                                  module:
                                    description: Module defines which senhasegura module should be used to get secrets
                                    type: string
                                  url:
                                    description: URL of senhasegura
                                    type: string
                                required:
                                  - auth
                                  - module
                                  - url
                                type: object
                              vault:
                                description: Vault configures this store to sync secrets using Hashi provider
                                properties:
                                  auth:
                                    description: Auth configures how secret-manager authenticates with the Vault server.
                                    properties:
                                      appRole:
                                        description: AppRole authenticates with Vault using the App Role auth mechanism, with the role and secret stored in a Kubernetes Secret resource.
                                        properties:
                                          path:
                                            default: approle
                                            description: 'Path where the App Role authentication backend is mounted in Vault, e.g: "approle"'
                                            type: string
                                          roleId:
                                            description: RoleID configured in the App Role authentication backend when setting up the authentication backend in Vault.
                                            type: string
                                          roleRef:
                                            description: Reference to a key in a Secret that contains the App Role ID used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role id.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretRef:
                                            description: Reference to a key in a Secret that contains the App Role secret used to authenticate with Vault. The `key` field must be specified and denotes which entry within the Secret resource is used as the app role secret.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - path
                                          - secretRef
                                        type: object
                                      cert:
                                        description: Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate Cert authentication method
                                        properties:
                                          clientCert:
                                            description: ClientCert is a certificate to authenticate using the Cert Vault authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          secretRef:
                                            description: SecretRef to a key in a Secret resource containing client private key to authenticate with Vault using the Cert authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        type: object
                                      iam:
                                        description: Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials AWS IAM authentication method
                                        properties:
                                          externalID:
                                            description: AWS External ID set on assumed IAM roles
                                            type: string
                                          jwt:
                                            description: Specify a service account with IRSA enabled
                                            properties:
                                              serviceAccountRef:
                                                description: A reference to a ServiceAccount resource.
                                                properties:
                                                  audiences:
                                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    description: The name of the ServiceAccount resource being referred to.
                                                    type: string
                                                  namespace:
                                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                    type: string
                                                required:
                                                  - name
                                                type: object
                                            type: object
                                          path:
                                            description: 'Path where the AWS auth method is enabled in Vault, e.g: "aws"'
                                            type: string
                                          region:
                                            description: AWS region
                                            type: string
                                          role:
                                            description: This is the AWS role to be assumed before talking to vault
                                            type: string
                                          secretRef:
                                            description: Specify credentials in a Secret object
                                            properties:
                                              accessKeyIDSecretRef:
                                                description: The AccessKeyID is used for authentication
                                                properties:
                                                  key:
                                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                    type: string
                                                  name:
                                                    description: The name of the Secret resource being referred to.
                                                    type: string
                                                  namespace:
                                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                    type: string
                                                type: object
                                              secretAccessKeySecretRef:
                                                description: The SecretAccessKey is used for authentication
                                                properties:
                                                  key:
                                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                    type: string
                                                  name:
                                                    description: The name of the Secret resource being referred to.
                                                    type: string
                                                  namespace:
                                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                    type: string
                                                type: object
                                              sessionTokenSecretRef:
                                                description: 'The SessionToken used for authentication This must be defined if AccessKeyID and SecretAccessKey are temporary credentials see: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html'
                                                properties:
                                                  key:
                                                    description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                    type: string
                                                  name:
                                                    description: The name of the Secret resource being referred to.
                                                    type: string
                                                  namespace:
                                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                    type: string
                                                type: object
                                            type: object
                                          vaultAwsIamServerID:
                                            description: 'X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws'
                                            type: string
                                          vaultRole:
                                            description: Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine
                                            type: string
                                        required:
                                          - vaultRole
                                        type: object
                                      jwt:
                                        description: Jwt authenticates with Vault by passing role and JWT token using the JWT/OIDC authentication method
                                        properties:
                                          kubernetesServiceAccountToken:
                                            description: Optional ServiceAccountToken specifies the Kubernetes service account for which to request a token for with the `TokenRequest` API.
                                            properties:
                                              audiences:
                                                description: 'Optional audiences field that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Defaults to a single audience `vault` it not specified. Deprecated: use serviceAccountRef.Audiences instead'
                                                items:
                                                  type: string
                                                type: array
                                              expirationSeconds:
                                                description: 'Optional expiration time in seconds that will be used to request a temporary Kubernetes service account token for the service account referenced by `serviceAccountRef`. Deprecated: this will be removed in the future. Defaults to 10 minutes.'
                                                format: int64
                                                type: integer
                                              serviceAccountRef:
                                                description: Service account field containing the name of a kubernetes ServiceAccount.
                                                properties:
                                                  audiences:
                                                    description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                    items:
                                                      type: string
                                                    type: array
                                                  name:
                                                    description: The name of the ServiceAccount resource being referred to.
                                                    type: string
                                                  namespace:
                                                    description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                    type: string
                                                required:
                                                  - name
                                                type: object
                                            required:
                                              - serviceAccountRef
                                            type: object
                                          path:
                                            default: jwt
                                            description: 'Path where the JWT authentication backend is mounted in Vault, e.g: "jwt"'
                                            type: string
                                          role:
                                            description: Role is a JWT role to authenticate using the JWT/OIDC Vault authentication method
                                            type: string
                                          secretRef:
                                            description: Optional SecretRef that refers to a key in a Secret resource containing JWT token to authenticate with Vault using the JWT/OIDC authentication method.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                        required:
                                          - path
                                        type: object
                                      kubernetes:
                                        description: Kubernetes authenticates with Vault by passing the ServiceAccount token stored in the named Secret resource to the Vault server.
                                        properties:
                                          mountPath:
                                            default: kubernetes
                                            description: 'Path where the Kubernetes authentication backend is mounted in Vault, e.g: "kubernetes"'
                                            type: string
                                          role:
                                            description: A required field containing the Vault Role to assume. A Role binds a Kubernetes ServiceAccount with a set of Vault policies.
                                            type: string
                                          secretRef:
                                            description: Optional secret field containing a Kubernetes ServiceAccount JWT used for authenticating with Vault. If a name is specified without a key, `token` is the default. If one is not specified, the one bound to the controller will be used.
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          serviceAccountRef:
                                            description: Optional service account field containing the name of a kubernetes ServiceAccount. If the service account is specified, the service account secret token JWT will be used for authenticating with Vault. If the service account selector is not supplied, the secretRef will be used instead.
                                            properties:
                                              audiences:
                                                description: Audience specifies the `aud` claim for the service account token If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity then this audiences will be appended to the list
                                                items:
                                                  type: string
                                                type: array
                                              name:
                                                description: The name of the ServiceAccount resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                        required:
                                          - mountPath
                                          - role
                                        type: object
                                      ldap:
                                        description: Ldap authenticates with Vault by passing username/password pair using the LDAP authentication method
                                        properties:
                                          path:
                                            default: ldap
                                            description: 'Path where the LDAP authentication backend is mounted in Vault, e.g: "ldap"'
                                            type: string
                                          secretRef:
                                            description: SecretRef to a key in a Secret resource containing password for the LDAP user used to authenticate with Vault using the LDAP authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          username:
                                            description: Username is a LDAP user name used to authenticate using the LDAP Vault authentication method
                                            type: string
                                        required:
                                          - path
                                          - username
                                        type: object
                                      tokenSecretRef:
                                        description: TokenSecretRef authenticates with Vault by presenting a token.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                      userPass:
                                        description: UserPass authenticates with Vault by passing username/password pair
                                        properties:
                                          path:
                                            default: user
                                            description: 'Path where the UserPassword authentication backend is mounted in Vault, e.g: "user"'
                                            type: string
                                          secretRef:
                                            description: SecretRef to a key in a Secret resource containing password for the user used to authenticate with Vault using the UserPass authentication method
                                            properties:
                                              key:
                                                description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                                type: string
                                              name:
                                                description: The name of the Secret resource being referred to.
                                                type: string
                                              namespace:
                                                description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                                type: string
                                            type: object
                                          username:
                                            description: Username is a user name used to authenticate using the UserPass Vault authentication method
                                            type: string
                                        required:
                                          - path
                                          - username
                                        type: object
                                    type: object
                                  caBundle:
                                    description: PEM encoded CA bundle used to validate Vault server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Vault server certificate.
                                    properties:
                                      key:
                                        description: The key where the CA certificate can be found in the Secret or ConfigMap.
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in. Can only be defined when used in a ClusterSecretStore.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  forwardInconsistent:
                                    description: ForwardInconsistent tells Vault to forward read-after-write requests to the Vault leader instead of simply retrying within a loop. This can increase performance if the option is enabled serverside. https://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header
                                    type: boolean
                                  namespace:
                                    description: 'Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows Vault environments to support Secure Multi-tenancy. e.g: "ns1". More about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces'
                                    type: string
                                  path:
                                    description: 'Path is the mount path of the Vault KV backend endpoint, e.g: "secret". The v2 KV secret engine version specific "/data" path suffix for fetching secrets from Vault is optional and will be appended if not present in specified path.'
                                    type: string
                                  readYourWrites:
                                    description: ReadYourWrites ensures isolated read-after-write semantics by providing discovered cluster replication states in each request. More information about eventual consistency in Vault can be found here https://www.vaultproject.io/docs/enterprise/consistency
                                    type: boolean
                                  server:
                                    description: 'Server is the connection address for the Vault server, e.g: "https://vault.example.com:8200".'
                                    type: string
                                  version:
                                    default: v2
                                    description: Version is the Vault KV secret engine version. This can be either "v1" or "v2". Version defaults to "v2".
                                    enum:
                                      - v1
                                      - v2
                                    type: string
                                required:
                                  - auth
                                  - server
                                type: object
                              webhook:
                                description: Webhook configures this store to sync secrets using a generic templated webhook
                                properties:
                                  body:
                                    description: Body
                                    type: string
                                  caBundle:
                                    description: PEM encoded CA bundle used to validate webhook server certificate. Only used if the Server URL is using HTTPS protocol. This parameter is ignored for plain HTTP protocol connection. If not set the system root certificates are used to validate the TLS connection.
                                    format: byte
                                    type: string
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate webhook server certificate.
                                    properties:
                                      key:
                                        description: The key the value inside of the provider type to use, only used with "Secret" type
                                        type: string
                                      name:
                                        description: The name of the object located at the provider type.
                                        type: string
                                      namespace:
                                        description: The namespace the Provider type is in.
                                        type: string
                                      type:
                                        description: The type of provider to use such as "Secret", or "ConfigMap".
                                        enum:
                                          - Secret
                                          - ConfigMap
                                        type: string
                                    required:
                                      - name
                                      - type
                                    type: object
                                  headers:
                                    additionalProperties:
                                      type: string
                                    description: Headers
                                    type: object
                                  method:
                                    description: Webhook Method
                                    type: string
                                  result:
                                    description: Result formatting
                                    properties:
                                      jsonPath:
                                        description: Json path of return value
                                        type: string
                                    type: object
                                  secrets:
                                    description: Secrets to fill in templates These secrets will be passed to the templating function as key value pairs under the given name
                                    items:
                                      properties:
                                        name:
                                          description: Name of this secret in templates
                                          type: string
                                        secretRef:
                                          description: Secret ref to fill in credentials
                                          properties:
                                            key:
                                              description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                              type: string
                                            name:
                                              description: The name of the Secret resource being referred to.
                                              type: string
                                            namespace:
                                              description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                              type: string
                                          type: object
                                      required:
                                        - name
                                        - secretRef
                                      type: object
                                    type: array
                                  timeout:
                                    description: Timeout
                                    type: string
                                  url:
                                    description: Webhook url to call
                                    type: string
                                required:
                                  - result
                                  - url
                                type: object
                              yandexcertificatemanager:
                                description: YandexCertificateManager configures this store to sync secrets using Yandex Certificate Manager provider
                                properties:
                                  apiEndpoint:
                                    description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                    type: string
                                  auth:
                                    description: Auth defines the information necessary to authenticate against Yandex Certificate Manager
                                    properties:
                                      authorizedKeySecretRef:
                                        description: The authorized key used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                    properties:
                                      certSecretRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - auth
                                type: object
                              yandexlockbox:
                                description: YandexLockbox configures this store to sync secrets using Yandex Lockbox provider
                                properties:
                                  apiEndpoint:
                                    description: Yandex.Cloud API endpoint (e.g. 'api.cloud.yandex.net:443')
                                    type: string
                                  auth:
                                    description: Auth defines the information necessary to authenticate against Yandex Lockbox
                                    properties:
                                      authorizedKeySecretRef:
                                        description: The authorized key used for authentication
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                  caProvider:
                                    description: The provider for the CA bundle to use to validate Yandex.Cloud server certificate.
                                    properties:
                                      certSecretRef:
                                        description: A reference to a specific 'key' within a Secret resource, In some instances, `key` is a required field.
                                        properties:
                                          key:
                                            description: The key of the entry in the Secret resource's `data` field to be used. Some instances of this field may be defaulted, in others it may be required.
                                            type: string
                                          name:
                                            description: The name of the Secret resource being referred to.
                                            type: string
                                          namespace:
                                            description: Namespace of the resource being referred to. Ignored if referent is not cluster-scoped. cluster-scoped defaults to the namespace of the referent.
                                            type: string
                                        type: object
                                    type: object
                                required:
                                  - auth
                                type: object
                            type: object
                          refreshInterval:
                            description: Used to configure store refresh interval in seconds. Empty or 0 will default to the controller config.
                            type: integer
                          retrySettings:
                            description: Used to configure http retries if failed
                            properties:
                              maxRetries:
                                format: int32
                                type: integer
                              retryInterval:
                                type: string
                            type: object
                        required:
                          - provider
                        type: object
                      status:
                        description: SecretStoreStatus defines the observed state of the SecretStore.
                        properties:
                          capabilities:
                            description: SecretStoreCapabilities defines the possible operations a SecretStore can do.
                            type: string
                          conditions:
                            items:
                              properties:
                                lastTransitionTime:
                                  format: date-time
                                  type: string
                                message:
                                  type: string
                                reason:
                                  type: string
                                status:
                                  type: string
                                type:
                                  type: string
                              required:
                                - status
                                - type
                              type: object
                            type: array
                        type: object
                    type: object
                served: true
                storage: true
                subresources:
                  status: {}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/__snapshot__/crds_test.yaml.snap
  - content: |
      should match snapshot of default values:
        1: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            labels:
              app.kubernetes.io/instance: RELEASE-NAME
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/name: external-secrets-webhook
              app.kubernetes.io/version: v0.9.11
              helm.sh/chart: external-secrets-0.9.11
            name: RELEASE-NAME-external-secrets-webhook
            namespace: NAMESPACE
          spec:
            replicas: 1
            revisionHistoryLimit: 10
            selector:
              matchLabels:
                app.kubernetes.io/instance: RELEASE-NAME
                app.kubernetes.io/name: external-secrets-webhook
            template:
              metadata:
                labels:
                  app.kubernetes.io/instance: RELEASE-NAME
                  app.kubernetes.io/managed-by: Helm
                  app.kubernetes.io/name: external-secrets-webhook
                  app.kubernetes.io/version: v0.9.11
                  helm.sh/chart: external-secrets-0.9.11
              spec:
                automountServiceAccountToken: true
                containers:
                  - args:
                      - webhook
                      - --port=10250
                      - --dns-name=RELEASE-NAME-external-secrets-webhook.NAMESPACE.svc
                      - --cert-dir=/tmp/certs
                      - --check-interval=5m
                      - --metrics-addr=:8080
                      - --healthz-addr=:8081
                    image: ghcr.io/external-secrets/external-secrets:v0.9.11
                    imagePullPolicy: IfNotPresent
                    name: webhook
                    ports:
                      - containerPort: 8080
                        name: metrics
                        protocol: TCP
                      - containerPort: 10250
                        name: webhook
                        protocol: TCP
                    readinessProbe:
                      httpGet:
                        path: /readyz
                        port: 8081
                      initialDelaySeconds: 20
                      periodSeconds: 5
                    securityContext:
                      allowPrivilegeEscalation: false
                      capabilities:
                        drop:
                          - ALL
                      readOnlyRootFilesystem: true
                      runAsNonRoot: true
                      runAsUser: 1000
                      seccompProfile:
                        type: RuntimeDefault
                    volumeMounts:
                      - mountPath: /tmp/certs
                        name: certs
                        readOnly: true
                hostNetwork: false
                serviceAccountName: external-secrets-webhook
                volumes:
                  - name: certs
                    secret:
                      secretName: RELEASE-NAME-external-secrets-webhook
        2: |
          apiVersion: v1
          kind: Secret
          metadata:
            labels:
              app.kubernetes.io/instance: RELEASE-NAME
              app.kubernetes.io/managed-by: Helm
              app.kubernetes.io/name: external-secrets-webhook
              app.kubernetes.io/version: v0.9.11
              external-secrets.io/component: webhook
              helm.sh/chart: external-secrets-0.9.11
            name: RELEASE-NAME-external-secrets-webhook
            namespace: NAMESPACE
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/__snapshot__/webhook_test.yaml.snap
  - content: |
      suite: test cert controller deployment
      templates:
        - cert-controller-deployment.yaml
      tests:
        - it: should match snapshot of default values
          asserts:
            - matchSnapshot: {}
        - it: should set imagePullPolicy to Always
          set:
            certController.image.pullPolicy: Always
          asserts:
            - equal:
                path: spec.template.spec.containers[0].imagePullPolicy
                value: Always
        - it: should imagePullPolicy to be default value IfNotPresent
          asserts:
            - equal:
                path: spec.template.spec.containers[0].imagePullPolicy
                value: IfNotPresent
        - it: should override securityContext
          set:
            certController.podSecurityContext:
              runAsUser: 2000
            certController.securityContext:
              runAsUser: 3000
          asserts:
            - equal:
                path: spec.template.spec.securityContext
                value:
                  runAsUser: 2000
            - equal:
                path: spec.template.spec.containers[0].securityContext
                value:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 3000
                  seccompProfile:
                    type: RuntimeDefault
        - it: should override hostNetwork
          set:
            certController.hostNetwork: true
          asserts:
            - equal:
                path: spec.template.spec.hostNetwork
                value: true
        - it: should override readinessProbe port
          set:
            certController.readinessProbe.port: 8082
          asserts:
            - equal:
                path: spec.template.spec.containers[0].args[7]
                value: "--healthz-addr=:8082"
        - it: should override metrics port
          set:
            certController.metrics.listen.port: 8888
          asserts:
            - equal:
                path: spec.template.spec.containers[0].args[6]
                value: "--metrics-addr=:8888"
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/cert_controller_test.yaml
  - content: |
      suite: test controller deployment
      templates:
        - deployment.yaml
      tests:
        - it: should match snapshot of default values
          asserts:
            - matchSnapshot: {}
        - it: should set imagePullPolicy to Always
          set:
            image.pullPolicy: Always
          asserts:
            - equal:
                path: spec.template.spec.containers[0].imagePullPolicy
                value: Always
        - it: should imagePullPolicy to be default value IfNotPresent
          asserts:
            - equal:
                path: spec.template.spec.containers[0].imagePullPolicy
                value: IfNotPresent
        - it: should override securityContext
          set:
            podSecurityContext:
              runAsUser: 2000
            securityContext:
              runAsUser: 3000
          asserts:
            - equal:
                path: spec.template.spec.securityContext
                value:
                  runAsUser: 2000
            - equal:
                path: spec.template.spec.containers[0].securityContext
                value:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 3000
                  seccompProfile:
                    type: RuntimeDefault
        - it: should override hostNetwork
          set:
            hostNetwork: true
          asserts:
            - equal:
                path: spec.template.spec.hostNetwork
                value: true
        - it: should override metrics port
          set:
            metrics.listen.port: 8888
          asserts:
            - equal:
                path: spec.template.spec.containers[0].args[1]
                value: "--metrics-addr=:8888"
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/controller_test.yaml
  - content: |
      suite: test crds
      templates:
        - crds/secretstore.yaml
      tests:
        - it: should match snapshot of default values
          asserts:
            - matchSnapshot: {}
        - it: should disable conversion webhook
          set:
            crds.conversion.enabled: false
          asserts:
            - isNull:
                path: spec.conversion

        - it: should add annotations
          set:
            crds:
              annotations:
                foo: bar
                baz: bang
          asserts:
            - equal:
                path: metadata.annotations.foo
                value: bar
            - equal:
                path: metadata.annotations.baz
                value: bang
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/crds_test.yaml
  - content: "suite: test service monitor\ntemplates: \n  - servicemonitor.yaml\ntests:\n
      \ - it: should render service monitor when APIVersions is present and serviceMonitor
      is enabled\n    set:\n      serviceMonitor.enabled: true\n    capabilities:\n
      \     apiVersions:\n        - \"monitoring.coreos.com/v1\"\n    asserts:\n      -
      hasDocuments:\n          count: 6\n  - it: should not render service monitor
      when APIVersions is not present but serviceMonitor is enabled\n    set:\n      serviceMonitor.enabled:
      true\n    asserts:\n      - hasDocuments:\n          count: 0\n  - it: should
      not render service monitor when APIVersions is present and serviceMonitor is
      disabled\n    set:\n      serviceMonitor.enabled: false\n    capabilities:\n
      \     apiVersions:\n        - \"monitoring.coreos.com/v1\"\n    asserts:\n      -
      hasDocuments:\n          count: 0\n  - it: should not render service monitor
      when APIVersions is not present and serviceMonitor is disabled\n    set:\n      serviceMonitor.enabled:
      false\n    asserts:\n      - hasDocuments:\n          count: 0"
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/service_monitor_test.yaml
  - content: |
      suite: test webhook deployment
      templates:
        - webhook-deployment.yaml
        - webhook-secret.yaml
        - webhook-certificate.yaml
        - validatingwebhook.yaml
        - crds/externalsecret.yaml
      tests:
        - it: should match snapshot of default values
          asserts:
            - matchSnapshot: {}
          templates:
            - webhook-deployment.yaml
            - webhook-secret.yaml
            # webhook-certificate.yaml is not rendered by default
        - it: should set imagePullPolicy to Always
          set:
            webhook.image.pullPolicy: Always
          asserts:
            - equal:
                path: spec.template.spec.containers[0].imagePullPolicy
                value: Always
          template: webhook-deployment.yaml
        - it: should imagePullPolicy to be default value IfNotPresent
          asserts:
            - equal:
                path: spec.template.spec.containers[0].imagePullPolicy
                value: IfNotPresent
          template: webhook-deployment.yaml
        - it: should override securityContext
          set:
            webhook.podSecurityContext:
              runAsUser: 2000
            webhook.securityContext:
              runAsUser: 3000
          asserts:
            - equal:
                path: spec.template.spec.securityContext
                value:
                  runAsUser: 2000
            - equal:
                path: spec.template.spec.containers[0].securityContext
                value:
                  allowPrivilegeEscalation: false
                  capabilities:
                    drop:
                      - ALL
                  readOnlyRootFilesystem: true
                  runAsNonRoot: true
                  runAsUser: 3000
                  seccompProfile:
                    type: RuntimeDefault
          template: webhook-deployment.yaml
        - it: should override hostNetwork
          set:
            webhook.hostNetwork: true
          asserts:
            - equal:
                path: spec.template.spec.hostNetwork
                value: true
          template: webhook-deployment.yaml
        - it: should create a certificate CRD
          set:
            webhook.certManager.enabled: true
            webhook.certManager.cert.duration: "10d"
            webhook.certManager.cert.renewBefore: "5d"
          asserts:
            - equal:
                path: metadata.name
                value: "RELEASE-NAME-external-secrets-webhook"
            - equal:
                path: spec.secretName
                value: "RELEASE-NAME-external-secrets-webhook"
            - equal:
                path: spec.commonName
                value: "RELEASE-NAME-external-secrets-webhook"
            - equal:
                path: spec.dnsNames[0]
                value: "RELEASE-NAME-external-secrets-webhook"
            - equal:
                path: spec.issuerRef.group
                value: "cert-manager.io"
            - equal:
                path: spec.issuerRef.kind
                value: "Issuer"
            - equal:
                path: spec.issuerRef.name
                value: "my-issuer"
            - equal:
                path: spec.duration
                value: "10d"
            - equal:
                path: spec.renewBefore
                value: "5d"
            - hasDocuments:
                count: 1
          templates:
            - webhook-certificate.yaml
        - it: should not create the webhook secret
          set:
            webhook.certManager.enabled: true
          asserts:
            - hasDocuments:
                count: 0
          template: webhook-secret.yaml
        - it: should not create the secret nor the certificate
          set:
            webhook.certManager.enabled: true
            webhook.certManager.cert.create: false
          asserts:
            - hasDocuments:
                count: 0
          templates:
            - webhook-secret.yaml
            - webhook-certificate.yaml
        - it: should
          set:
            webhook.certManager.enabled: true
          asserts:
            - equal:
                path: metadata.name
                value: "RELEASE-NAME-external-secrets-webhook"
            - hasDocuments:
                count: 1
          template: webhook-certificate.yaml
        - it: should allow using a cluster issuer
          set:
            webhook.certManager.enabled: true
            webhook.certManager.cert.issuerRef.kind: ClusterIssuer
            webhook.certManager.cert.issuerRef.name: my-other-issuer
          asserts:
            - equal:
                path: spec.issuerRef.kind
                value: "ClusterIssuer"
            - equal:
                path: spec.issuerRef.name
                value: "my-other-issuer"
          templates:
            - webhook-certificate.yaml
        - it: should add annotations to the webhook
          set:
            webhook.create: true
            webhook.certManager.enabled: true
            webhook.certManager.addInjectorAnnotations: true
          asserts:
            - equal:
                path: metadata.annotations["cert-manager.io/inject-ca-from"]
                value: "NAMESPACE/RELEASE-NAME-external-secrets-webhook"
          templates:
            - validatingwebhook.yaml
            - crds/externalsecret.yaml
        - it: should not add annotations to the webhook
          set:
            webhook.create: true
            webhook.certManager.enabled: true
            webhook.certManager.addInjectorAnnotations: false
          asserts:
            - isNull:
                path: metadata.annotations["cert-manager.io/inject-ca-from"]
                # value: "NAMESPACE/RELEASE-NAME-external-secrets-webhook"
          templates:
            - validatingwebhook.yaml
            - crds/externalsecret.yaml
        - it: should override metrics port
          set:
            webhook.metrics.listen.port: 8888
          templates:
            - webhook-deployment.yaml
          asserts:
            - equal:
                path: spec.template.spec.containers[0].args[5]
                value: "--metrics-addr=:8888"
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/tests/webhook_test.yaml
  - content: |
      replicaCount: 1

      # -- Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy)
      revisionHistoryLimit: 10

      image:
        repository: ghcr.io/external-secrets/external-secrets
        pullPolicy: IfNotPresent
        # -- The image tag to use. The default is the chart appVersion.
        # There are different image flavours available, like distroless and ubi.
        # Please see GitHub release notes for image tags for these flavors.
        # By default the distroless image is used.
        tag: ""

      # -- If set, install and upgrade CRDs through helm chart.
      installCRDs: true

      crds:
        # -- If true, create CRDs for Cluster External Secret.
        createClusterExternalSecret: true
        # -- If true, create CRDs for Cluster Secret Store.
        createClusterSecretStore: true
        # -- If true, create CRDs for Push Secret.
        createPushSecret: true
        annotations: {}
        conversion:
          enabled: true

      imagePullSecrets: []
      nameOverride: ""
      fullnameOverride: ""

      # -- Additional labels added to all helm chart resources.
      commonLabels: {}

      # -- If true, external-secrets will perform leader election between instances to ensure no more
      # than one instance of external-secrets operates at a time.
      leaderElect: false

      # -- If set external secrets will filter matching
      # Secret Stores with the appropriate controller values.
      controllerClass: ""

      # -- If true external secrets will use recommended kubernetes
      # annotations as prometheus metric labels.
      extendedMetricLabels: false

      # -- If set external secrets are only reconciled in the
      # provided namespace
      scopedNamespace: ""

      # -- Must be used with scopedNamespace. If true, create scoped RBAC roles under the scoped namespace
      # and implicitly disable cluster stores and cluster external secrets
      scopedRBAC: false

      # -- if true, the operator will process cluster external secret. Else, it will ignore them.
      processClusterExternalSecret: true

      # -- if true, the operator will process cluster store. Else, it will ignore them.
      processClusterStore: true

      # -- if true, the operator will process push secret. Else, it will ignore them.
      processPushSecret: true

      # -- Specifies whether an external secret operator deployment be created.
      createOperator: true

      # -- Specifies the number of concurrent ExternalSecret Reconciles external-secret executes at
      # a time.
      concurrent: 1

      serviceAccount:
        # -- Specifies whether a service account should be created.
        create: true
        # -- Automounts the service account token in all containers of the pod
        automount: true
        # -- Annotations to add to the service account.
        annotations: {}
        # -- Extra Labels to add to the service account.
        extraLabels: {}
        # -- The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template.
        name: ""

      rbac:
        # -- Specifies whether role and rolebinding resources should be created.
        create: true

        servicebindings:
          # -- Specifies whether a clusterrole to give servicebindings read access should be created.
          create: true

      ## -- Extra environment variables to add to container.
      extraEnv: []

      ## -- Map of extra arguments to pass to container.
      extraArgs: {}

      ## -- Extra volumes to pass to pod.
      extraVolumes: []

      ## -- Extra volumes to mount to the container.
      extraVolumeMounts: []

      ## -- Extra containers to add to the pod.
      extraContainers: []

      # -- Annotations to add to Deployment
      deploymentAnnotations: {}

      # -- Annotations to add to Pod
      podAnnotations: {}

      podLabels: {}

      podSecurityContext: {}
        # fsGroup: 2000

      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault

      resources: {}
        # requests:
        #   cpu: 10m
        #   memory: 32Mi

      serviceMonitor:
        # -- Specifies whether to create a ServiceMonitor resource for collecting Prometheus metrics
        enabled: false

        # -- namespace where you want to install ServiceMonitors
        namespace: ""

        # -- Additional labels
        additionalLabels: {}

        # --  Interval to scrape metrics
        interval: 30s

        # -- Timeout if metrics can't be retrieved in given time interval
        scrapeTimeout: 25s

        # -- Let prometheus add an exported_ prefix to conflicting labels
        honorLabels: false

        # -- Metric relabel configs to apply to samples before ingestion. [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)
        metricRelabelings: []
        # - action: replace
        #   regex: (.*)
        #   replacement: $1
        #   sourceLabels:
        #   - exported_namespace
        #   targetLabel: namespace

        # -- Relabel configs to apply to samples before ingestion. [Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config)
        relabelings: []
        # - sourceLabels: [__meta_kubernetes_pod_node_name]
        #   separator: ;
        #   regex: ^(.*)$
        #   targetLabel: nodename
        #   replacement: $1
        #   action: replace

      metrics:

        listen:
          port: 8080

        service:
          # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
          enabled: false

          # -- Metrics service port to scrape
          port: 8080

          # -- Additional service annotations
          annotations: {}

      nodeSelector: {}

      tolerations: []

      topologySpreadConstraints: []

      affinity: {}

      # -- Pod priority class name.
      priorityClassName: ""

      # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
      podDisruptionBudget:
        enabled: false
        minAvailable: 1
        # maxUnavailable: 1

      # -- Run the controller on the host network
      hostNetwork: false

      webhook:
        # -- Specifies whether a webhook deployment be created.
        create: true
        # -- Specifices the time to check if the cert is valid
        certCheckInterval: "5m"
        # -- Specifices the lookaheadInterval for certificate validity
        lookaheadInterval: ""
        replicaCount: 1

        # -- Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy)
        revisionHistoryLimit: 10

        certDir: /tmp/certs
        # -- Specifies whether validating webhooks should be created with failurePolicy: Fail or Ignore
        failurePolicy: Fail
        # -- Specifies if webhook pod should use hostNetwork or not.
        hostNetwork: false
        image:
          repository: ghcr.io/external-secrets/external-secrets
          pullPolicy: IfNotPresent
        # -- The image tag to use. The default is the chart appVersion.
          tag: ""
        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""
        # -- The port the webhook will listen to
        port: 10250
        rbac:
        # -- Specifies whether role and rolebinding resources should be created.
          create: true
        serviceAccount:
          # -- Specifies whether a service account should be created.
          create: true
          # -- Automounts the service account token in all containers of the pod
          automount: true
          # -- Annotations to add to the service account.
          annotations: {}
          # -- Extra Labels to add to the service account.
          extraLabels: {}
          # -- The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template.
          name: ""
        nodeSelector: {}

        certManager:
          # -- Enabling cert-manager support will disable the built in secret and
          # switch to using cert-manager (installed separately) to automatically issue
          # and renew the webhook certificate. This chart does not install
          # cert-manager for you, See https://cert-manager.io/docs/
          enabled: false
          # -- Automatically add the cert-manager.io/inject-ca-from annotation to the
          # webhooks and CRDs. As long as you have the cert-manager CA Injector
          # enabled, this will automatically setup your webhook's CA to the one used
          # by cert-manager. See https://cert-manager.io/docs/concepts/ca-injector
          addInjectorAnnotations: true
          cert:
            # -- Create a certificate resource within this chart. See
            # https://cert-manager.io/docs/usage/certificate/
            create: true
            # -- For the Certificate created by this chart, setup the issuer. See
            # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.IssuerSpec
            issuerRef:
              group: cert-manager.io
              kind: "Issuer"
              name: "my-issuer"
            # -- Set the requested duration (i.e. lifetime) of the Certificate. See
            # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec
            duration: ""
            # -- How long before the currently issued certificate’s expiry
            # cert-manager should renew the certificate. See
            # https://cert-manager.io/docs/reference/api-docs/#cert-manager.io/v1.CertificateSpec
            # Note that renewBefore should be greater than .webhook.lookaheadInterval
            # since the webhook will check this far in advance that the certificate is
            # valid.
            renewBefore: ""
            # -- Add extra annotations to the Certificate resource.
            annotations: {}

        tolerations: []

        topologySpreadConstraints: []

        affinity: {}

          # -- Pod priority class name.
        priorityClassName: ""

        # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
        podDisruptionBudget:
          enabled: false
          minAvailable: 1
          # maxUnavailable: 1

        metrics:

          listen:
            port: 8080

          service:
            # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
            enabled: false

            # -- Metrics service port to scrape
            port: 8080

            # -- Additional service annotations
            annotations: {}


        readinessProbe:
          # -- Address for readiness probe
          address: ""
          # -- ReadinessProbe port for kubelet
          port: 8081


          ## -- Extra environment variables to add to container.
        extraEnv: []

          ## -- Map of extra arguments to pass to container.
        extraArgs: {}

          ## -- Extra volumes to pass to pod.
        extraVolumes: []

          ## -- Extra volumes to mount to the container.
        extraVolumeMounts: []

          # -- Annotations to add to Secret
        secretAnnotations: {}

          # -- Annotations to add to Deployment
        deploymentAnnotations: {}

          # -- Annotations to add to Pod
        podAnnotations: {}

        podLabels: {}

        podSecurityContext: {}
            # fsGroup: 2000

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault

        resources: {}
            # requests:
            #   cpu: 10m
            #   memory: 32Mi

      certController:
        # -- Specifies whether a certificate controller deployment be created.
        create: true
        requeueInterval: "5m"
        replicaCount: 1

        # -- Specifies the amount of historic ReplicaSets k8s should keep (see https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#clean-up-policy)
        revisionHistoryLimit: 10

        image:
          repository: ghcr.io/external-secrets/external-secrets
          pullPolicy: IfNotPresent
          tag: ""
        imagePullSecrets: []
        nameOverride: ""
        fullnameOverride: ""
        rbac:
        # -- Specifies whether role and rolebinding resources should be created.
          create: true
        serviceAccount:
          # -- Specifies whether a service account should be created.
          create: true
          # -- Automounts the service account token in all containers of the pod
          automount: true
          # -- Annotations to add to the service account.
          annotations: {}
          # -- Extra Labels to add to the service account.
          extraLabels: {}
          # -- The name of the service account to use.
          # If not set and create is true, a name is generated using the fullname template.
          name: ""
        nodeSelector: {}

        tolerations: []

        topologySpreadConstraints: []

        affinity: {}

        # -- Run the certController on the host network
        hostNetwork: false

          # -- Pod priority class name.
        priorityClassName: ""

        # -- Pod disruption budget - for more details see https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
        podDisruptionBudget:
          enabled: false
          minAvailable: 1
          # maxUnavailable: 1

        metrics:

          listen:
            port: 8080

          service:
            # -- Enable if you use another monitoring tool than Prometheus to scrape the metrics
            enabled: false

            # -- Metrics service port to scrape
            port: 8080

            # -- Additional service annotations
            annotations: {}

        readinessProbe:
          # -- Address for readiness probe
          address: ""
          # -- ReadinessProbe port for kubelet
          port: 8081

          ## -- Extra environment variables to add to container.
        extraEnv: []

          ## -- Map of extra arguments to pass to container.
        extraArgs: {}


          ## -- Extra volumes to pass to pod.
        extraVolumes: []

          ## -- Extra volumes to mount to the container.
        extraVolumeMounts: []

          # -- Annotations to add to Deployment
        deploymentAnnotations: {}

          # -- Annotations to add to Pod
        podAnnotations: {}

        podLabels: {}

        podSecurityContext: {}
            # fsGroup: 2000

        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault

        resources: {}
            # requests:
            #   cpu: 10m
            #   memory: 32Mi

      # -- Specifies `dnsOptions` to deployment
      dnsConfig: {}

      # -- Any extra pod spec on the deployment
      podSpecExtra: {}
    name: .chart/d07aa8e35c466e1f6f22de6df68728e94bbdd7cf7a08f44de6f46239240a764b/external-secrets/values.yaml
  - content: |
      defaultNamespace: external-secrets
      helm:
        repo: https://charts.external-secrets.io
        chart: external-secrets
    name: fleet.yaml
  targets:
  - clusterSelector: {}
    ignore: {}
